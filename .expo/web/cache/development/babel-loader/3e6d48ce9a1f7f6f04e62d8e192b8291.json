{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/thecoder/Documentos/votark/votark/node_modules/react-native-loader/src/Bubbles.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { ART } from \"react-native-web/dist/index\";\nvar Surface = ART.Surface;\nimport Circle from \"./animated/Circle\";\n\nvar Bubbles = function (_Component) {\n  _inherits(Bubbles, _Component);\n\n  var _super = _createSuper(Bubbles);\n\n  function Bubbles() {\n    var _this;\n\n    _classCallCheck(this, Bubbles);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      circles: [new Animated.Value(0), new Animated.Value(0), new Animated.Value(0)]\n    };\n    _this.timers = [];\n    return _this;\n  }\n\n  _createClass(Bubbles, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.state.circles.forEach(function (val, index) {\n        var timer = setTimeout(function () {\n          return _this2.animate(index);\n        }, index * 300);\n\n        _this2.timers.push(timer);\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.timers.forEach(function (timer) {\n        clearTimeout(timer);\n      });\n      this.unmounted = true;\n    }\n  }, {\n    key: \"animate\",\n    value: function animate(index) {\n      var _this3 = this;\n\n      Animated.sequence([Animated.timing(this.state.circles[index], {\n        toValue: 1,\n        duration: 600\n      }), Animated.timing(this.state.circles[index], {\n        toValue: 0,\n        duration: 600\n      })]).start(function () {\n        if (!_this3.unmounted) {\n          _this3.animate(index);\n        }\n      });\n    }\n  }, {\n    key: \"renderBubble\",\n    value: function renderBubble(index) {\n      var _this$props = this.props,\n          size = _this$props.size,\n          spaceBetween = _this$props.spaceBetween,\n          color = _this$props.color;\n      var scale = this.state.circles[index];\n      var offset = {\n        x: size + index * (size * 2 + spaceBetween),\n        y: size\n      };\n      return React.createElement(Circle, _extends({\n        fill: color,\n        radius: size,\n        scale: scale\n      }, offset, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          size = _this$props2.size,\n          spaceBetween = _this$props2.spaceBetween;\n      var width = size * 6 + spaceBetween * 2;\n      var height = size * 2;\n      return React.createElement(Surface, {\n        width: width,\n        height: height,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }\n      }, this.renderBubble(0), this.renderBubble(1), this.renderBubble(2));\n    }\n  }]);\n\n  return Bubbles;\n}(Component);\n\nBubbles.propTypes = {\n  size: PropTypes.number,\n  color: PropTypes.string,\n  spaceBetween: PropTypes.number\n};\nBubbles.defaultProps = {\n  spaceBetween: 6,\n  size: 11,\n  color: '#000'\n};\nexport { Bubbles as default };","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/node_modules/react-native-loader/src/Bubbles.js"],"names":["React","Component","PropTypes","ART","Surface","Circle","Bubbles","state","circles","Animated","Value","timers","forEach","val","index","timer","setTimeout","animate","push","clearTimeout","unmounted","sequence","timing","toValue","duration","start","props","size","spaceBetween","color","scale","offset","x","y","width","height","renderBubble","propTypes","number","string","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Animated, ART } from 'react-native';\nconst { Surface } = ART;\n\nimport Circle from './animated/Circle';\n\nexport default class Bubbles extends Component {\n  static propTypes = {\n    size: PropTypes.number,\n    color: PropTypes.string,\n    spaceBetween: PropTypes.number\n  };\n\n  static defaultProps = {\n    spaceBetween: 6,\n    size: 11,\n    color: '#000'\n  };\n\n  state = {\n    circles: [\n      new Animated.Value(0),\n      new Animated.Value(0),\n      new Animated.Value(0)\n    ]\n  };\n\n  componentDidMount() {\n    this.state.circles.forEach((val, index) => {\n      const timer = setTimeout(() => this.animate(index), index * 300);\n      this.timers.push(timer);\n    });\n  }\n\n  componentWillUnmount() {\n    this.timers.forEach((timer) => {\n      clearTimeout(timer);\n    });\n\n    this.unmounted = true;\n  }\n\n  timers = [];\n\n  animate(index) {\n    Animated\n      .sequence([\n        Animated.timing(this.state.circles[index], {\n          toValue: 1,\n          duration: 600\n        }),\n        Animated.timing(this.state.circles[index], {\n          toValue: 0,\n          duration: 600\n        })\n      ])\n      .start(() => {\n        if (!this.unmounted) {\n          this.animate(index);\n        }\n      });\n  }\n\n  renderBubble(index) {\n    const { size, spaceBetween, color } = this.props;\n    const scale = this.state.circles[index];\n    const offset = {\n      x: size + index * (size * 2 + spaceBetween),\n      y: size\n    };\n\n    return (<Circle\n      fill={color}\n      radius={size}\n      scale={scale}\n      {...offset}\n    />);\n  }\n\n  render() {\n    const { size, spaceBetween } = this.props;\n    const width = size * 6 + spaceBetween * 2;\n    const height = size * 2;\n\n    return (<Surface width={width} height={height}>\n      {this.renderBubble(0)}\n      {this.renderBubble(1)}\n      {this.renderBubble(2)}\n    </Surface>);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}