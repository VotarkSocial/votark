{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/thecoder/Documentos/votark/votark/src/components/Login/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { connect } from 'react-redux';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { TouchableOpacit } from \"react-native-web/dist/index\";\nimport * as actions from \"../../actions/auth\";\nimport * as selectors from \"../../reducers\";\nimport React, { useState } from 'react';\nimport styles from \"./styles\";\nimport { colors } from \"../../../configuration\";\nimport { Link } from \"react-router-dom\";\nimport { Actions } from 'react-native-router-flux';\nimport { normalize } from \"../../utils/normalize\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { URL } from \"../../../configuration\";\nimport Spinner from 'react-native-loading-spinner-overlay';\nimport { reduxForm, Field, Form } from 'redux-form';\n\nvar Login = function Login(props) {\n  var handleSubmit = props.handleSubmit,\n      submit = props.submit,\n      isLoading = props.isLoading,\n      error = props.error;\n  console.log(isLoading, error);\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, React.createElement(LinearGradient, {\n    colors: [colors.primary, 'transparent'],\n    style: {\n      width: '100%',\n      height: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.centered,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    style: styles.logo,\n    source: require(\"../../public/static/img/logo.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), React.createElement(Field, {\n    name: \"username\",\n    component: TextInput,\n    style: styles.input,\n    type: \"text\",\n    placeholder: 'username',\n    validate: [function (val) {\n      return val ? undefined : 'Username field is required';\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, React.createElement(Field, {\n    name: \"password\",\n    component: TextInput,\n    style: styles.input,\n    type: \"password\",\n    placeholder: 'password',\n    validate: [function (val) {\n      return val ? undefined : 'Password field is required';\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.option,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"Did you forget your password? \"), typeof document === 'undefined' ? React.createElement(Text, {\n    style: styles.link,\n    title: ' reset password ',\n    type: \"submit\",\n    onPress: function onPress() {\n      return Actions.ResetPassword(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, ' reset password ') : React.createElement(Link, {\n    to: \"/reset-password\",\n    style: styles.navItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, ' reset password '))), React.createElement(View, {\n    style: styles.errors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, error && React.createElement(Text, {\n    style: styles.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, error), \"}\", isLoading ? React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, 'LOADING...')) : React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    type: \"submit\",\n    onPress: handleSubmit(submit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }\n  }, 'LOGIN')), React.createElement(View, {\n    style: styles.option,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, \"Do you have an account?  \"), typeof document === 'undefined' ? React.createElement(Text, {\n    style: styles.link,\n    title: ' register now ',\n    type: \"submit\",\n    onPress: function onPress() {\n      return Actions.SignUp(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, ' register now ') : React.createElement(Link, {\n    to: \"/signup\",\n    style: styles.navItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 23\n    }\n  }, ' register now')))))))));\n};\n\nexport default reduxForm(function (state) {\n  return {\n    isLoading: selectors.getIsAuthenticating(state),\n    error: selectors.getAuthenticatingError(state),\n    isAuthenticated: selectors.isAuthenticated(state)\n  };\n}, function (dispatch) {\n  return {\n    submit: function submit(data) {\n      console.log(data);\n\n      if (username && password) {\n        dispatch(actions.startLogin(username, password));\n      } else if (!username) {\n        dispatch(actions.failLogin('WRITE A VALID USERNAME'));\n      } else if (!password) {\n        dispatch(actions.failLogin('WRITE A VALID PASSWORD'));\n      }\n    }\n  };\n}, function (stateToProps, disptachToProps) {\n  if (stateToProps.isAuthenticated) {\n    if (typeof document !== 'undefined') {\n      window.location.href = URL;\n    } else {\n      Actions.Home(true);\n    }\n  }\n\n  return _objectSpread(_objectSpread({}, disptachToProps), stateToProps);\n})(Login);","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/src/components/Login/index.js"],"names":["connect","TouchableOpacit","actions","selectors","React","useState","styles","colors","Link","Actions","normalize","LinearGradient","URL","Spinner","reduxForm","Field","Form","Login","props","handleSubmit","submit","isLoading","error","console","log","container","primary","width","height","alignItems","justifyContent","centered","logo","require","TextInput","input","val","undefined","option","text","document","link","ResetPassword","navItem","errors","button","SignUp","state","getIsAuthenticating","getAuthenticatingError","isAuthenticated","dispatch","data","username","password","startLogin","failLogin","stateToProps","disptachToProps","window","location","href","Home"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport { Text, View, TextInput, Button, Image, TouchableOpacit } from 'react-native';\nimport * as actions from '../../actions/auth';\nimport * as selectors from '../../reducers';\nimport React, { useState } from 'react';\nimport styles from './styles'\nimport { colors } from '../../../configuration';\nimport { Link } from \"react-router-dom\";\nimport { Actions } from 'react-native-router-flux';\nimport { normalize } from '../../utils/normalize';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { URL } from '../../../configuration'\nimport Spinner from 'react-native-loading-spinner-overlay';\nimport {reduxForm, Field, Form } from 'redux-form'\n\nconst Login = props => {\n  const { handleSubmit,\n    submit,\n    isLoading,\n    error,\n   } = props\n\n   console.log(isLoading,error)\n  return (\n    <View style={styles.container}>\n      <LinearGradient\n          colors={[colors.primary, 'transparent']}\n          style={{\n            width: '100%',\n            height: '100%',\n            alignItems: 'center',\n            justifyContent: 'center'\n          }}\n        >\n      <View style={styles.centered}>\n      <Image style={styles.logo} source={require('../../public/static/img/logo.png')} ></Image>\n      <Field name=\"username\" component={TextInput} style={styles.input} type='text' placeholder={'username'} \n      validate={[\n        (val) => val ? undefined : 'Username field is required',\n      ]} />\n      <Form>\n      <Field name=\"password\" component={TextInput} style={styles.input} type='password' placeholder={'password'}\n      validate={[\n        (val) => val ? undefined : 'Password field is required',\n      ]} />\n      <View style={styles.option}>\n        <Text style={styles.text} >{\"Did you forget your password? \"}</Text>\n        {\n          (typeof document === 'undefined')?(\n            <Text style={styles.link} title={' reset password '} type=\"submit\" \n            onPress={() =>\n              Actions.ResetPassword(true)\n            }>{' reset password '}</Text>\n          ):(\n            <Link to=\"/reset-password\" style={styles.navItem}>\n              <Text style={styles.text}>{' reset password '}</Text>\n            </Link>\n          )\n        }\n        \n      </View>\n      <View style={styles.errors}>\n        {\n        error && (\n            <Text style={styles.error}>{ error }</Text>\n        )\n      }}\n        {\n          isLoading ? (\n            <View>\n              <Text style={styles.error}>{'LOADING...'}</Text>\n            </View>\n          ) : (\n            <View> \n              <View style={styles.button}>\n                  <Text style={styles.button} type=\"submit\" onPress={\n                      handleSubmit(submit)\n                  }>{'LOGIN'}</Text>\n              </View>\n              <View style={styles.option}>\n                <Text style={styles.text} >{\"Do you have an account?  \"}</Text>\n                {\n                  (typeof document === 'undefined')?(\n                    <Text style={styles.link} title={' register now '} type=\"submit\" \n                    onPress={() =>\n                      Actions.SignUp(true)\n                    }>{' register now '}</Text>\n                  ):(\n                    <Link to=\"/signup\" style={styles.navItem}>\n                      <Text style={styles.text}>{' register now'}</Text>\n                    </Link>\n                  )\n                }\n                \n              </View>\n            </View>\n          )\n        }\n      </View>\n      </Form>\n      </View>\n      </LinearGradient>\n    </View>\n  );\n} \n\nexport default reduxForm(\n  state => ({\n    isLoading: selectors.getIsAuthenticating(state),\n    error: selectors.getAuthenticatingError(state),\n    isAuthenticated: selectors.isAuthenticated(state),\n  }),\n  dispatch => ({\n    submit(data) {\n      console.log(data)\n      if(username && password){\n        dispatch(actions.startLogin(username, password))\n      }\n      else if(!username){\n        dispatch(actions.failLogin('WRITE A VALID USERNAME'))\n      }\n      else if(!password){\n        dispatch(actions.failLogin('WRITE A VALID PASSWORD'))\n      }\n    },\n  }),\n  (stateToProps,disptachToProps) => {\n    if(stateToProps.isAuthenticated){\n      if(typeof document !== 'undefined'){\n        window.location.href = URL\n      }\n      else{\n        Actions.Home(true)\n      }\n    }\n    return ({...disptachToProps,...stateToProps})\n  }\n)(Login);"]},"metadata":{},"sourceType":"module"}