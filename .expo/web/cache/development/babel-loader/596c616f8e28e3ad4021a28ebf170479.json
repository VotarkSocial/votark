{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/thecoder/Documentos/votark/votark/src/components/Comments/index.js\";\nimport { connect } from 'react-redux';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport * as selectors from \"../../reducers\";\nimport React, { useState } from 'react';\nimport styles from \"./styles\";\nimport { URL } from \"../../../configuration\";\nimport { Actions } from 'react-native-router-flux';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { colors } from \"../../../configuration\";\nimport Header from \"../Header\";\nimport Stories from \"../Stories\";\nimport NavBar from \"../NavBar\";\nimport VersusPad from \"../VersusPad\";\n\nvar Comments = function Comments() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      comment = _useState2[0],\n      changeComment = _useState2[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: styles.comments,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.send,\n    type: \"submit\",\n    onPress: function onPress() {\n      return Actions.ResetPassword(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, ' Send '), React.createElement(TextInput, {\n    style: styles.input,\n    className: \"user\",\n    type: \"text\",\n    placeholder: \"Write a Comment...\",\n    value: comment,\n    onChangeText: changeComment,\n    onChange: function onChange(e) {\n      return changeComment(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default connect(function (state) {\n  return {\n    isAuthenticated: selectors.isAuthenticated(state)\n  };\n}, undefined, function (stateToProps, disptachToProps) {\n  if (stateToProps.isAuthenticated) {\n    if (typeof document !== 'undefined') {\n      window.location.href = URL + 'login/';\n    } else {\n      Actions.Login(true);\n    }\n  }\n\n  return {\n    isAuthenticated: stateToProps.isAuthenticated\n  };\n})(Comments);","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/src/components/Comments/index.js"],"names":["connect","selectors","React","useState","styles","URL","Actions","LinearGradient","colors","Header","Stories","NavBar","VersusPad","Comments","comment","changeComment","container","comments","send","ResetPassword","input","e","target","value","state","isAuthenticated","undefined","stateToProps","disptachToProps","document","window","location","href","Login"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,aAAxB;;;;;AAEA,OAAO,KAAKC,SAAZ;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP;AACA,SAASC,GAAT;AACA,SAASC,OAAT,QAAwB,0BAAxB;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,MAAT;AACA,OAAOC,MAAP;AACA,OAAOC,OAAP;AACA,OAAOC,MAAP;AACA,OAAOC,SAAP;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA,kBACcV,QAAQ,CAAC,EAAD,CADtB;AAAA;AAAA,MACZW,OADY;AAAA,MACHC,aADG;;AAEnB,SACF,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEX,MAAM,CAACY,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEZ,MAAM,CAACa,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAII,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEb,MAAM,CAACc,IAApB;AAA0B,IAAA,IAAI,EAAC,QAA/B;AACA,IAAA,OAAO,EAAE;AAAA,aACPZ,OAAO,CAACa,aAAR,CAAsB,IAAtB,CADO;AAAA,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGG,QAHH,CADN,EAKM,oBAAC,SAAD;AACA,IAAA,KAAK,EAAEf,MAAM,CAACgB,KADd;AAEA,IAAA,SAAS,EAAC,MAFV;AAGA,IAAA,IAAI,EAAC,MAHL;AAIA,IAAA,WAAW,EAAC,oBAJZ;AAKA,IAAA,KAAK,EAAEN,OALP;AAMA,IAAA,YAAY,EAAEC,aANd;AAOA,IAAA,QAAQ,EAAE,kBAAAM,CAAC;AAAA,aAAIN,aAAa,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB;AAAA,KAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALN,CAJJ,CADE;AAqBF,CAvBF;;AAyBA,eAAevB,OAAO,CACpB,UAAAwB,KAAK;AAAA,SAAK;AACRC,IAAAA,eAAe,EAAExB,SAAS,CAACwB,eAAV,CAA0BD,KAA1B;AADT,GAAL;AAAA,CADe,EAIpBE,SAJoB,EAKpB,UAACC,YAAD,EAAcC,eAAd,EAAkC;AAChC,MAAGD,YAAY,CAACF,eAAhB,EAAgC;AAC9B,QAAG,OAAOI,QAAP,KAAoB,WAAvB,EAAmC;AACjCC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB3B,GAAG,GAAC,QAA3B;AACD,KAFD,MAGI;AACFC,MAAAA,OAAO,CAAC2B,KAAR,CAAc,IAAd;AACD;AACF;;AACD,SAAQ;AAACR,IAAAA,eAAe,EAAEE,YAAY,CAACF;AAA/B,GAAR;AACD,CAfmB,CAAP,CAgBbZ,QAhBa,CAAf","sourcesContent":["import { connect } from 'react-redux';\nimport {Text, View, Image, TextInput } from 'react-native';\nimport * as selectors from '../../reducers'\nimport React, { useState } from 'react';\nimport styles from './styles'\nimport { URL } from '../../../configuration'\nimport { Actions } from 'react-native-router-flux';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { colors } from '../../../configuration';\nimport Header from '../Header';\nimport Stories from '../Stories';\nimport NavBar from '../NavBar';\nimport VersusPad from '../VersusPad';\n\nconst Comments = () => {\n    const [comment, changeComment] = useState('');\n    return (\n  <View style={styles.container}>\n      <View style={styles.comments}>\n\n      </View>\n      <View>\n            <Text style={styles.send} type=\"submit\" \n            onPress={() =>\n              Actions.ResetPassword(true)\n            }>{' Send '}</Text>\n            <TextInput\n            style={styles.input}\n            className=\"user\"\n            type=\"text\"\n            placeholder=\"Write a Comment...\"\n            value={comment}   \n            onChangeText={changeComment}\n            onChange={e => changeComment(e.target.value)}\n        />\n      </View>\n</View>\n)};\n\nexport default connect(\n  state => ({\n    isAuthenticated: selectors.isAuthenticated(state),\n  }),\n  undefined,\n  (stateToProps,disptachToProps) => {\n    if(stateToProps.isAuthenticated){\n      if(typeof document !== 'undefined'){\n        window.location.href = URL+'login/'\n      }\n      else{\n        Actions.Login(true)\n      }\n    }\n    return ({isAuthenticated: stateToProps.isAuthenticated})\n  }\n)(Comments);\n"]},"metadata":{},"sourceType":"module"}