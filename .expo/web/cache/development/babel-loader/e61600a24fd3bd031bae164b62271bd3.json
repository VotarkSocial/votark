{"ast":null,"code":"var _jsxFileName = \"/home/thecoder/Documentos/votark/votark/src/components/Posts/index.js\";\nimport { connect } from 'react-redux';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as selectors from \"../../reducers\";\nimport React from 'react';\nimport styles from \"./styles\";\nimport { URL, STATIC_URL } from \"../../../configuration\";\nimport { Actions } from 'react-native-router-flux';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { colors } from \"../../../configuration\";\nimport { logout } from \"../../actions/auth\";\nimport { ScrollView } from 'react-native-gesture-handler';\nimport FitImage from 'react-native-fit-image';\nimport { gridList } from \"../../utils/gridList\";\n\nvar Posts = function Posts(_ref) {\n  var posts = _ref.posts;\n  var index = 0;\n\n  var sum = function sum() {\n    index++;\n    return null;\n  };\n\n  return React.createElement(ScrollView, {\n    style: styles.posts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, posts.map(function (row) {\n    return React.createElement(View, {\n      style: styles.row,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    }, row.map(function (post) {\n      return React.createElement(TouchableOpacity, {\n        key: post.id,\n        style: styles.post,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 33\n        }\n      }, \"@\", post.username, \" \"), React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 33\n        }\n      }, \"topic:\", post.topicname, \" \"), React.createElement(FitImage, {\n        style: styles.image,\n        source: {\n          uri: STATIC_URL + post.image\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 33\n        }\n      }), React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 33\n        }\n      }, \"victories:\", post.victories, \" \"), React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 33\n        }\n      }, \"clasification:\", post.order, \" \"));\n    }), sum);\n  }));\n};\n\nexport default connect(function (state, _ref2) {\n  var posts = _ref2.posts;\n  return {\n    posts: gridList(posts)\n  };\n}, function (dispatch) {\n  return {};\n})(Posts);","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/src/components/Posts/index.js"],"names":["connect","selectors","React","styles","URL","STATIC_URL","Actions","LinearGradient","colors","logout","ScrollView","FitImage","gridList","Posts","posts","index","sum","map","row","post","id","text","username","topicname","image","uri","victories","order","state","dispatch"],"mappings":";AAAA,SAASA,OAAT,QAAwB,aAAxB;;;;;AAEA,OAAO,KAAKC,SAAZ;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP;AACA,SAASC,GAAT,EAAcC,UAAd;AACA,SAASC,OAAT,QAAwB,0BAAxB;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,MAAT;AACA,SAASC,MAAT;AACA,SAASC,UAAT,QAA2B,8BAA3B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,QAAT;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAa;AAAA,MAAXC,KAAW,QAAXA,KAAW;AACvB,MAAIC,KAAK,GAAG,CAAZ;;AAEA,MAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AACdD,IAAAA,KAAK;AACL,WAAO,IAAP;AACH,GAHD;;AAKA,SACI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEZ,MAAM,CAACW,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQA,KAAK,CAACG,GAAN,CAAU,UAAAC,GAAG;AAAA,WACT,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEf,MAAM,CAACe,GAApB;AAAyB,MAAA,GAAG,EAAEH,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKG,GAAG,CAACD,GAAJ,CAAQ,UAAAE,IAAI;AAAA,aACT,oBAAC,gBAAD;AAAkB,QAAA,GAAG,EAAEA,IAAI,CAACC,EAA5B;AAAgC,QAAA,KAAK,EAAEjB,MAAM,CAACgB,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEhB,MAAM,CAACkB,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA4BF,IAAI,CAACG,QAAjC,MADJ,EAEI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEnB,MAAM,CAACkB,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAiCF,IAAI,CAACI,SAAtC,MAFJ,EAGI,oBAAC,QAAD;AACI,QAAA,KAAK,EAAEpB,MAAM,CAACqB,KADlB;AAEI,QAAA,MAAM,EAAE;AAACC,UAAAA,GAAG,EAAEpB,UAAU,GAACc,IAAI,CAACK;AAAtB,SAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAOI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAErB,MAAM,CAACkB,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAqCF,IAAI,CAACO,SAA1C,MAPJ,EAQI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEvB,MAAM,CAACkB,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAyCF,IAAI,CAACQ,KAA9C,MARJ,CADS;AAAA,KAAZ,CADL,EAaKX,GAbL,CADS;AAAA,GAAb,CAFR,CADJ;AAuBF,CA/BF;;AAiCA,eAAehB,OAAO,CACpB,UAAC4B,KAAD;AAAA,MAASd,KAAT,SAASA,KAAT;AAAA,SAAqB;AACjBA,IAAAA,KAAK,EAACF,QAAQ,CAACE,KAAD;AADG,GAArB;AAAA,CADoB,EAIpB,UAAAe,QAAQ;AAAA,SAAK,EAAL;AAAA,CAJY,CAAP,CAMbhB,KANa,CAAf","sourcesContent":["import { connect } from 'react-redux';\nimport {Text, View, Image, TouchableOpacity } from 'react-native';\nimport * as selectors from '../../reducers'\nimport React from 'react';\nimport styles from './styles'\nimport { URL, STATIC_URL } from '../../../configuration'\nimport { Actions } from 'react-native-router-flux';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { colors } from '../../../configuration';\nimport { logout } from '../../actions/auth';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport FitImage from 'react-native-fit-image';\nimport { gridList } from '../../utils/gridList';\n\nconst Posts = ({posts}) => {\n    let index = 0\n\n    const sum = () => {\n        index++;\n        return null\n    }\n\n    return (\n        <ScrollView style={styles.posts}>\n                {\n                posts.map(row =>\n                    <View style={styles.row} key={index}>\n                        {row.map(post => \n                            <TouchableOpacity key={post.id} style={styles.post}>\n                                <Text style={styles.text}>@{post.username} </Text>\n                                <Text style={styles.text}>topic:{post.topicname} </Text>\n                                <FitImage  \n                                    style={styles.image}\n                                    source={{uri: STATIC_URL+post.image}} \n                                />\n                                <Text style={styles.text}>victories:{post.victories} </Text>\n                                <Text style={styles.text}>clasification:{post.order} </Text>\n                            </TouchableOpacity>\n                        )}\n                        {sum}\n                    </View>\n                    \n                    )\n                }\n        </ScrollView>\n)};\n\nexport default connect(\n  (state, {posts}) => ({\n      posts:gridList(posts)\n  }),\n  dispatch => ({      \n  }),\n)(Posts);\n"]},"metadata":{},"sourceType":"module"}