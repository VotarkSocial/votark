{"ast":null,"code":"var _jsxFileName = \"/home/thecoder/Documentos/votark/votark/src/components/VersusPad/index.js\";\nimport { connect } from 'react-redux';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport * as selectors from \"../../reducers\";\nimport React, { useEffect, useCallback } from 'react';\nimport { styles, styles2 } from \"./styles\";\nimport GestureRecognizer, { swipeDirections } from 'react-native-swipe-gestures';\nimport { URL, colors } from \"../../../configuration\";\nimport { Actions } from 'react-native-router-flux';\nimport Versus from \"../Versus\";\nimport * as actions from \"../../actions/stories\";\nimport { startFetchingVersus, setNull, setNull_toProps, startVoteVersus } from \"../../actions/versus\";\nimport { logout } from \"../../actions/auth\";\nvar config = {\n  velocityThreshold: 0.01,\n  directionalOffsetThreshold: 50\n};\n\nvar VersusPad = function VersusPad(_ref) {\n  var onSwipeDown = _ref.onSwipeDown,\n      onSwipeLeft = _ref.onSwipeLeft,\n      onSwipeUp = _ref.onSwipeUp,\n      onSwipeRight = _ref.onSwipeRight,\n      isFetching = _ref.isFetching,\n      areHidden = _ref.areHidden,\n      fail = _ref.fail;\n  var escFunction = useCallback(function (event) {\n    if (event.keyCode === 37) {\n      console.log(\"here\");\n      onSwipeLeft();\n    } else if (event.keyCode === 39) {\n      onSwipeRight();\n    }\n  }, []);\n  useEffect(function () {\n    document.addEventListener(\"keydown\", escFunction, false);\n    return function () {\n      document.removeEventListener(\"keydown\", escFunction, false);\n    };\n  }, []);\n  return React.createElement(View, {\n    style: typeof document === 'undefined' || areHidden ? styles2.container : styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 3\n    }\n  }, React.createElement(GestureRecognizer, {\n    onSwipeUp: onSwipeUp,\n    onSwipeDown: onSwipeDown,\n    onSwipeLeft: onSwipeLeft,\n    onSwipeRight: onSwipeRight,\n    config: config,\n    style: {\n      height: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, React.createElement(Versus, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, fail ? fail : isFetching ? \"LOADING...\" : \"VS\")));\n};\n\nexport default connect(function (state) {\n  return {\n    isFetching: selectors.isFetchingVersus(state),\n    areHidden: selectors.getHidden(state),\n    versusid: selectors.getVersus(state) ? selectors.getVersus(state).id : null,\n    fail: selectors.getFetchError(state)\n  };\n}, function (dispatch) {\n  return {\n    onSwipeDown: function onSwipeDown() {\n      dispatch(actions.showStories());\n    },\n    reload: function reload() {\n      dispatch(setNull());\n      dispatch(setNull_toProps());\n      dispatch(startFetchingVersus());\n    },\n    onSwipeLeft: function onSwipeLeft(versusid) {\n      dispatch(setNull_toProps());\n      dispatch(startVoteVersus(true, versusid));\n    },\n    onSwipeRight: function onSwipeRight(versusid) {\n      dispatch(setNull_toProps());\n      dispatch(startVoteVersus(false, versusid));\n    },\n    onSwipeUp: function onSwipeUp() {\n      dispatch(actions.hideStories());\n    }\n  };\n}, function (stateToProps, dispatchToProps) {\n  return {\n    isFetching: stateToProps.isFetching,\n    fail: stateToProps.fail,\n    onSwipeUp: function onSwipeUp() {\n      dispatchToProps.onSwipeUp();\n    },\n    onSwipeLeft: function onSwipeLeft() {\n      if (stateToProps.versusid) {\n        dispatchToProps.onSwipeLeft(stateToProps.versusid);\n      }\n    },\n    onSwipeRight: function onSwipeRight() {\n      if (stateToProps.versusid) {\n        dispatchToProps.onSwipeRight(stateToProps.versusid);\n      }\n    },\n    onSwipeDown: function onSwipeDown() {\n      if (!stateToProps.areHidden) {\n        dispatchToProps.reload();\n      } else {\n        dispatchToProps.onSwipeDown();\n      }\n    }\n  };\n})(VersusPad);","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/src/components/VersusPad/index.js"],"names":["connect","selectors","React","useEffect","useCallback","styles","styles2","GestureRecognizer","swipeDirections","URL","colors","Actions","Versus","actions","startFetchingVersus","setNull","setNull_toProps","startVoteVersus","logout","config","velocityThreshold","directionalOffsetThreshold","VersusPad","onSwipeDown","onSwipeLeft","onSwipeUp","onSwipeRight","isFetching","areHidden","fail","escFunction","event","keyCode","console","log","document","addEventListener","removeEventListener","container","height","text","state","isFetchingVersus","getHidden","versusid","getVersus","id","getFetchError","dispatch","showStories","reload","hideStories","stateToProps","dispatchToProps"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport {Text, View, Image, ScrollView } from 'react-native';\nimport * as selectors from '../../reducers'\nimport React, {useEffect, useCallback} from 'react';\nimport {styles, styles2} from './styles';\nimport GestureRecognizer, {swipeDirections} from 'react-native-swipe-gestures';\nimport { URL, colors } from '../../../configuration'\nimport { Actions } from 'react-native-router-flux';\nimport Versus from '../Versus';\nimport * as actions from '../../actions/stories';\nimport { startFetchingVersus, setNull, setNull_toProps, startVoteVersus } from '../../actions/versus';\nimport { logout } from '../../actions/auth';\n\nconst config = {\n  velocityThreshold: 0.01,\n  directionalOffsetThreshold: 50\n};\n\n\nconst VersusPad = ({onSwipeDown,onSwipeLeft,onSwipeUp,onSwipeRight, isFetching,areHidden, fail}) => {\n  const escFunction = useCallback((event) => {\n    if(event.keyCode===37){\n      console.log(\"here\")\n      onSwipeLeft()\n    }\n    else if(event.keyCode===39){\n      onSwipeRight()\n    }\n  }, []);\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", escFunction, false);\n\n    return () => {\n      document.removeEventListener(\"keydown\", escFunction, false);\n    };\n  }, []);\n  \n  return (\n  <View style={(typeof document==='undefined' || areHidden)?styles2.container:styles.container}>\n        <GestureRecognizer\n        onSwipeUp={onSwipeUp}\n        onSwipeDown={onSwipeDown}\n        onSwipeLeft={onSwipeLeft}\n        onSwipeRight={onSwipeRight}\n        config={config}\n        style={{height:'100%', }}\n        >\n          <Versus></Versus>\n          <Text style={styles.text} >{fail?fail:(isFetching?\"LOADING...\":\"VS\")}</Text>\n      </GestureRecognizer>\n  </View>\n)};\n\nexport default connect(\n  state => ({\n    isFetching: selectors.isFetchingVersus(state),\n    areHidden: selectors.getHidden(state),\n    versusid: selectors.getVersus(state)?selectors.getVersus(state).id:null,\n    fail: selectors.getFetchError(state)\n  }),\n  dispatch => ({\n      onSwipeDown(){\n        dispatch(actions.showStories())\n      },\n      reload(){\n        dispatch(setNull())\n        dispatch(setNull_toProps())\n        dispatch(startFetchingVersus())\n      },\n      onSwipeLeft(versusid){\n        dispatch(setNull_toProps())\n        dispatch(startVoteVersus(true,versusid))\n      },\n      onSwipeRight(versusid){\n        dispatch(setNull_toProps())\n        dispatch(startVoteVersus(false,versusid))\n      },\n      onSwipeUp(){\n        dispatch(actions.hideStories())\n      }  \n  }),\n  (stateToProps,dispatchToProps) => ({\n    isFetching: stateToProps.isFetching,\n    fail: stateToProps.fail,\n    onSwipeUp(){\n      dispatchToProps.onSwipeUp()\n    },\n    onSwipeLeft(){\n      if(stateToProps.versusid){\n        dispatchToProps.onSwipeLeft(stateToProps.versusid)\n      }\n    },\n    onSwipeRight(){\n      if(stateToProps.versusid){\n        dispatchToProps.onSwipeRight(stateToProps.versusid)\n      }\n    },\n    onSwipeDown(){\n      if(!stateToProps.areHidden){\n        dispatchToProps.reload()\n      }\n      else{\n        dispatchToProps.onSwipeDown()\n      }\n    }\n  })\n)(VersusPad);\n"]},"metadata":{},"sourceType":"module"}