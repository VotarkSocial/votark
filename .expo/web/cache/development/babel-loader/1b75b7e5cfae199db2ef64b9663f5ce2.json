{"ast":null,"code":"'use strict';\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/thecoder/Documentos/votark/votark/src/components/Camara/index.js\";\n\nimport React, { PureComponent } from 'react';\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { RNCamera } from 'react-native-camera';\n\nvar takePicture = function takePicture() {\n  var options, data;\n  return _regeneratorRuntime.async(function takePicture$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!_this.camera) {\n            _context.next = 6;\n            break;\n          }\n\n          options = {\n            quality: 0.5,\n            base64: true\n          };\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(_this.camera.takePictureAsync(options));\n\n        case 4:\n          data = _context.sent;\n          console.log(data.uri);\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar MyCamera = function MyCamera(_ref) {\n  var onClick = _ref.onClick,\n      home = _ref.home;\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, React.createElement(RNCamera, {\n    ref: function ref(_ref3) {\n      _this.camera = _ref3;\n    },\n    style: styles.preview,\n    type: RNCamera.Constants.Type.back,\n    flashMode: RNCamera.Constants.FlashMode.on,\n    androidCameraPermissionOptions: {\n      title: 'Permission to use camera',\n      message: 'We need your permission to use your camera',\n      buttonPositive: 'Ok',\n      buttonNegative: 'Cancel'\n    },\n    androidRecordAudioPermissionOptions: {\n      title: 'Permission to use audio recording',\n      message: 'We need your permission to use your audio',\n      buttonPositive: 'Ok',\n      buttonNegative: 'Cancel'\n    },\n    onGoogleVisionBarcodesDetected: function onGoogleVisionBarcodesDetected(_ref2) {\n      var barcodes = _ref2.barcodes;\n      console.log(barcodes);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: {\n      flex: 0,\n      flexDirection: 'row',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: takePicture.bind(_this),\n    style: styles.capture,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 14\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \" SNAP \"))));\n};\n\nexport default MyCamera;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    backgroundColor: 'black'\n  },\n  preview: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  },\n  capture: {\n    flex: 0,\n    backgroundColor: '#fff',\n    borderRadius: 5,\n    padding: 15,\n    paddingHorizontal: 20,\n    alignSelf: 'center',\n    margin: 20\n  }\n});","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/src/components/Camara/index.js"],"names":["React","PureComponent","RNCamera","takePicture","camera","options","quality","base64","takePictureAsync","data","console","log","uri","MyCamera","onClick","home","styles","container","ref","preview","Constants","Type","back","FlashMode","on","title","message","buttonPositive","buttonNegative","barcodes","flex","flexDirection","justifyContent","bind","capture","fontSize","StyleSheet","create","backgroundColor","alignItems","borderRadius","padding","paddingHorizontal","alignSelf","margin"],"mappings":"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","sourcesContent":["'use strict';\nimport React, { PureComponent } from 'react';\nimport { AppRegistry, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { RNCamera } from 'react-native-camera';\n\nconst takePicture = async () => {\n    if (this.camera) {\n      const options = { quality: 0.5, base64: true };\n      const data = await this.camera.takePictureAsync(options);\n      console.log(data.uri);\n    }\n  };\n\nconst MyCamera = ({onClick,home}) => (\n    <View style={styles.container}>\n        <RNCamera\n          ref={ref => {\n            this.camera = ref;\n          }}\n          style={styles.preview}\n          type={RNCamera.Constants.Type.back}\n          flashMode={RNCamera.Constants.FlashMode.on}\n          androidCameraPermissionOptions={{\n            title: 'Permission to use camera',\n            message: 'We need your permission to use your camera',\n            buttonPositive: 'Ok',\n            buttonNegative: 'Cancel',\n          }}\n          androidRecordAudioPermissionOptions={{\n            title: 'Permission to use audio recording',\n            message: 'We need your permission to use your audio',\n            buttonPositive: 'Ok',\n            buttonNegative: 'Cancel',\n          }}\n          onGoogleVisionBarcodesDetected={({ barcodes }) => {\n            console.log(barcodes);\n          }}\n        />\n        <View style={{ flex: 0, flexDirection: 'row', justifyContent: 'center' }}>\n          <TouchableOpacity onPress={takePicture.bind(this)} style={styles.capture}>\n            <Text style={{ fontSize: 14 }}> SNAP </Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n);\n\nexport default MyCamera\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      flexDirection: 'column',\n      backgroundColor: 'black',\n    },\n    preview: {\n      flex: 1,\n      justifyContent: 'flex-end',\n      alignItems: 'center',\n    },\n    capture: {\n      flex: 0,\n      backgroundColor: '#fff',\n      borderRadius: 5,\n      padding: 15,\n      paddingHorizontal: 20,\n      alignSelf: 'center',\n      margin: 20,\n    },\n  });"]},"metadata":{},"sourceType":"module"}