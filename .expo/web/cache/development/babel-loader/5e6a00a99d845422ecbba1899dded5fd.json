{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/home/thecoder/Documentos/votark/votark/node_modules/expo-linear-gradient/build/NativeLinearGradient.web.js\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport normalizeColor from 'react-native-web/src/modules/normalizeColor';\n\nvar NativeLinearGradient = function NativeLinearGradient(_ref) {\n  var colors = _ref.colors,\n      locations = _ref.locations,\n      startPoint = _ref.startPoint,\n      endPoint = _ref.endPoint,\n      props = _objectWithoutProperties(_ref, [\"colors\", \"locations\", \"startPoint\", \"endPoint\"]);\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      layout = _useState2[0],\n      setLayout = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      gradientColors = _useState4[0],\n      setGradientColors = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pseudoAngle = _useState6[0],\n      setPseudoAngle = _useState6[1];\n\n  useEffect(function () {\n    var getControlPoints = function getControlPoints() {\n      var correctedStartPoint = [0, 0];\n\n      if (Array.isArray(startPoint)) {\n        correctedStartPoint = [startPoint[0] != null ? startPoint[0] : 0.0, startPoint[1] != null ? startPoint[1] : 0.0];\n      }\n\n      var correctedEndPoint = [0.0, 1.0];\n\n      if (Array.isArray(endPoint)) {\n        correctedEndPoint = [endPoint[0] != null ? endPoint[0] : 0.0, endPoint[1] != null ? endPoint[1] : 1.0];\n      }\n\n      return [correctedStartPoint, correctedEndPoint];\n    };\n\n    var _getControlPoints = getControlPoints(),\n        _getControlPoints2 = _slicedToArray(_getControlPoints, 2),\n        start = _getControlPoints2[0],\n        end = _getControlPoints2[1];\n\n    var _ref2 = layout || {},\n        _ref2$width = _ref2.width,\n        width = _ref2$width === void 0 ? 1 : _ref2$width,\n        _ref2$height = _ref2.height,\n        height = _ref2$height === void 0 ? 1 : _ref2$height;\n\n    start[0] *= width;\n    end[0] *= width;\n    start[1] *= height;\n    end[1] *= height;\n    var py = end[1] - start[1];\n    var px = end[0] - start[0];\n    setPseudoAngle(90 + Math.atan2(py, px) * 180 / Math.PI);\n  }, [startPoint, endPoint]);\n  useEffect(function () {\n    var nextGradientColors = colors.map(function (color, index) {\n      var hexColor = normalizeColor(color);\n      var output = hexColor;\n\n      if (locations && locations[index]) {\n        var location = Math.max(0, Math.min(1, locations[index]));\n        var percentage = location * 100;\n        output += \" \" + percentage + \"%\";\n      }\n\n      return output;\n    });\n    setGradientColors(nextGradientColors);\n  }, [colors, locations]);\n  var colorStyle = gradientColors.join(',');\n  var backgroundImage = \"linear-gradient(\" + pseudoAngle + \"deg, \" + colorStyle + \")\";\n  return React.createElement(View, _extends({}, props, {\n    style: [props.style, {\n      backgroundImage: backgroundImage\n    }],\n    onLayout: function onLayout(event) {\n      setLayout(event.nativeEvent.layout);\n\n      if (props.onLayout) {\n        props.onLayout(event);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default NativeLinearGradient;","map":{"version":3,"sources":["../src/NativeLinearGradient.web.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useEffect, useState } from 'react';\nimport { LayoutRectangle, View } from 'react-native';\nimport normalizeColor from 'react-native-web/src/modules/normalizeColor';\n\ntype Props = {\n  colors: number[];\n  locations?: number[] | null;\n  startPoint?: Point | null;\n  endPoint?: Point | null;\n  onLayout?: Function;\n} & React.ComponentProps<typeof View>;\n\ntype Point = [number, number];\n\nconst NativeLinearGradient: FunctionComponent<Props> = ({\n  colors,\n  locations,\n  startPoint,\n  endPoint,\n  ...props\n}: Props) => {\n  const [layout, setLayout] = useState<LayoutRectangle | null>(null);\n  const [gradientColors, setGradientColors] = useState<string[]>([]);\n  const [pseudoAngle, setPseudoAngle] = useState<number>(0);\n\n  useEffect(() => {\n    const getControlPoints = (): Point[] => {\n      let correctedStartPoint: Point = [0, 0];\n      if (Array.isArray(startPoint)) {\n        correctedStartPoint = [\n          startPoint[0] != null ? startPoint[0] : 0.0,\n          startPoint[1] != null ? startPoint[1] : 0.0,\n        ];\n      }\n      let correctedEndPoint: Point = [0.0, 1.0];\n      if (Array.isArray(endPoint)) {\n        correctedEndPoint = [\n          endPoint[0] != null ? endPoint[0] : 0.0,\n          endPoint[1] != null ? endPoint[1] : 1.0,\n        ];\n      }\n      return [correctedStartPoint, correctedEndPoint];\n    };\n\n    const [start, end] = getControlPoints();\n    const { width = 1, height = 1 } = layout || {};\n    start[0] *= width;\n    end[0] *= width;\n    start[1] *= height;\n    end[1] *= height;\n    const py = end[1] - start[1];\n    const px = end[0] - start[0];\n\n    setPseudoAngle(90 + (Math.atan2(py, px) * 180) / Math.PI);\n  }, [startPoint, endPoint]);\n\n  useEffect(() => {\n    const nextGradientColors = colors.map((color: number, index: number): string => {\n      const hexColor = normalizeColor(color);\n      let output = hexColor;\n      if (locations && locations[index]) {\n        const location = Math.max(0, Math.min(1, locations[index]));\n        // Convert 0...1 to 0...100\n        const percentage = location * 100;\n        output += ` ${percentage}%`;\n      }\n      return output;\n    });\n\n    setGradientColors(nextGradientColors);\n  }, [colors, locations]);\n\n  const colorStyle = gradientColors.join(',');\n  const backgroundImage = `linear-gradient(${pseudoAngle}deg, ${colorStyle})`;\n  // TODO: Bacon: In the future we could consider adding `backgroundRepeat: \"no-repeat\"`. For more\n  // browser support.\n  return (\n    <View\n      {...props}\n      style={[\n        props.style,\n        // @ts-ignore: [ts] Property 'backgroundImage' does not exist on type 'ViewStyle'.\n        { backgroundImage },\n      ]}\n      onLayout={event => {\n        setLayout(event.nativeEvent.layout);\n        if (props.onLayout) {\n          props.onLayout(event);\n        }\n      }}\n    />\n  );\n};\n\nexport default NativeLinearGradient;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}