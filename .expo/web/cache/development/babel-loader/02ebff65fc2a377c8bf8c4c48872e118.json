{"ast":null,"code":"var _jsxFileName = \"/home/thecoder/Documentos/votark/votark/src/components/VersusPad/index.js\";\nimport { connect } from 'react-redux';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport * as selectors from \"../../reducers\";\nimport React from 'react';\nimport { styles, styles2 } from \"./styles\";\nimport GestureRecognizer, { swipeDirections } from 'react-native-swipe-gestures';\nimport { URL, colors } from \"../../../configuration\";\nimport { Actions } from 'react-native-router-flux';\nimport Versus from \"../Versus\";\nimport * as actions from \"../../actions/stories\";\nimport { startFetchingVersus } from \"../../actions/versus\";\nvar config = {\n  velocityThreshold: 0.01,\n  directionalOffsetThreshold: 50\n};\n\nvar VersusPad = function VersusPad(_ref) {\n  var onSwipeDown = _ref.onSwipeDown,\n      onSwipeLeft = _ref.onSwipeLeft,\n      onSwipeUp = _ref.onSwipeUp,\n      onSwipeRight = _ref.onSwipeRight,\n      isFetching = _ref.isFetching;\n  return React.createElement(View, {\n    style: typeof document !== 'undefined' ? styles.container : styles2.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 3\n    }\n  }, React.createElement(GestureRecognizer, {\n    onSwipeUp: onSwipeUp,\n    onSwipeDown: onSwipeDown,\n    onSwipeLeft: onSwipeLeft,\n    onSwipeRight: onSwipeRight,\n    config: config,\n    style: {\n      height: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, React.createElement(Versus, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, isFetching ? \"LOADING...\" : \"VS\")));\n};\n\nexport default connect(function (state) {\n  return {\n    isFetching: selectors.isFetchingVersus(state),\n    areHidden: selectors.getHidden(state)\n  };\n}, function (dispatch) {\n  return {\n    onSwipeDown: function onSwipeDown() {\n      dispatch(actions.showStories());\n    },\n    reload: function reload() {\n      dispatch(startFetchingVersus());\n    },\n    onSwipeLeft: function onSwipeLeft() {\n      console.log('left');\n    },\n    onSwipeRight: function onSwipeRight() {\n      console.log('right');\n    },\n    onSwipeUp: function onSwipeUp() {\n      dispatch(actions.hideStories());\n    }\n  };\n}, function (stateToProps, dispatchToProps) {\n  return {\n    isFetching: stateToProps.isFetching,\n    onSwipeUp: function onSwipeUp() {\n      dispatchToProps.onSwipeUp();\n    },\n    onSwipeLeft: function onSwipeLeft() {\n      dispatchToProps.onSwipeLeft();\n    },\n    onSwipeRight: function onSwipeRight() {\n      dispatchToProps.onSwipeRight();\n    },\n    onSwipeDown: function onSwipeDown() {\n      if (areHidden) {\n        dispatchToProps.reload();\n      } else {\n        dispatchToProps.onSwipeDown();\n      }\n    }\n  };\n})(VersusPad);","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/src/components/VersusPad/index.js"],"names":["connect","selectors","React","styles","styles2","GestureRecognizer","swipeDirections","URL","colors","Actions","Versus","actions","startFetchingVersus","config","velocityThreshold","directionalOffsetThreshold","VersusPad","onSwipeDown","onSwipeLeft","onSwipeUp","onSwipeRight","isFetching","document","container","height","text","state","isFetchingVersus","areHidden","getHidden","dispatch","showStories","reload","console","log","hideStories","stateToProps","dispatchToProps"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport {Text, View, Image, ScrollView } from 'react-native';\nimport * as selectors from '../../reducers'\nimport React from 'react';\nimport {styles, styles2} from './styles';\nimport GestureRecognizer, {swipeDirections} from 'react-native-swipe-gestures';\nimport { URL, colors } from '../../../configuration'\nimport { Actions } from 'react-native-router-flux';\nimport Versus from '../Versus';\nimport * as actions from '../../actions/stories';\nimport { startFetchingVersus } from '../../actions/versus';\n\nconst config = {\n  velocityThreshold: 0.01,\n  directionalOffsetThreshold: 50\n};\n\nconst VersusPad = ({onSwipeDown,onSwipeLeft,onSwipeUp,onSwipeRight, isFetching}) => (\n  <View style={(typeof document!=='undefined')?styles.container:styles2.container}>\n        <GestureRecognizer\n        onSwipeUp={onSwipeUp}\n        onSwipeDown={onSwipeDown}\n        onSwipeLeft={onSwipeLeft}\n        onSwipeRight={onSwipeRight}\n        config={config}\n        style={{height:'100%', }}\n        >\n          <Versus></Versus>\n          <Text style={styles.text} >{isFetching?\"LOADING...\":\"VS\"}</Text>\n      </GestureRecognizer>\n  </View>\n);\n\nexport default connect(\n  state => ({\n    isFetching: selectors.isFetchingVersus(state),\n    areHidden: selectors.getHidden(state)\n  }),\n  dispatch => ({\n      onSwipeDown(){\n        dispatch(actions.showStories())\n      },\n      reload(){\n        dispatch(startFetchingVersus())\n      },\n      onSwipeLeft(){\n        console.log('left')\n      },\n      onSwipeRight(){\n        console.log('right')\n\n      },\n      onSwipeUp(){\n        dispatch(actions.hideStories())\n      }  \n  }),\n  (stateToProps,dispatchToProps) => ({\n    isFetching: stateToProps.isFetching,\n    onSwipeUp(){\n      dispatchToProps.onSwipeUp()\n    },\n    onSwipeLeft(){\n      dispatchToProps.onSwipeLeft()\n    },\n    onSwipeRight(){\n      dispatchToProps.onSwipeRight()\n    },\n    onSwipeDown(){\n      if(areHidden){\n        dispatchToProps.reload()\n      }\n      else{\n        dispatchToProps.onSwipeDown()\n      }\n    }\n  })\n)(VersusPad);\n"]},"metadata":{},"sourceType":"module"}