{"ast":null,"code":"import NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport DeviceEventEmitter from \"react-native-web/dist/exports/DeviceEventEmitter\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { NativeAppEventEmitter } from \"react-native-web/dist/index\";\nvar RNFetchBlob = NativeModules.RNFetchBlob;\n\nfunction actionViewIntent(path) {\n  var mime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'text/plain';\n  if (Platform.OS === 'android') return RNFetchBlob.actionViewIntent(path, mime);else return Promise.reject('RNFetchBlob.android.actionViewIntent only supports Android.');\n}\n\nfunction getContentIntent(mime) {\n  if (Platform.OS === 'android') return RNFetchBlob.getContentIntent(mime);else return Promise.reject('RNFetchBlob.android.getContentIntent only supports Android.');\n}\n\nfunction addCompleteDownload(config) {\n  if (Platform.OS === 'android') return RNFetchBlob.addCompleteDownload(config);else return Promise.reject('RNFetchBlob.android.addCompleteDownload only supports Android.');\n}\n\nexport default {\n  actionViewIntent: actionViewIntent,\n  getContentIntent: getContentIntent,\n  addCompleteDownload: addCompleteDownload\n};","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/node_modules/react-native-fetch-blob/android.js"],"names":["NativeAppEventEmitter","RNFetchBlob","NativeModules","actionViewIntent","path","mime","Platform","OS","Promise","reject","getContentIntent","addCompleteDownload","config"],"mappings":";;;SAQEA,qB;AAGF,IAAMC,WAA6B,GAAGC,aAAa,CAACD,WAApD;;AAQA,SAASE,gBAAT,CAA0BC,IAA1B,EAAmE;AAAA,MAA5BC,IAA4B,uEAAd,YAAc;AACjE,MAAGC,QAAQ,CAACC,EAAT,KAAgB,SAAnB,EACE,OAAON,WAAW,CAACE,gBAAZ,CAA6BC,IAA7B,EAAmCC,IAAnC,CAAP,CADF,KAGE,OAAOG,OAAO,CAACC,MAAR,CAAe,6DAAf,CAAP;AACH;;AAED,SAASC,gBAAT,CAA0BL,IAA1B,EAAuC;AACrC,MAAGC,QAAQ,CAACC,EAAT,KAAgB,SAAnB,EACE,OAAON,WAAW,CAACS,gBAAZ,CAA6BL,IAA7B,CAAP,CADF,KAGE,OAAOG,OAAO,CAACC,MAAR,CAAe,6DAAf,CAAP;AACH;;AAED,SAASE,mBAAT,CAA6BC,MAA7B,EAAqC;AACnC,MAAGN,QAAQ,CAACC,EAAT,KAAgB,SAAnB,EACE,OAAON,WAAW,CAACU,mBAAZ,CAAgCC,MAAhC,CAAP,CADF,KAGE,OAAOJ,OAAO,CAACC,MAAR,CAAe,gEAAf,CAAP;AACH;;AAGD,eAAe;AACbN,EAAAA,gBAAgB,EAAhBA,gBADa;AAEbO,EAAAA,gBAAgB,EAAhBA,gBAFa;AAGbC,EAAAA,mBAAmB,EAAnBA;AAHa,CAAf","sourcesContent":["// Copyright 2016 wkh237@github. All rights reserved.\n// Use of this source code is governed by a MIT-style license that can be\n// found in the LICENSE file.\n\nimport {\n  NativeModules,\n  DeviceEventEmitter,\n  Platform,\n  NativeAppEventEmitter,\n} from 'react-native'\n\nconst RNFetchBlob:RNFetchBlobNative = NativeModules.RNFetchBlob\n\n/**\n * Send an intent to open the file.\n * @param  {string]} path Path of the file to be open.\n * @param  {string} mime MIME type string\n * @return {Promise}\n */\nfunction actionViewIntent(path:string, mime:string = 'text/plain') {\n  if(Platform.OS === 'android')\n    return RNFetchBlob.actionViewIntent(path, mime)\n  else\n    return Promise.reject('RNFetchBlob.android.actionViewIntent only supports Android.')\n}\n\nfunction getContentIntent(mime:string) {\n  if(Platform.OS === 'android')\n    return RNFetchBlob.getContentIntent(mime)\n  else\n    return Promise.reject('RNFetchBlob.android.getContentIntent only supports Android.')\n}\n\nfunction addCompleteDownload(config) {\n  if(Platform.OS === 'android')\n    return RNFetchBlob.addCompleteDownload(config)\n  else\n    return Promise.reject('RNFetchBlob.android.addCompleteDownload only supports Android.')\n}\n\n\nexport default {\n  actionViewIntent,\n  getContentIntent,\n  addCompleteDownload\n}\n"]},"metadata":{},"sourceType":"module"}