{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport fs from \"../fs.js\";\nimport Blob from \"./Blob.js\";\n\nvar File = function (_Blob) {\n  _inherits(File, _Blob);\n\n  var _super = _createSuper(File);\n\n  _createClass(File, null, [{\n    key: \"build\",\n    value: function build(name, data, cType) {\n      return new Promise(function (resolve, reject) {\n        new File(data, cType).onCreated(function (f) {\n          f.name = name;\n          resolve(f);\n        });\n      });\n    }\n  }]);\n\n  function File(data, cType) {\n    var _this;\n\n    _classCallCheck(this, File);\n\n    _this = _super.call(this, data, cType);\n    _this.name = '';\n    return _this;\n  }\n\n  return File;\n}(Blob);\n\nexport { File as default };","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/node_modules/react-native-fetch-blob/polyfill/File.js"],"names":["fs","Blob","File","name","data","cType","Promise","resolve","reject","onCreated","f"],"mappings":";;;;;;;;;;AAIA,OAAOA,EAAP;AACA,OAAOC,IAAP;;IAEqBC,I;;;;;;;0BAINC,I,EAAaC,I,EAAUC,K,EAA4B;AAC9D,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,YAAIN,IAAJ,CAASE,IAAT,EAAeC,KAAf,EAAsBI,SAAtB,CAAgC,UAACC,CAAD,EAAO;AACrCA,UAAAA,CAAC,CAACP,IAAF,GAASA,IAAT;AACAI,UAAAA,OAAO,CAACG,CAAD,CAAP;AACD,SAHD;AAID,OALM,CAAP;AAMD;;;AAED,gBAAYN,IAAZ,EAAuBC,KAAvB,EAAqC;AAAA;;AAAA;;AACnC,8BAAMD,IAAN,EAAYC,KAAZ;AADmC,UAXrCF,IAWqC,GAXrB,EAWqB;AAAA;AAEpC;;;EAf+BF,I;;SAAbC,I","sourcesContent":["// Copyright 2016 wkh237@github. All rights reserved.\n// Use of this source code is governed by a MIT-style license that can be\n// found in the LICENSE file.\n\nimport fs from '../fs.js'\nimport Blob from './Blob.js'\n\nexport default class File extends Blob {\n\n  name : string = '';\n\n  static build(name:string, data:any, cType:string):Promise<File> {\n    return new Promise((resolve, reject) => {\n      new File(data, cType).onCreated((f) => {\n        f.name = name\n        resolve(f)\n      })\n    })\n  }\n\n  constructor(data:any , cType:string) {\n    super(data, cType)\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}