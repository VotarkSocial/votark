{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/home/thecoder/Documentos/votark/votark/src/components/Login/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { connect } from 'react-redux';\nimport Expo from 'expo';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Container, Item, Input, Header, Body, Content, Title, Button, Text } from 'native-base';\nimport { Field, reduxForm } from 'redux-form';\nimport * as actions from \"../../actions/auth\";\nimport * as selectors from \"../../reducers\";\nimport React, { useState } from 'react';\nimport styles from \"./styles\";\nimport { colors } from \"../../../configuration\";\nimport { Link } from \"react-router-dom\";\nimport { Actions } from 'react-native-router-flux';\nimport { normalize } from \"../../utils/normalize\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { URL } from \"../../../configuration\";\nimport Spinner from 'react-native-loading-spinner-overlay';\n\nvar validate = function validate(values) {\n  var error = {};\n  error.email = '';\n  error.password = '';\n  var ema = values.email ? values.email : '';\n  var pass = values.password ? values.password : '';\n\n  if (pass.length < 6 && pass !== '') {\n    error.password = 'too short';\n  }\n\n  if (!ema.includes('@') && ema !== '') {\n    error.email = '@ not included';\n  }\n\n  return error;\n};\n\nvar Login = function Login(_ref) {\n  var onSubmit = _ref.onSubmit,\n      isLoading = _ref.isLoading,\n      _ref$error = _ref.error,\n      error = _ref$error === void 0 ? null : _ref$error;\n\n  var renderInput = function renderInput(_ref2) {\n    var input = _ref2.input,\n        label = _ref2.label,\n        type = _ref2.type,\n        _ref2$meta = _ref2.meta,\n        touched = _ref2$meta.touched,\n        error = _ref2$meta.error,\n        warning = _ref2$meta.warning,\n        value = _ref2.value,\n        whenChange = _ref2.whenChange,\n        security = _ref2.security,\n        placeholder = _ref2.placeholder;\n    var hasError = false;\n\n    if (error !== undefined) {\n      hasError = true;\n    }\n\n    return React.createElement(Item, {\n      error: hasError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, React.createElement(TextInput, _extends({\n      style: styles.input\n    }, inputProps, {\n      onChangeText: input.onChange,\n      onBlur: input.onBlur,\n      onFocus: input.onFocus,\n      value: input.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    })), hasError ? React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, error) : React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 44\n      }\n    }));\n  };\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      changeUsername = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      changePassword = _useState4[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, React.createElement(LinearGradient, {\n    colors: [colors.primary, 'transparent'],\n    style: {\n      width: '100%',\n      height: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.centered,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    style: styles.logo,\n    source: require(\"../../public/static/img/logo.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), React.createElement(Content, {\n    padder: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, React.createElement(Field, {\n    name: \"email\",\n    component: renderInput,\n    whenChange: changeUsername,\n    value: username,\n    placeholder: \"username\",\n    security: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }), React.createElement(Field, {\n    name: \"password\",\n    component: renderInput,\n    whenChange: changePassword,\n    value: password,\n    placeholder: \"password\",\n    security: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    block: true,\n    primary: true,\n    onPress: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Submit\"))), React.createElement(View, {\n    style: styles.option,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"Did you forget your password? \"), typeof document === 'undefined' ? React.createElement(Text, {\n    style: styles.link,\n    title: ' reset password ',\n    type: \"submit\",\n    onPress: function onPress() {\n      return Actions.ResetPassword(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, ' reset password ') : React.createElement(Link, {\n    to: \"/reset-password\",\n    style: styles.navItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, ' reset password '))), React.createElement(View, {\n    style: styles.errors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, error && React.createElement(Text, {\n    style: styles.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, error), isLoading ? React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, 'LOADING...')) : React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    type: \"submit\",\n    onPress: function onPress() {\n      return onSubmit(username, password);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 19\n    }\n  }, 'LOGIN')), React.createElement(View, {\n    style: styles.option,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, \"Do you have an account?  \"), typeof document === 'undefined' ? React.createElement(Text, {\n    style: styles.link,\n    title: ' register now ',\n    type: \"submit\",\n    onPress: function onPress() {\n      return Actions.SignUp(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, ' register now ') : React.createElement(Link, {\n    to: \"/signup\",\n    style: styles.navItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 23\n    }\n  }, ' register now'))))))));\n};\n\nvar MyForm = reduxForm({\n  form: 'test',\n  validate: validate\n})(Login);\nexport default connect(function (state) {\n  return {\n    isLoading: selectors.getIsAuthenticating(state),\n    error: selectors.getAuthenticatingError(state),\n    isAuthenticated: selectors.isAuthenticated(state)\n  };\n}, function (dispatch) {\n  return {\n    onSubmit: function onSubmit(username, password) {\n      if (username && password) {\n        dispatch(actions.startLogin(username, password));\n      } else if (!username) {\n        dispatch(actions.failLogin('WRITE A VALID USERNAME'));\n      } else if (!password) {\n        dispatch(actions.failLogin('WRITE A VALID PASSWORD'));\n      }\n    }\n  };\n}, function (stateToProps, disptachToProps) {\n  if (stateToProps.isAuthenticated) {\n    if (typeof document !== 'undefined') {\n      window.location.href = URL;\n    } else {\n      Actions.replace('Home');\n    }\n  }\n\n  return _objectSpread(_objectSpread({}, disptachToProps), stateToProps);\n})(MyForm);","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/src/components/Login/index.js"],"names":["connect","Expo","Container","Item","Input","Header","Body","Content","Title","Button","Text","Field","reduxForm","actions","selectors","React","useState","styles","colors","Link","Actions","normalize","LinearGradient","URL","Spinner","validate","values","error","email","password","ema","pass","length","includes","Login","onSubmit","isLoading","renderInput","input","label","type","meta","touched","warning","value","whenChange","security","placeholder","hasError","undefined","inputProps","onChange","onBlur","onFocus","username","changeUsername","changePassword","container","primary","width","height","alignItems","justifyContent","centered","logo","require","option","text","document","link","ResetPassword","navItem","errors","button","SignUp","MyForm","form","state","getIsAuthenticating","getAuthenticatingError","isAuthenticated","dispatch","startLogin","failLogin","stateToProps","disptachToProps","window","location","href","replace"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport Expo from 'expo';\nimport { View, TextInput, Image } from 'react-native';\nimport { Container, Item, Input, Header, Body, Content, Title, Button, Text } from 'native-base';\nimport { Field,reduxForm } from 'redux-form';\nimport * as actions from '../../actions/auth';\nimport * as selectors from '../../reducers';\nimport React, { useState } from 'react';\nimport styles from './styles'\nimport { colors } from '../../../configuration';\nimport { Link } from \"react-router-dom\";\nimport { Actions } from 'react-native-router-flux';\nimport { normalize } from '../../utils/normalize';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { URL } from '../../../configuration'\nimport Spinner from 'react-native-loading-spinner-overlay';\n\nconst validate = values => {\n  const error= {};\n  error.email= '';\n  error.password= '';\n  var ema = values.email?values.email:'';\n  var pass = values.password?values.password:'';\n\n  if(pass.length < 6 && pass !== ''){\n    error.password= 'too short';\n  }\n  if(!ema.includes('@') && ema !== ''){\n    error.email= '@ not included';\n  }\n  return error;\n};\n\n\nconst Login = ({\n  onSubmit,\n  isLoading,\n  error = null,\n}) => {\n  const renderInput = ({ input, label, type, meta: { touched, error, warning }, value, whenChange, security, placeholder })=>{\n    var hasError= false;\n    if(error !== undefined){\n      hasError= true;\n    }\n    return( \n      <Item error= {hasError}>\n        <TextInput\n          style={styles.input}\n          {...inputProps}\n          onChangeText={input.onChange}\n          onBlur={input.onBlur}\n          onFocus={input.onFocus}\n          value={input.value}\n      />\n        {hasError ? <Text>{error}</Text> : <Text />}\n      </Item>\n    )\n  }\n\n  const [username, changeUsername] = useState('');\n  const [password, changePassword] = useState('');\n\n  return (\n    <View style={styles.container}>\n      <LinearGradient\n          colors={[colors.primary, 'transparent']}\n          style={{\n            width: '100%',\n            height: '100%',\n            alignItems: 'center',\n            justifyContent: 'center'\n          }}\n        >\n      <View style={styles.centered}>\n      <Image style={styles.logo} source={require('../../public/static/img/logo.png')} ></Image>\n      <Content padder>\n          <Field name=\"email\" component={renderInput} whenChange={changeUsername} value={username} placeholder={\"username\"} security={false} />\n          <Field name=\"password\" component={renderInput} whenChange={changePassword} value={password} placeholder={\"password\"} security={true} />\n          <Button block primary onPress= {onSubmit}>\n            <Text>Submit</Text>\n          </Button>\n        </Content>\n      <View style={styles.option}>\n        <Text style={styles.text} >{\"Did you forget your password? \"}</Text>\n        {\n          (typeof document === 'undefined')?(\n            <Text style={styles.link} title={' reset password '} type=\"submit\" \n            onPress={() =>\n              Actions.ResetPassword(true)\n            }>{' reset password '}</Text>\n          ):(\n            <Link to=\"/reset-password\" style={styles.navItem}>\n              <Text style={styles.text}>{' reset password '}</Text>\n            </Link>\n          )\n        }\n        \n      </View>\n      <View style={styles.errors}>\n        {\n        error && (\n            <Text style={styles.error}>{ error }</Text>\n        )\n      }\n        {\n          isLoading ? (\n            <View>\n              <Text style={styles.error}>{'LOADING...'}</Text>\n            </View>\n          ) : (\n            <View> \n              <View style={styles.button}>\n                  <Text style={styles.button} type=\"submit\" onPress={\n                      () => onSubmit(username,password)\n                  }>{'LOGIN'}</Text>\n              </View>\n              <View style={styles.option}>\n                <Text style={styles.text} >{\"Do you have an account?  \"}</Text>\n                {\n                  (typeof document === 'undefined')?(\n                    <Text style={styles.link} title={' register now '} type=\"submit\" \n                    onPress={() =>\n                      Actions.SignUp(true)\n                    }>{' register now '}</Text>\n                  ):(\n                    <Link to=\"/signup\" style={styles.navItem}>\n                      <Text style={styles.text}>{' register now'}</Text>\n                    </Link>\n                  )\n                }\n                \n              </View>\n            </View>\n          )\n        }\n      </View>\n      </View>\n      </LinearGradient>\n    </View>\n  );\n} \n\nconst MyForm = reduxForm({\n  form: 'test',\n  validate\n})(Login)\n\n\nexport default connect(\n  state => ({\n    isLoading: selectors.getIsAuthenticating(state),\n    error: selectors.getAuthenticatingError(state),\n    isAuthenticated: selectors.isAuthenticated(state),\n  }),\n  dispatch => ({\n    onSubmit(username, password) {\n      if(username && password){\n        dispatch(actions.startLogin(username, password))\n      }\n      else if(!username){\n        dispatch(actions.failLogin('WRITE A VALID USERNAME'))\n      }\n      else if(!password){\n        dispatch(actions.failLogin('WRITE A VALID PASSWORD'))\n      }\n    },\n  }),\n  (stateToProps,disptachToProps) => {\n    if(stateToProps.isAuthenticated){\n      if(typeof document !== 'undefined'){\n        window.location.href = URL\n      }\n      else{\n        Actions.replace('Home')\n      }\n    }\n    return ({...disptachToProps,...stateToProps})\n  }\n)(MyForm);\n"]},"metadata":{},"sourceType":"module"}