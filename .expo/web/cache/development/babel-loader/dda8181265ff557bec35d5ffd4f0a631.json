{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _marked = _regeneratorRuntime.mark(followUser),\n    _marked2 = _regeneratorRuntime.mark(watchFollowUser),\n    _marked3 = _regeneratorRuntime.mark(followExtraUser),\n    _marked4 = _regeneratorRuntime.mark(WatchfOLLOWExtraUser),\n    _marked5 = _regeneratorRuntime.mark(unFollowUser),\n    _marked6 = _regeneratorRuntime.mark(watchUnFollowUser),\n    _marked7 = _regeneratorRuntime.mark(unFollowExtraUser),\n    _marked8 = _regeneratorRuntime.mark(watchUnFollowExtraUser),\n    _marked9 = _regeneratorRuntime.mark(fetchUser),\n    _marked10 = _regeneratorRuntime.mark(watchFollowingUserFetch),\n    _marked11 = _regeneratorRuntime.mark(fetchExtraUser),\n    _marked12 = _regeneratorRuntime.mark(watchFollowingExtraUserFetch),\n    _marked13 = _regeneratorRuntime.mark(followersFetch),\n    _marked14 = _regeneratorRuntime.mark(watchFollowersFetch),\n    _marked15 = _regeneratorRuntime.mark(followingFetch),\n    _marked16 = _regeneratorRuntime.mark(watchFollowingFetch),\n    _marked17 = _regeneratorRuntime.mark(updateUser),\n    _marked18 = _regeneratorRuntime.mark(watchUpdateUser),\n    _marked19 = _regeneratorRuntime.mark(deleteUser),\n    _marked20 = _regeneratorRuntime.mark(watchDeleteUser),\n    _marked21 = _regeneratorRuntime.mark(userStoriesFetch),\n    _marked22 = _regeneratorRuntime.mark(watchUserStoriesFetch),\n    _marked23 = _regeneratorRuntime.mark(userFetch),\n    _marked24 = _regeneratorRuntime.mark(watchCurrentUserFetch);\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { call, takeEvery, put, delay, select } from 'redux-saga/effects';\nimport * as selectors from \"../reducers\";\nimport * as actions from \"../actions/user\";\nimport * as types from \"../types/user\";\nimport { API_URL, URL } from \"../../configuration\";\nimport { normalize } from 'normalizr';\nimport * as schemas from \"../schemas/user\";\nimport { Actions } from 'react-native-router-flux';\nvar API_BASE_URL = API_URL + 'api/v1';\n\nfunction followUser(action) {\n  var isAuth, token, user, response, _yield$response$json, non_field_errors;\n\n  return _regeneratorRuntime.wrap(function followUser$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return select(selectors.isAuthenticated);\n\n        case 3:\n          isAuth = _context.sent;\n\n          if (!isAuth) {\n            _context.next = 25;\n            break;\n          }\n\n          _context.next = 7;\n          return select(selectors.getAuthToken);\n\n        case 7:\n          token = _context.sent;\n          _context.next = 10;\n          return select(selectors.getAuthUserID);\n\n        case 10:\n          user = _context.sent;\n          _context.next = 13;\n          return call(fetch, API_BASE_URL + \"/follow/\", {\n            method: 'POST',\n            body: JSON.stringify(_objectSpread(_objectSpread({}, action.payload), {}, {\n              user: user\n            })),\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': \"JWT \" + token\n            }\n          });\n\n        case 13:\n          response = _context.sent;\n\n          if (!(response.status === 201)) {\n            _context.next = 19;\n            break;\n          }\n\n          _context.next = 17;\n          return put(actions.completeFollowUser());\n\n        case 17:\n          _context.next = 25;\n          break;\n\n        case 19:\n          _context.next = 21;\n          return response.json();\n\n        case 21:\n          _yield$response$json = _context.sent;\n          non_field_errors = _yield$response$json.non_field_errors;\n          _context.next = 25;\n          return put(actions.failFollowUser(non_field_errors[0]));\n\n        case 25:\n          _context.next = 31;\n          break;\n\n        case 27:\n          _context.prev = 27;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 31;\n          return put(actions.failFollowUser('CONNECTION FAILED'));\n\n        case 31:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 27]]);\n}\n\nexport function watchFollowUser() {\n  return _regeneratorRuntime.wrap(function watchFollowUser$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(types.USER_FOLLOW_STARTED, followUser);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction followExtraUser(action) {\n  var isAuth, token, user, response, _yield$response$json2, non_field_errors;\n\n  return _regeneratorRuntime.wrap(function followExtraUser$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return select(selectors.isAuthenticated);\n\n        case 3:\n          isAuth = _context3.sent;\n\n          if (!isAuth) {\n            _context3.next = 25;\n            break;\n          }\n\n          _context3.next = 7;\n          return select(selectors.getAuthToken);\n\n        case 7:\n          token = _context3.sent;\n          _context3.next = 10;\n          return select(selectors.getAuthUserID);\n\n        case 10:\n          user = _context3.sent;\n          _context3.next = 13;\n          return call(fetch, API_BASE_URL + \"/follow/\", {\n            method: 'POST',\n            body: JSON.stringify(_objectSpread(_objectSpread({}, action.payload), {}, {\n              user: user\n            })),\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': \"JWT \" + token\n            }\n          });\n\n        case 13:\n          response = _context3.sent;\n\n          if (!(response.status === 201)) {\n            _context3.next = 19;\n            break;\n          }\n\n          _context3.next = 17;\n          return put(actions.completeFollowExtraUser());\n\n        case 17:\n          _context3.next = 25;\n          break;\n\n        case 19:\n          _context3.next = 21;\n          return response.json();\n\n        case 21:\n          _yield$response$json2 = _context3.sent;\n          non_field_errors = _yield$response$json2.non_field_errors;\n          _context3.next = 25;\n          return put(actions.failFollowExtraUser(non_field_errors[0]));\n\n        case 25:\n          _context3.next = 31;\n          break;\n\n        case 27:\n          _context3.prev = 27;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 31;\n          return put(actions.failFollowExtraUser('CONNECTION FAILED'));\n\n        case 31:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 27]]);\n}\n\nexport function WatchfOLLOWExtraUser() {\n  return _regeneratorRuntime.wrap(function WatchfOLLOWExtraUser$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeEvery(types.EXTRA_USER_FOLLOW_STARTED, followExtraUser);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction unFollowUser(action) {\n  var isAuth, token, response, _yield$response$json3, non_field_errors;\n\n  return _regeneratorRuntime.wrap(function unFollowUser$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return select(selectors.isAuthenticated);\n\n        case 3:\n          isAuth = _context5.sent;\n\n          if (!isAuth) {\n            _context5.next = 22;\n            break;\n          }\n\n          _context5.next = 7;\n          return select(selectors.getAuthToken);\n\n        case 7:\n          token = _context5.sent;\n          _context5.next = 10;\n          return call(fetch, API_BASE_URL + \"/follow/unfollow/\", {\n            method: 'POST',\n            body: JSON.stringify(_objectSpread({}, action.payload)),\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': \"JWT \" + token\n            }\n          });\n\n        case 10:\n          response = _context5.sent;\n\n          if (!(response.status === 200)) {\n            _context5.next = 16;\n            break;\n          }\n\n          _context5.next = 14;\n          return put(actions.completeUnFollowExtraUser());\n\n        case 14:\n          _context5.next = 22;\n          break;\n\n        case 16:\n          _context5.next = 18;\n          return response.json();\n\n        case 18:\n          _yield$response$json3 = _context5.sent;\n          non_field_errors = _yield$response$json3.non_field_errors;\n          _context5.next = 22;\n          return put(actions.failUnFollowUser(non_field_errors[0]));\n\n        case 22:\n          _context5.next = 28;\n          break;\n\n        case 24:\n          _context5.prev = 24;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 28;\n          return put(actions.failUnFollowUser('CONNECTION FAILED'));\n\n        case 28:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 24]]);\n}\n\nexport function watchUnFollowUser() {\n  return _regeneratorRuntime.wrap(function watchUnFollowUser$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeEvery(types.USER_UNFOLLOW_STARTED, unFollowUser);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction unFollowExtraUser(action) {\n  var isAuth, token, response, _yield$response$json4, non_field_errors;\n\n  return _regeneratorRuntime.wrap(function unFollowExtraUser$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return select(selectors.isAuthenticated);\n\n        case 3:\n          isAuth = _context7.sent;\n\n          if (!isAuth) {\n            _context7.next = 22;\n            break;\n          }\n\n          _context7.next = 7;\n          return select(selectors.getAuthToken);\n\n        case 7:\n          token = _context7.sent;\n          _context7.next = 10;\n          return call(fetch, API_BASE_URL + \"/follow/unfollow/\", {\n            method: 'POST',\n            body: JSON.stringify(_objectSpread({}, action.payload)),\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': \"JWT \" + token\n            }\n          });\n\n        case 10:\n          response = _context7.sent;\n\n          if (!(response.status === 200)) {\n            _context7.next = 16;\n            break;\n          }\n\n          _context7.next = 14;\n          return put(actions.completeUnFollowExtraUser());\n\n        case 14:\n          _context7.next = 22;\n          break;\n\n        case 16:\n          _context7.next = 18;\n          return response.json();\n\n        case 18:\n          _yield$response$json4 = _context7.sent;\n          non_field_errors = _yield$response$json4.non_field_errors;\n          _context7.next = 22;\n          return put(actions.failUnFollowExtraUser(non_field_errors[0]));\n\n        case 22:\n          _context7.next = 28;\n          break;\n\n        case 24:\n          _context7.prev = 24;\n          _context7.t0 = _context7[\"catch\"](0);\n          _context7.next = 28;\n          return put(actions.failUnFollowExtraUser('CONNECTION FAILED'));\n\n        case 28:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 24]]);\n}\n\nexport function watchUnFollowExtraUser() {\n  return _regeneratorRuntime.wrap(function watchUnFollowExtraUser$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeEvery(types.EXTRA_USER_UNFOLLOW_STARTED, unFollowExtraUser);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nfunction fetchUser(action) {\n  var isAuth, userid, token, response, _yield$response$json5, result, _yield$response$json6, non_field_errors;\n\n  return _regeneratorRuntime.wrap(function fetchUser$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return select(selectors.isAuthenticated);\n\n        case 3:\n          isAuth = _context9.sent;\n          _context9.next = 6;\n          return select(selectors.getUser);\n\n        case 6:\n          userid = _context9.sent;\n\n          if (!(isAuth && userid.id)) {\n            _context9.next = 29;\n            break;\n          }\n\n          _context9.next = 10;\n          return select(selectors.getAuthToken);\n\n        case 10:\n          token = _context9.sent;\n          _context9.next = 13;\n          return call(fetch, API_BASE_URL + \"/user/\" + userid.id + \"/isfollowing/\", {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': \"JWT \" + token\n            }\n          });\n\n        case 13:\n          response = _context9.sent;\n\n          if (!(response.status === 200)) {\n            _context9.next = 23;\n            break;\n          }\n\n          _context9.next = 17;\n          return response.json();\n\n        case 17:\n          _yield$response$json5 = _context9.sent;\n          result = _yield$response$json5.result;\n          _context9.next = 21;\n          return put(actions.completeUserFollowFetch(result));\n\n        case 21:\n          _context9.next = 29;\n          break;\n\n        case 23:\n          _context9.next = 25;\n          return response.json();\n\n        case 25:\n          _yield$response$json6 = _context9.sent;\n          non_field_errors = _yield$response$json6.non_field_errors;\n          _context9.next = 29;\n          return put(actions.failUserFollowFetcch(non_field_errors[0]));\n\n        case 29:\n          _context9.next = 35;\n          break;\n\n        case 31:\n          _context9.prev = 31;\n          _context9.t0 = _context9[\"catch\"](0);\n          _context9.next = 35;\n          return put(actions.failUserFollowFetcch('CONNECTION FAILED'));\n\n        case 35:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[0, 31]]);\n}\n\nexport function watchFollowingUserFetch() {\n  return _regeneratorRuntime.wrap(function watchFollowingUserFetch$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeEvery(types.USER_IS_FOLLOWING_FETCH_STARTED, fetchUser);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\nfunction fetchExtraUser(action) {\n  var isAuth, userid, token, response, _yield$response$json7, result, _yield$response$json8, non_field_errors;\n\n  return _regeneratorRuntime.wrap(function fetchExtraUser$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.prev = 0;\n          _context11.next = 3;\n          return select(selectors.isAuthenticated);\n\n        case 3:\n          isAuth = _context11.sent;\n          _context11.next = 6;\n          return select(selectors.getExtraUser);\n\n        case 6:\n          userid = _context11.sent;\n\n          if (!(isAuth && userid.id)) {\n            _context11.next = 29;\n            break;\n          }\n\n          _context11.next = 10;\n          return select(selectors.getAuthToken);\n\n        case 10:\n          token = _context11.sent;\n          _context11.next = 13;\n          return call(fetch, API_BASE_URL + \"/user/\" + userid.id + \"/isfollowing/\", {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': \"JWT \" + token\n            }\n          });\n\n        case 13:\n          response = _context11.sent;\n\n          if (!(response.status === 200)) {\n            _context11.next = 23;\n            break;\n          }\n\n          _context11.next = 17;\n          return response.json();\n\n        case 17:\n          _yield$response$json7 = _context11.sent;\n          result = _yield$response$json7.result;\n          _context11.next = 21;\n          return put(actions.completeExtraUserFollowFetch(result));\n\n        case 21:\n          _context11.next = 29;\n          break;\n\n        case 23:\n          _context11.next = 25;\n          return response.json();\n\n        case 25:\n          _yield$response$json8 = _context11.sent;\n          non_field_errors = _yield$response$json8.non_field_errors;\n          _context11.next = 29;\n          return put(actions.failExtraUserFollowFetcch(non_field_errors[0]));\n\n        case 29:\n          _context11.next = 35;\n          break;\n\n        case 31:\n          _context11.prev = 31;\n          _context11.t0 = _context11[\"catch\"](0);\n          _context11.next = 35;\n          return put(actions.failUserFollowFetcch('CONNECTION FAILED'));\n\n        case 35:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11, null, [[0, 31]]);\n}\n\nexport function watchFollowingExtraUserFetch() {\n  return _regeneratorRuntime.wrap(function watchFollowingExtraUserFetch$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeEvery(types.EXTRA_USER_IS_FOLLOWING_FETCH_STARTED, fetchExtraUser);\n\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\n\nfunction followersFetch(action) {\n  var isAuth, user, userid, token, response, jsonResult, normalized, _yield$response$json9, non_field_errors;\n\n  return _regeneratorRuntime.wrap(function followersFetch$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.prev = 0;\n          _context13.next = 3;\n          return select(selectors.isAuthenticated);\n\n        case 3:\n          isAuth = _context13.sent;\n          _context13.next = 6;\n          return select(selectors.getUser);\n\n        case 6:\n          user = _context13.sent;\n          _context13.next = 9;\n          return select(selectors.getAuthUserID);\n\n        case 9:\n          userid = _context13.sent;\n\n          if (!(isAuth && user.id)) {\n            _context13.next = 32;\n            break;\n          }\n\n          _context13.next = 13;\n          return select(selectors.getAuthToken);\n\n        case 13:\n          token = _context13.sent;\n          _context13.next = 16;\n          return call(fetch, API_BASE_URL + \"/user/\" + user.id + \"/followers/\", {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': \"JWT \" + token\n            }\n          });\n\n        case 16:\n          response = _context13.sent;\n\n          if (!(response.status === 200)) {\n            _context13.next = 26;\n            break;\n          }\n\n          _context13.next = 20;\n          return response.json();\n\n        case 20:\n          jsonResult = _context13.sent;\n          normalized = normalize(jsonResult, schemas.users);\n          _context13.next = 24;\n          return put(actions.completeFolllwersFetch(normalized.entities.users, normalized.result, userid));\n\n        case 24:\n          _context13.next = 32;\n          break;\n\n        case 26:\n          _context13.next = 28;\n          return response.json();\n\n        case 28:\n          _yield$response$json9 = _context13.sent;\n          non_field_errors = _yield$response$json9.non_field_errors;\n          _context13.next = 32;\n          return put(actions.failFollowersFetch(non_field_errors[0]));\n\n        case 32:\n          _context13.next = 38;\n          break;\n\n        case 34:\n          _context13.prev = 34;\n          _context13.t0 = _context13[\"catch\"](0);\n          _context13.next = 38;\n          return put(actions.failFollowersFetch('CONNECTION FAILED'));\n\n        case 38:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13, null, [[0, 34]]);\n}\n\nexport function watchFollowersFetch() {\n  return _regeneratorRuntime.wrap(function watchFollowersFetch$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.next = 2;\n          return takeEvery(types.FOLLOWERS_FETCH_STARTED, followersFetch);\n\n        case 2:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked14);\n}\n\nfunction followingFetch(action) {\n  var isAuth, user, token, response, jsonResult, normalized, _yield$response$json10, non_field_errors;\n\n  return _regeneratorRuntime.wrap(function followingFetch$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.prev = 0;\n          _context15.next = 3;\n          return select(selectors.isAuthenticated);\n\n        case 3:\n          isAuth = _context15.sent;\n          _context15.next = 6;\n          return select(selectors.getUser);\n\n        case 6:\n          user = _context15.sent;\n\n          if (!(isAuth && user.id)) {\n            _context15.next = 29;\n            break;\n          }\n\n          _context15.next = 10;\n          return select(selectors.getAuthToken);\n\n        case 10:\n          token = _context15.sent;\n          _context15.next = 13;\n          return call(fetch, API_BASE_URL + \"/user/\" + user.id + \"/following/\", {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': \"JWT \" + token\n            }\n          });\n\n        case 13:\n          response = _context15.sent;\n\n          if (!(response.status === 200)) {\n            _context15.next = 23;\n            break;\n          }\n\n          _context15.next = 17;\n          return response.json();\n\n        case 17:\n          jsonResult = _context15.sent;\n          normalized = normalize(jsonResult, schemas.users);\n          _context15.next = 21;\n          return put(actions.completeFolllowingFetch(normalized.entities.users, normalized.result));\n\n        case 21:\n          _context15.next = 29;\n          break;\n\n        case 23:\n          _context15.next = 25;\n          return response.json();\n\n        case 25:\n          _yield$response$json10 = _context15.sent;\n          non_field_errors = _yield$response$json10.non_field_errors;\n          _context15.next = 29;\n          return put(actions.failFollowingFetch(non_field_errors[0]));\n\n        case 29:\n          _context15.next = 35;\n          break;\n\n        case 31:\n          _context15.prev = 31;\n          _context15.t0 = _context15[\"catch\"](0);\n          _context15.next = 35;\n          return put(actions.failFollowingFetch('CONNECTION FAILED'));\n\n        case 35:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _marked15, null, [[0, 31]]);\n}\n\nexport function watchFollowingFetch() {\n  return _regeneratorRuntime.wrap(function watchFollowingFetch$(_context16) {\n    while (1) {\n      switch (_context16.prev = _context16.next) {\n        case 0:\n          _context16.next = 2;\n          return takeEvery(types.FOLLOWING_FETCH_STARTED, followingFetch);\n\n        case 2:\n        case \"end\":\n          return _context16.stop();\n      }\n    }\n  }, _marked16);\n}\n\nfunction updateUser(action) {\n  var isAuth, user, token, response, jsonResult, _yield$response$json11, non_field_errors;\n\n  return _regeneratorRuntime.wrap(function updateUser$(_context17) {\n    while (1) {\n      switch (_context17.prev = _context17.next) {\n        case 0:\n          _context17.prev = 0;\n          _context17.next = 3;\n          return select(selectors.isAuthenticated);\n\n        case 3:\n          isAuth = _context17.sent;\n          _context17.next = 6;\n          return select(selectors.getUser);\n\n        case 6:\n          user = _context17.sent;\n\n          if (!(isAuth && user.id)) {\n            _context17.next = 28;\n            break;\n          }\n\n          _context17.next = 10;\n          return select(selectors.getAuthToken);\n\n        case 10:\n          token = _context17.sent;\n          _context17.next = 13;\n          return call(fetch, API_BASE_URL + \"/user/\" + user.id + \"/\", {\n            method: 'PATCH',\n            body: action.payload,\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': \"JWT \" + token\n            }\n          });\n\n        case 13:\n          response = _context17.sent;\n\n          if (!(response.status === 200)) {\n            _context17.next = 22;\n            break;\n          }\n\n          _context17.next = 17;\n          return response.json();\n\n        case 17:\n          jsonResult = _context17.sent;\n          _context17.next = 20;\n          return put(actions.completeUptade(jsonResult));\n\n        case 20:\n          _context17.next = 28;\n          break;\n\n        case 22:\n          _context17.next = 24;\n          return response.json();\n\n        case 24:\n          _yield$response$json11 = _context17.sent;\n          non_field_errors = _yield$response$json11.non_field_errors;\n          _context17.next = 28;\n          return put(actions.failUpdate(non_field_errors[0]));\n\n        case 28:\n          _context17.next = 34;\n          break;\n\n        case 30:\n          _context17.prev = 30;\n          _context17.t0 = _context17[\"catch\"](0);\n          _context17.next = 34;\n          return put(actions.failUpdate('CONNECTION FAILED'));\n\n        case 34:\n        case \"end\":\n          return _context17.stop();\n      }\n    }\n  }, _marked17, null, [[0, 30]]);\n}\n\nexport function watchUpdateUser() {\n  return _regeneratorRuntime.wrap(function watchUpdateUser$(_context18) {\n    while (1) {\n      switch (_context18.prev = _context18.next) {\n        case 0:\n          _context18.next = 2;\n          return takeEvery(types.UPDATE_STARTED, updateUser);\n\n        case 2:\n        case \"end\":\n          return _context18.stop();\n      }\n    }\n  }, _marked18);\n}\n\nfunction deleteUser(action) {\n  var isAuth, user, token, response, jsonResult, _yield$response$json12, non_field_errors;\n\n  return _regeneratorRuntime.wrap(function deleteUser$(_context19) {\n    while (1) {\n      switch (_context19.prev = _context19.next) {\n        case 0:\n          _context19.prev = 0;\n          _context19.next = 3;\n          return select(selectors.isAuthenticated);\n\n        case 3:\n          isAuth = _context19.sent;\n          _context19.next = 6;\n          return select(selectors.getUser);\n\n        case 6:\n          user = _context19.sent;\n\n          if (!(isAuth && user.id)) {\n            _context19.next = 28;\n            break;\n          }\n\n          _context19.next = 10;\n          return select(selectors.getAuthToken);\n\n        case 10:\n          token = _context19.sent;\n          _context19.next = 13;\n          return call(fetch, API_BASE_URL + \"/user/\" + user.id + \"/\", {\n            method: 'DELETE',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': \"JWT \" + token\n            }\n          });\n\n        case 13:\n          response = _context19.sent;\n\n          if (!(response.status === 200)) {\n            _context19.next = 22;\n            break;\n          }\n\n          _context19.next = 17;\n          return response.json();\n\n        case 17:\n          jsonResult = _context19.sent;\n          _context19.next = 20;\n          return put(actions.completeDelete());\n\n        case 20:\n          _context19.next = 28;\n          break;\n\n        case 22:\n          _context19.next = 24;\n          return response.json();\n\n        case 24:\n          _yield$response$json12 = _context19.sent;\n          non_field_errors = _yield$response$json12.non_field_errors;\n          _context19.next = 28;\n          return put(actions.failDelete(non_field_errors[0]));\n\n        case 28:\n          _context19.next = 34;\n          break;\n\n        case 30:\n          _context19.prev = 30;\n          _context19.t0 = _context19[\"catch\"](0);\n          _context19.next = 34;\n          return put(actions.failDelete('CONNECTION FAILED'));\n\n        case 34:\n        case \"end\":\n          return _context19.stop();\n      }\n    }\n  }, _marked19, null, [[0, 30]]);\n}\n\nexport function watchDeleteUser() {\n  return _regeneratorRuntime.wrap(function watchDeleteUser$(_context20) {\n    while (1) {\n      switch (_context20.prev = _context20.next) {\n        case 0:\n          _context20.next = 2;\n          return takeEvery(types.DELETE_STARTED, deleteUser);\n\n        case 2:\n        case \"end\":\n          return _context20.stop();\n      }\n    }\n  }, _marked20);\n}\n\nfunction userStoriesFetch(action) {\n  var isAuth, user, token, response, jsonResult, normalized, _yield$response$json13, non_field_errors;\n\n  return _regeneratorRuntime.wrap(function userStoriesFetch$(_context21) {\n    while (1) {\n      switch (_context21.prev = _context21.next) {\n        case 0:\n          _context21.prev = 0;\n          _context21.next = 3;\n          return select(selectors.isAuthenticated);\n\n        case 3:\n          isAuth = _context21.sent;\n          _context21.next = 6;\n          return select(selectors.getUser);\n\n        case 6:\n          user = _context21.sent;\n\n          if (!(isAuth && user.id)) {\n            _context21.next = 29;\n            break;\n          }\n\n          _context21.next = 10;\n          return select(selectors.getAuthToken);\n\n        case 10:\n          token = _context21.sent;\n          _context21.next = 13;\n          return call(fetch, API_BASE_URL + \"/user/\" + user.id + \"/stories/\", {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': \"JWT \" + token\n            }\n          });\n\n        case 13:\n          response = _context21.sent;\n\n          if (!(response.status === 200)) {\n            _context21.next = 23;\n            break;\n          }\n\n          _context21.next = 17;\n          return response.json();\n\n        case 17:\n          jsonResult = _context21.sent;\n          normalized = normalize(jsonResult, schemas.users);\n          _context21.next = 21;\n          return put(actions.completeStoriesFetch(normalized.entities.users, normalized.result));\n\n        case 21:\n          _context21.next = 29;\n          break;\n\n        case 23:\n          _context21.next = 25;\n          return response.json();\n\n        case 25:\n          _yield$response$json13 = _context21.sent;\n          non_field_errors = _yield$response$json13.non_field_errors;\n          _context21.next = 29;\n          return put(actions.failStoriesFetch(non_field_errors[0]));\n\n        case 29:\n          _context21.next = 35;\n          break;\n\n        case 31:\n          _context21.prev = 31;\n          _context21.t0 = _context21[\"catch\"](0);\n          _context21.next = 35;\n          return put(actions.failStoriesFetch('CONNECTION FAILED'));\n\n        case 35:\n        case \"end\":\n          return _context21.stop();\n      }\n    }\n  }, _marked21, null, [[0, 31]]);\n}\n\nexport function watchUserStoriesFetch() {\n  return _regeneratorRuntime.wrap(function watchUserStoriesFetch$(_context22) {\n    while (1) {\n      switch (_context22.prev = _context22.next) {\n        case 0:\n          _context22.next = 2;\n          return takeEvery(types.USER_STORIES_STARTED, userStoriesFetch);\n\n        case 2:\n        case \"end\":\n          return _context22.stop();\n      }\n    }\n  }, _marked22);\n}\n\nfunction userFetch(action) {\n  var isAuth, token, response, jsonResult, _yield$response$json14, non_field_errors;\n\n  return _regeneratorRuntime.wrap(function userFetch$(_context23) {\n    while (1) {\n      switch (_context23.prev = _context23.next) {\n        case 0:\n          _context23.prev = 0;\n          _context23.next = 3;\n          return select(selectors.isAuthenticated);\n\n        case 3:\n          isAuth = _context23.sent;\n\n          if (!isAuth) {\n            _context23.next = 25;\n            break;\n          }\n\n          _context23.next = 7;\n          return select(selectors.getAuthToken);\n\n        case 7:\n          token = _context23.sent;\n          _context23.next = 10;\n          return call(fetch, API_BASE_URL + \"/user/\" + action.payload + \"/\", {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': \"JWT \" + token\n            }\n          });\n\n        case 10:\n          response = _context23.sent;\n\n          if (!(response.status === 200)) {\n            _context23.next = 19;\n            break;\n          }\n\n          _context23.next = 14;\n          return response.json();\n\n        case 14:\n          jsonResult = _context23.sent;\n          _context23.next = 17;\n          return put(actions.completeUsFetch(jsonResult));\n\n        case 17:\n          _context23.next = 25;\n          break;\n\n        case 19:\n          _context23.next = 21;\n          return response.json();\n\n        case 21:\n          _yield$response$json14 = _context23.sent;\n          non_field_errors = _yield$response$json14.non_field_errors;\n          _context23.next = 25;\n          return put(actions.failUserFetch(non_field_errors[0]));\n\n        case 25:\n          if (!(typeof document !== 'undefined')) {\n            _context23.next = 30;\n            break;\n          }\n\n          _context23.next = 28;\n          return window.location.href = URL + 'user/';\n\n        case 28:\n          _context23.next = 32;\n          break;\n\n        case 30:\n          _context23.next = 32;\n          return Actions.replace('User');\n\n        case 32:\n          _context23.next = 38;\n          break;\n\n        case 34:\n          _context23.prev = 34;\n          _context23.t0 = _context23[\"catch\"](0);\n          _context23.next = 38;\n          return put(actions.failUserFetch('CONNECTION FAILED'));\n\n        case 38:\n        case \"end\":\n          return _context23.stop();\n      }\n    }\n  }, _marked23, null, [[0, 34]]);\n}\n\nexport function watchCurrentUserFetch() {\n  return _regeneratorRuntime.wrap(function watchCurrentUserFetch$(_context24) {\n    while (1) {\n      switch (_context24.prev = _context24.next) {\n        case 0:\n          _context24.next = 2;\n          return takeEvery(types.USER_STARTED, userFetch);\n\n        case 2:\n        case \"end\":\n          return _context24.stop();\n      }\n    }\n  }, _marked24);\n}","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/src/sagas/user.js"],"names":["followUser","watchFollowUser","followExtraUser","WatchfOLLOWExtraUser","unFollowUser","watchUnFollowUser","unFollowExtraUser","watchUnFollowExtraUser","fetchUser","watchFollowingUserFetch","fetchExtraUser","watchFollowingExtraUserFetch","followersFetch","watchFollowersFetch","followingFetch","watchFollowingFetch","updateUser","watchUpdateUser","deleteUser","watchDeleteUser","userStoriesFetch","watchUserStoriesFetch","userFetch","watchCurrentUserFetch","call","takeEvery","put","delay","select","selectors","actions","types","API_URL","URL","normalize","schemas","Actions","API_BASE_URL","action","isAuthenticated","isAuth","getAuthToken","token","getAuthUserID","user","fetch","method","body","JSON","stringify","payload","headers","response","status","completeFollowUser","json","non_field_errors","failFollowUser","USER_FOLLOW_STARTED","completeFollowExtraUser","failFollowExtraUser","EXTRA_USER_FOLLOW_STARTED","completeUnFollowExtraUser","failUnFollowUser","USER_UNFOLLOW_STARTED","failUnFollowExtraUser","EXTRA_USER_UNFOLLOW_STARTED","getUser","userid","id","result","completeUserFollowFetch","failUserFollowFetcch","USER_IS_FOLLOWING_FETCH_STARTED","getExtraUser","completeExtraUserFollowFetch","failExtraUserFollowFetcch","EXTRA_USER_IS_FOLLOWING_FETCH_STARTED","jsonResult","normalized","users","completeFolllwersFetch","entities","failFollowersFetch","FOLLOWERS_FETCH_STARTED","completeFolllowingFetch","failFollowingFetch","FOLLOWING_FETCH_STARTED","completeUptade","failUpdate","UPDATE_STARTED","completeDelete","failDelete","DELETE_STARTED","completeStoriesFetch","failStoriesFetch","USER_STORIES_STARTED","completeUsFetch","failUserFetch","document","window","location","href","replace","USER_STARTED"],"mappings":"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","sourcesContent":["import {\n    call,\n    takeEvery,\n    put,\n    // race,\n    // all,\n    delay,\n    select,\n  } from 'redux-saga/effects';\n\nimport * as selectors from '../reducers';\nimport * as actions from '../actions/user';\nimport * as types from '../types/user';\nimport { API_URL, URL } from '../../configuration';\nimport { normalize } from 'normalizr';\nimport * as schemas from '../schemas/user';\nimport { Actions } from 'react-native-router-flux';\n  \n  const API_BASE_URL =  API_URL + 'api/v1';\n  \n\n  function* followUser(action) {\n    try {\n        const isAuth = yield select(selectors.isAuthenticated);\n    \n        if (isAuth) {\n          const token = yield select(selectors.getAuthToken);\n          const user = yield select(selectors.getAuthUserID);\n          const response = yield call(\n            fetch,\n            `${API_BASE_URL}/follow/`,\n            {\n              method: 'POST',\n              body: JSON.stringify({...action.payload,user:user}),\n              headers:{\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${token}`,\n              },\n            }\n          );\n          if (response.status === 201) {\n            yield put(\n              actions.completeFollowUser(),\n            );\n          } else {\n            const { non_field_errors } = yield response.json();\n            yield put(actions.failFollowUser(non_field_errors[0]));\n          }\n        }\n      } catch (error) {\n        yield put(actions.failFollowUser('CONNECTION FAILED'));\n      }\n  }\n  \n  export function* watchFollowUser() {\n    yield takeEvery(\n      types.USER_FOLLOW_STARTED,\n      followUser,\n    );\n  }\n\n\n  function* followExtraUser(action) {\n    try {\n        const isAuth = yield select(selectors.isAuthenticated);\n    \n        if (isAuth) {\n          const token = yield select(selectors.getAuthToken);\n          const user = yield select(selectors.getAuthUserID);\n          const response = yield call(\n            fetch,\n            `${API_BASE_URL}/follow/`,\n            {\n              method: 'POST',\n              body: JSON.stringify({...action.payload,user:user}),\n              headers:{\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${token}`,\n              },\n            }\n          );\n          if (response.status === 201) {\n            yield put(\n              actions.completeFollowExtraUser(),\n            );\n          } else {\n            const { non_field_errors } = yield response.json();\n            yield put(actions.failFollowExtraUser(non_field_errors[0]));\n          }\n        }\n      } catch (error) {\n        yield put(actions.failFollowExtraUser('CONNECTION FAILED'));\n      }\n  }\n  \n  export function* WatchfOLLOWExtraUser() {\n    yield takeEvery(\n      types.EXTRA_USER_FOLLOW_STARTED,\n      followExtraUser,\n    );\n  }\n\n\n\n\n\n\n\n  function* unFollowUser(action) {\n    try {\n        const isAuth = yield select(selectors.isAuthenticated);\n    \n        if (isAuth) {\n          const token = yield select(selectors.getAuthToken);\n          const response = yield call(\n            fetch,\n            `${API_BASE_URL}/follow/unfollow/`,\n            {\n              method: 'POST',\n              body: JSON.stringify({...action.payload}),\n              headers:{\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${token}`,\n              },\n            }\n          );\n          if (response.status === 200) {\n            yield put(\n              actions.completeUnFollowExtraUser(),\n            );\n          } else {\n            const { non_field_errors } = yield response.json();\n            yield put(actions.failUnFollowUser(non_field_errors[0]));\n          }\n        }\n      } catch (error) {\n        yield put(actions.failUnFollowUser('CONNECTION FAILED'));\n      }\n  }\n  \n  export function* watchUnFollowUser() {\n    yield takeEvery(\n      types.USER_UNFOLLOW_STARTED,\n      unFollowUser,\n    );\n  }\n\n\n  function* unFollowExtraUser(action) {\n    try {\n        const isAuth = yield select(selectors.isAuthenticated);\n    \n        if (isAuth) {\n          const token = yield select(selectors.getAuthToken);\n          const response = yield call(\n            fetch,\n            `${API_BASE_URL}/follow/unfollow/`,\n            {\n              method: 'POST',\n              body: JSON.stringify({...action.payload}),\n              headers:{\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${token}`,\n              },\n            }\n          );\n          if (response.status === 200) {\n            yield put(\n              actions.completeUnFollowExtraUser(),\n            );\n          } else {\n            const { non_field_errors } = yield response.json();\n            yield put(actions.failUnFollowExtraUser(non_field_errors[0]));\n          }\n        }\n      } catch (error) {\n        yield put(actions.failUnFollowExtraUser('CONNECTION FAILED'));\n      }\n  }\n  \n  export function* watchUnFollowExtraUser() {\n    yield takeEvery(\n      types.EXTRA_USER_UNFOLLOW_STARTED,\n      unFollowExtraUser,\n    );\n  }\n\n\n\n  function* fetchUser(action) {\n    try {\n        const isAuth = yield select(selectors.isAuthenticated);\n        const userid = yield select(selectors.getUser)\n        if (isAuth && userid.id) {\n          const token = yield select(selectors.getAuthToken);\n          const response = yield call(\n            fetch,\n            `${API_BASE_URL}/user/${userid.id}/isfollowing/`,\n            {\n              method: 'GET',\n              headers:{\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${token}`,\n              },\n            }\n          );\n          if (response.status === 200) {\n            const {result} = yield response.json();\n            yield put(\n              actions.completeUserFollowFetch(result),\n            );\n          } else {\n            const { non_field_errors } = yield response.json();\n            yield put(actions.failUserFollowFetcch(non_field_errors[0]));\n          }\n        }\n      } catch (error) {\n        yield put(actions.failUserFollowFetcch('CONNECTION FAILED'));\n      }\n  }\n  \n  export function* watchFollowingUserFetch() {\n    yield takeEvery(\n      types.USER_IS_FOLLOWING_FETCH_STARTED,\n      fetchUser,\n    );\n  }\n\n  function* fetchExtraUser(action) {\n    try {\n        const isAuth = yield select(selectors.isAuthenticated);\n        const userid = yield select(selectors.getExtraUser)\n        if (isAuth && userid.id) {\n          const token = yield select(selectors.getAuthToken);\n          const response = yield call(\n            fetch,\n            `${API_BASE_URL}/user/${userid.id}/isfollowing/`,\n            {\n              method: 'GET',\n              headers:{\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${token}`,\n              },\n            }\n          );\n          if (response.status === 200) {\n            const {result} = yield response.json();\n            yield put(\n              actions.completeExtraUserFollowFetch(result),\n            );\n          } else {\n            const { non_field_errors } = yield response.json();\n            yield put(actions.failExtraUserFollowFetcch(non_field_errors[0]));\n          }\n        }\n      } catch (error) {\n        yield put(actions.failUserFollowFetcch('CONNECTION FAILED'));\n      }\n  }\n  \n  export function* watchFollowingExtraUserFetch() {\n    yield takeEvery(\n      types.EXTRA_USER_IS_FOLLOWING_FETCH_STARTED,\n      fetchExtraUser,\n    );\n  }\n\n\n  function* followersFetch(action) {\n    try {\n        const isAuth = yield select(selectors.isAuthenticated);\n        const user = yield select(selectors.getUser);\n        const userid = yield select(selectors.getAuthUserID)\n        if (isAuth && user.id) {\n          const token = yield select(selectors.getAuthToken);\n          const response = yield call(\n            fetch,\n            `${API_BASE_URL}/user/${user.id}/followers/`,\n            {\n              method: 'GET',\n              headers:{\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${token}`,\n              },\n            }\n          );\n          if (response.status === 200) {\n            const jsonResult = yield response.json();\n            const normalized = normalize(jsonResult, schemas.users);\n            yield put(\n            actions.completeFolllwersFetch(\n                normalized.entities.users,\n                normalized.result,\n                userid\n            ),\n            );\n          } else {\n            const { non_field_errors } = yield response.json();\n            yield put(actions.failFollowersFetch(non_field_errors[0]));\n          }\n        }\n      } catch (error) {\n        yield put(actions.failFollowersFetch('CONNECTION FAILED'));\n      }\n  }\n  \n  export function* watchFollowersFetch() {\n    yield takeEvery(\n      types.FOLLOWERS_FETCH_STARTED,\n      followersFetch,\n    );\n  }\n\n\n  function* followingFetch(action) {\n    try {\n        const isAuth = yield select(selectors.isAuthenticated);\n        const user = yield select(selectors.getUser);\n        if (isAuth && user.id) {\n          const token = yield select(selectors.getAuthToken);\n          const response = yield call(\n            fetch,\n            `${API_BASE_URL}/user/${user.id}/following/`,\n            {\n              method: 'GET',\n              headers:{\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${token}`,\n              },\n            }\n          );\n          if (response.status === 200) {\n            const jsonResult = yield response.json();\n            const normalized = normalize(jsonResult, schemas.users);\n            yield put(\n            actions.completeFolllowingFetch(\n                normalized.entities.users,\n                normalized.result\n            ),\n            );\n          } else {\n            const { non_field_errors } = yield response.json();\n            yield put(actions.failFollowingFetch(non_field_errors[0]));\n          }\n        }\n      } catch (error) {\n        yield put(actions.failFollowingFetch('CONNECTION FAILED'));\n      }\n  }\n  \n  export function* watchFollowingFetch() {\n    yield takeEvery(\n      types.FOLLOWING_FETCH_STARTED,\n      followingFetch,\n    );\n  }\n\n\n  function* updateUser(action) {\n    try {\n        const isAuth = yield select(selectors.isAuthenticated);\n        const user = yield select(selectors.getUser);\n        if (isAuth && user.id) {\n          const token = yield select(selectors.getAuthToken);\n          const response = yield call(\n            fetch,\n            `${API_BASE_URL}/user/${user.id}/`,\n            {\n              method: 'PATCH',\n              body: action.payload,\n              headers:{\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${token}`,\n              },\n            }\n          );\n          if (response.status === 200) {\n            const jsonResult = yield response.json();\n            yield put(\n            actions.completeUptade(\n                jsonResult\n            ),\n            );\n          } else {\n            const { non_field_errors } = yield response.json();\n            yield put(actions.failUpdate(non_field_errors[0]));\n          }\n        }\n      } catch (error) {\n        yield put(actions.failUpdate('CONNECTION FAILED'));\n      }\n  }\n  \n  export function* watchUpdateUser() {\n    yield takeEvery(\n      types.UPDATE_STARTED,\n      updateUser,\n    );\n  }\n\n\n\n  function* deleteUser(action) {\n    try {\n        const isAuth = yield select(selectors.isAuthenticated);\n        const user = yield select(selectors.getUser);\n        if (isAuth && user.id) {\n          const token = yield select(selectors.getAuthToken);\n          const response = yield call(\n            fetch,\n            `${API_BASE_URL}/user/${user.id}/`,\n            {\n              method: 'DELETE',\n              headers:{\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${token}`,\n              },\n            }\n          );\n          if (response.status === 200) {\n            const jsonResult = yield response.json();\n            yield put(\n            actions.completeDelete(),\n            );\n          } else {\n            const { non_field_errors } = yield response.json();\n            yield put(actions.failDelete(non_field_errors[0]));\n          }\n        }\n      } catch (error) {\n        yield put(actions.failDelete('CONNECTION FAILED'));\n      }\n  }\n  \n  export function* watchDeleteUser() {\n    yield takeEvery(\n      types.DELETE_STARTED,\n      deleteUser,\n    );\n  }\n  \n\n\n  function* userStoriesFetch(action) {\n    try {\n        const isAuth = yield select(selectors.isAuthenticated);\n        const user = yield select(selectors.getUser);\n        if (isAuth && user.id) {\n          const token = yield select(selectors.getAuthToken);\n          const response = yield call(\n            fetch,\n            `${API_BASE_URL}/user/${user.id}/stories/`,\n            {\n              method: 'GET',\n              headers:{\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${token}`,\n              },\n            }\n          );\n          if (response.status === 200) {\n            const jsonResult = yield response.json();\n            const normalized = normalize(jsonResult, schemas.users);\n            yield put(\n            actions.completeStoriesFetch(\n                normalized.entities.users,\n                normalized.result\n            ),\n            );\n          } else {\n            const { non_field_errors } = yield response.json();\n            yield put(actions.failStoriesFetch(non_field_errors[0]));\n          }\n        }\n      } catch (error) {\n        yield put(actions.failStoriesFetch('CONNECTION FAILED'));\n      }\n  }\n  \n  export function* watchUserStoriesFetch() {\n    yield takeEvery(\n      types.USER_STORIES_STARTED,\n      userStoriesFetch,\n    );\n  }\n\n  function* userFetch(action) {\n    try {\n        const isAuth = yield select(selectors.isAuthenticated);\n        if (isAuth) {\n          const token = yield select(selectors.getAuthToken);\n          const response = yield call(\n            fetch,\n            `${API_BASE_URL}/user/${action.payload}/`,\n            {\n              method: 'GET',\n              headers:{\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${token}`,\n              },\n            }\n          );\n          if (response.status === 200) {\n            const jsonResult = yield response.json();\n            yield put(\n            actions.completeUsFetch(\n                jsonResult\n            ),\n            );\n          } else {\n            const { non_field_errors } = yield response.json();\n            yield put(actions.failUserFetch(non_field_errors[0]));\n          }\n        }\n        if(typeof document !== 'undefined'){\n          yield window.location.href = URL+'user/'\n        }\n        else{\n          yield Actions.replace('User')\n        }\n      } catch (error) {\n        yield put(actions.failUserFetch('CONNECTION FAILED'));\n      }\n  }\n  \n  export function* watchCurrentUserFetch() {\n    yield takeEvery(\n      types.USER_STARTED,\n      userFetch,\n    );\n  }\n"]},"metadata":{},"sourceType":"module"}