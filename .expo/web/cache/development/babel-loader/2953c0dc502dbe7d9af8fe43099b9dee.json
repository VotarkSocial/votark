{"ast":null,"code":"'use strict';\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/thecoder/Documentos/votark/votark/src/components/Camara/index.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { RNCamera } from 'react-native-camera';\n\nvar MyCamera = function (_PureComponent) {\n  _inherits(MyCamera, _PureComponent);\n\n  var _super = _createSuper(MyCamera);\n\n  function MyCamera() {\n    var _this;\n\n    _classCallCheck(this, MyCamera);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.takePicture = function _callee() {\n      var options, data;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!_this.camera) {\n                _context.next = 6;\n                break;\n              }\n\n              options = {\n                quality: 0.5,\n                base64: true\n              };\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(_this.camera.takePictureAsync(options));\n\n            case 4:\n              data = _context.sent;\n              console.log(data.uri);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(MyCamera, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 7\n        }\n      }, React.createElement(RNCamera, {\n        ref: function ref(_ref2) {\n          _this2.camera = _ref2;\n        },\n        style: styles.preview,\n        type: RNCamera.Constants.Type.back,\n        flashMode: RNCamera.Constants.FlashMode.on,\n        androidCameraPermissionOptions: {\n          title: 'Permission to use camera',\n          message: 'We need your permission to use your camera',\n          buttonPositive: 'Ok',\n          buttonNegative: 'Cancel'\n        },\n        androidRecordAudioPermissionOptions: {\n          title: 'Permission to use audio recording',\n          message: 'We need your permission to use your audio',\n          buttonPositive: 'Ok',\n          buttonNegative: 'Cancel'\n        },\n        onGoogleVisionBarcodesDetected: function onGoogleVisionBarcodesDetected(_ref) {\n          var barcodes = _ref.barcodes;\n          console.log(barcodes);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: {\n          flex: 0,\n          flexDirection: 'row',\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: this.takePicture.bind(this),\n        style: styles.capture,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 14\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }, \" SNAP \"))));\n    }\n  }]);\n\n  return MyCamera;\n}(PureComponent);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    backgroundColor: 'black'\n  },\n  preview: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  },\n  capture: {\n    flex: 0,\n    backgroundColor: '#fff',\n    borderRadius: 5,\n    padding: 15,\n    paddingHorizontal: 20,\n    alignSelf: 'center',\n    margin: 20\n  }\n});\nexport default MyCamera;","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/src/components/Camara/index.js"],"names":["React","PureComponent","RNCamera","MyCamera","takePicture","camera","options","quality","base64","takePictureAsync","data","console","log","uri","styles","container","ref","preview","Constants","Type","back","FlashMode","on","title","message","buttonPositive","buttonNegative","barcodes","flex","flexDirection","justifyContent","bind","capture","fontSize","StyleSheet","create","backgroundColor","alignItems","borderRadius","padding","paddingHorizontal","alignSelf","margin"],"mappings":"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","sourcesContent":["'use strict';\nimport React, { PureComponent } from 'react';\nimport { AppRegistry, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { RNCamera } from 'react-native-camera';\n\nclass MyCamera extends PureComponent {\n  render() {\n    return (\n      <View style={styles.container}>\n        <RNCamera\n          ref={ref => {\n            this.camera = ref;\n          }}\n          style={styles.preview}\n          type={RNCamera.Constants.Type.back}\n          flashMode={RNCamera.Constants.FlashMode.on}\n          androidCameraPermissionOptions={{\n            title: 'Permission to use camera',\n            message: 'We need your permission to use your camera',\n            buttonPositive: 'Ok',\n            buttonNegative: 'Cancel',\n          }}\n          androidRecordAudioPermissionOptions={{\n            title: 'Permission to use audio recording',\n            message: 'We need your permission to use your audio',\n            buttonPositive: 'Ok',\n            buttonNegative: 'Cancel',\n          }}\n          onGoogleVisionBarcodesDetected={({ barcodes }) => {\n            console.log(barcodes);\n          }}\n        />\n        <View style={{ flex: 0, flexDirection: 'row', justifyContent: 'center' }}>\n          <TouchableOpacity onPress={this.takePicture.bind(this)} style={styles.capture}>\n            <Text style={{ fontSize: 14 }}> SNAP </Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  }\n\n  takePicture = async () => {\n    if (this.camera) {\n      const options = { quality: 0.5, base64: true };\n      const data = await this.camera.takePictureAsync(options);\n      console.log(data.uri);\n    }\n  };\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    backgroundColor: 'black',\n  },\n  preview: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n  capture: {\n    flex: 0,\n    backgroundColor: '#fff',\n    borderRadius: 5,\n    padding: 15,\n    paddingHorizontal: 20,\n    alignSelf: 'center',\n    margin: 20,\n  },\n});\n\nexport default MyCamera;"]},"metadata":{},"sourceType":"module"}