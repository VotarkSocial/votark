{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _marked = _regeneratorRuntime.mark(like),\n    _marked2 = _regeneratorRuntime.mark(watchLike),\n    _marked3 = _regeneratorRuntime.mark(heart),\n    _marked4 = _regeneratorRuntime.mark(watchHeart),\n    _marked5 = _regeneratorRuntime.mark(fetchLike),\n    _marked6 = _regeneratorRuntime.mark(watchFetchLIke),\n    _marked7 = _regeneratorRuntime.mark(fetchHeart),\n    _marked8 = _regeneratorRuntime.mark(watchFetchHeart),\n    _marked9 = _regeneratorRuntime.mark(unlike),\n    _marked10 = _regeneratorRuntime.mark(watchUnLike),\n    _marked11 = _regeneratorRuntime.mark(unheart),\n    _marked12 = _regeneratorRuntime.mark(watchUnHeart);\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { call, takeEvery, put, delay, select } from 'redux-saga/effects';\nimport * as selectors from \"../reducers\";\nimport * as actions from \"../actions/reaction\";\nimport * as types from \"../types/reactions\";\nimport { API_URL } from \"../../configuration\";\nimport { normalize } from 'normalizr';\nimport * as schemas from \"../schemas/like\";\nvar API_BASE_URL = API_URL + 'api/v1';\n\nfunction like(action) {\n  var isAuth, token, user, response, jsonResult, _yield$response$json, non_field_errors;\n\n  return _regeneratorRuntime.wrap(function like$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return select(selectors.isAuthenticated);\n\n        case 3:\n          isAuth = _context.sent;\n\n          if (!isAuth) {\n            _context.next = 28;\n            break;\n          }\n\n          _context.next = 7;\n          return select(selectors.getAuthToken);\n\n        case 7:\n          token = _context.sent;\n          _context.next = 10;\n          return select(selectors.getAuthUserID);\n\n        case 10:\n          user = _context.sent;\n          _context.next = 13;\n          return call(fetch, API_BASE_URL + \"/like/\", {\n            method: 'POST',\n            body: JSON.stringify(_objectSpread(_objectSpread({}, action.payload), {}, {\n              user: user,\n              reaction: 0\n            })),\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': \"JWT \" + token\n            }\n          });\n\n        case 13:\n          response = _context.sent;\n\n          if (!(response.status === 200)) {\n            _context.next = 22;\n            break;\n          }\n\n          _context.next = 17;\n          return response.json();\n\n        case 17:\n          jsonResult = _context.sent;\n          _context.next = 20;\n          return put(actions.completeLikeVersus(jsonResult));\n\n        case 20:\n          _context.next = 28;\n          break;\n\n        case 22:\n          _context.next = 24;\n          return response.json();\n\n        case 24:\n          _yield$response$json = _context.sent;\n          non_field_errors = _yield$response$json.non_field_errors;\n          _context.next = 28;\n          return put(actions.failLikeVersus(non_field_errors[0]));\n\n        case 28:\n          _context.next = 34;\n          break;\n\n        case 30:\n          _context.prev = 30;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 34;\n          return put(actions.failLikeVersus('NETWORK ERROR'));\n\n        case 34:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 30]]);\n}\n\nexport function watchLike() {\n  return _regeneratorRuntime.wrap(function watchLike$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(types.VERSUS_LIKE_STARTED, like);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction heart(action) {\n  var isAuth, token, user, response, jsonResult, _yield$response$json2, non_field_errors;\n\n  return _regeneratorRuntime.wrap(function heart$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return select(selectors.isAuthenticated);\n\n        case 3:\n          isAuth = _context3.sent;\n\n          if (!isAuth) {\n            _context3.next = 28;\n            break;\n          }\n\n          _context3.next = 7;\n          return select(selectors.getAuthToken);\n\n        case 7:\n          token = _context3.sent;\n          _context3.next = 10;\n          return select(selectors.getAuthUserID);\n\n        case 10:\n          user = _context3.sent;\n          _context3.next = 13;\n          return call(fetch, API_BASE_URL + \"/like/\", {\n            method: 'POST',\n            body: JSON.stringify(_objectSpread(_objectSpread({}, action.payload), {}, {\n              user: user,\n              reaction: 1\n            })),\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': \"JWT \" + token\n            }\n          });\n\n        case 13:\n          response = _context3.sent;\n\n          if (!(response.status === 200)) {\n            _context3.next = 22;\n            break;\n          }\n\n          _context3.next = 17;\n          return response.json();\n\n        case 17:\n          jsonResult = _context3.sent;\n          _context3.next = 20;\n          return put(actions.completeHeartVersus(jsonResult));\n\n        case 20:\n          _context3.next = 28;\n          break;\n\n        case 22:\n          _context3.next = 24;\n          return response.json();\n\n        case 24:\n          _yield$response$json2 = _context3.sent;\n          non_field_errors = _yield$response$json2.non_field_errors;\n          _context3.next = 28;\n          return put(actions.failHeartVersus(non_field_errors[0]));\n\n        case 28:\n          _context3.next = 34;\n          break;\n\n        case 30:\n          _context3.prev = 30;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 34;\n          return put(actions.failHeartVersus('NETWORK ERROR'));\n\n        case 34:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 30]]);\n}\n\nexport function watchHeart() {\n  return _regeneratorRuntime.wrap(function watchHeart$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeEvery(types.VERSUS_HEART_STARTED, heart);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction fetchLike(action) {\n  var isAuth, token, user, response, _yield$response$json3, result, _yield$response$json4, non_field_errors;\n\n  return _regeneratorRuntime.wrap(function fetchLike$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return select(selectors.isAuthenticated);\n\n        case 3:\n          isAuth = _context5.sent;\n\n          if (!isAuth) {\n            _context5.next = 29;\n            break;\n          }\n\n          _context5.next = 7;\n          return select(selectors.getAuthToken);\n\n        case 7:\n          token = _context5.sent;\n          _context5.next = 10;\n          return select(selectors.getAuthUserID);\n\n        case 10:\n          user = _context5.sent;\n          _context5.next = 13;\n          return call(fetch, API_BASE_URL + \"/versus/\" + action.payload.id + \"/like/\", {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': \"JWT \" + token\n            }\n          });\n\n        case 13:\n          response = _context5.sent;\n\n          if (!(response.status === 201)) {\n            _context5.next = 23;\n            break;\n          }\n\n          _context5.next = 17;\n          return response.json();\n\n        case 17:\n          _yield$response$json3 = _context5.sent;\n          result = _yield$response$json3.result;\n          _context5.next = 21;\n          return put(actions.completeFetchLike(result));\n\n        case 21:\n          _context5.next = 29;\n          break;\n\n        case 23:\n          _context5.next = 25;\n          return response.json();\n\n        case 25:\n          _yield$response$json4 = _context5.sent;\n          non_field_errors = _yield$response$json4.non_field_errors;\n          _context5.next = 29;\n          return put(actions.failFetchLike(non_field_errors[0]));\n\n        case 29:\n          _context5.next = 35;\n          break;\n\n        case 31:\n          _context5.prev = 31;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 35;\n          return put(actions.failFetchLike('NETWORK ERROR'));\n\n        case 35:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 31]]);\n}\n\nexport function watchFetchLIke() {\n  return _regeneratorRuntime.wrap(function watchFetchLIke$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeEvery(types.VERSUS_LIKE_FETCH_STARTED, fetchLike);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction fetchHeart(action) {\n  var isAuth, token, user, response, _yield$response$json5, result, _yield$response$json6, non_field_errors;\n\n  return _regeneratorRuntime.wrap(function fetchHeart$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return select(selectors.isAuthenticated);\n\n        case 3:\n          isAuth = _context7.sent;\n\n          if (!isAuth) {\n            _context7.next = 29;\n            break;\n          }\n\n          _context7.next = 7;\n          return select(selectors.getAuthToken);\n\n        case 7:\n          token = _context7.sent;\n          _context7.next = 10;\n          return select(selectors.getAuthUserID);\n\n        case 10:\n          user = _context7.sent;\n          _context7.next = 13;\n          return call(fetch, API_BASE_URL + \"/versus/\" + action.payload.id + \"/heart/\", {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': \"JWT \" + token\n            }\n          });\n\n        case 13:\n          response = _context7.sent;\n\n          if (!(response.status === 201)) {\n            _context7.next = 23;\n            break;\n          }\n\n          _context7.next = 17;\n          return response.json();\n\n        case 17:\n          _yield$response$json5 = _context7.sent;\n          result = _yield$response$json5.result;\n          _context7.next = 21;\n          return put(actions.completeFetchHeart(result));\n\n        case 21:\n          _context7.next = 29;\n          break;\n\n        case 23:\n          _context7.next = 25;\n          return response.json();\n\n        case 25:\n          _yield$response$json6 = _context7.sent;\n          non_field_errors = _yield$response$json6.non_field_errors;\n          _context7.next = 29;\n          return put(actions.failFetchHeart(non_field_errors[0]));\n\n        case 29:\n          _context7.next = 35;\n          break;\n\n        case 31:\n          _context7.prev = 31;\n          _context7.t0 = _context7[\"catch\"](0);\n          _context7.next = 35;\n          return put(actions.failFetchHeart('NETWORK ERROR'));\n\n        case 35:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 31]]);\n}\n\nexport function watchFetchHeart() {\n  return _regeneratorRuntime.wrap(function watchFetchHeart$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeEvery(types.VERSUS_HEART_FETCH_STARTED, fetchHeart);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nfunction unlike(action) {\n  var isAuth, token, user, response, _yield$response$json7, non_field_errors;\n\n  return _regeneratorRuntime.wrap(function unlike$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return select(selectors.isAuthenticated);\n\n        case 3:\n          isAuth = _context9.sent;\n\n          if (!isAuth) {\n            _context9.next = 25;\n            break;\n          }\n\n          _context9.next = 7;\n          return select(selectors.getAuthToken);\n\n        case 7:\n          token = _context9.sent;\n          _context9.next = 10;\n          return select(selectors.getAuthUserID);\n\n        case 10:\n          user = _context9.sent;\n          _context9.next = 13;\n          return call(fetch, API_BASE_URL + \"/like/\" + action.payload.id + \"/\", {\n            method: 'DELETE',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': \"JWT \" + token\n            }\n          });\n\n        case 13:\n          response = _context9.sent;\n\n          if (!(response.status === 200)) {\n            _context9.next = 19;\n            break;\n          }\n\n          _context9.next = 17;\n          return put(actions.completeUnLikeVersus());\n\n        case 17:\n          _context9.next = 25;\n          break;\n\n        case 19:\n          _context9.next = 21;\n          return response.json();\n\n        case 21:\n          _yield$response$json7 = _context9.sent;\n          non_field_errors = _yield$response$json7.non_field_errors;\n          _context9.next = 25;\n          return put(actions.failUnLikeVersus(non_field_errors[0]));\n\n        case 25:\n          _context9.next = 31;\n          break;\n\n        case 27:\n          _context9.prev = 27;\n          _context9.t0 = _context9[\"catch\"](0);\n          _context9.next = 31;\n          return put(actions.failUnLikeVersus('NETWORK ERROR'));\n\n        case 31:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9, null, [[0, 27]]);\n}\n\nexport function watchUnLike() {\n  return _regeneratorRuntime.wrap(function watchUnLike$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeEvery(types.VERSUS_UNLIKE_STARTED, unlike);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\nfunction unheart(action) {\n  var isAuth, token, user, response, _yield$response$json8, non_field_errors;\n\n  return _regeneratorRuntime.wrap(function unheart$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.prev = 0;\n          _context11.next = 3;\n          return select(selectors.isAuthenticated);\n\n        case 3:\n          isAuth = _context11.sent;\n\n          if (!isAuth) {\n            _context11.next = 25;\n            break;\n          }\n\n          _context11.next = 7;\n          return select(selectors.getAuthToken);\n\n        case 7:\n          token = _context11.sent;\n          _context11.next = 10;\n          return select(selectors.getAuthUserID);\n\n        case 10:\n          user = _context11.sent;\n          _context11.next = 13;\n          return call(fetch, API_BASE_URL + \"/like/\" + action.payload.id + \"/\", {\n            method: 'DELETE',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': \"JWT \" + token\n            }\n          });\n\n        case 13:\n          response = _context11.sent;\n\n          if (!(response.status === 200)) {\n            _context11.next = 19;\n            break;\n          }\n\n          _context11.next = 17;\n          return put(actions.completeUnHeartVersus());\n\n        case 17:\n          _context11.next = 25;\n          break;\n\n        case 19:\n          _context11.next = 21;\n          return response.json();\n\n        case 21:\n          _yield$response$json8 = _context11.sent;\n          non_field_errors = _yield$response$json8.non_field_errors;\n          _context11.next = 25;\n          return put(actions.failUnHeartVersus(non_field_errors[0]));\n\n        case 25:\n          _context11.next = 31;\n          break;\n\n        case 27:\n          _context11.prev = 27;\n          _context11.t0 = _context11[\"catch\"](0);\n          _context11.next = 31;\n          return put(actions.failUnHeartVersus('NETWORK ERROR'));\n\n        case 31:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11, null, [[0, 27]]);\n}\n\nexport function watchUnHeart() {\n  return _regeneratorRuntime.wrap(function watchUnHeart$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeEvery(types.VERSUS_UNHEART_STARTED, unheart);\n\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/src/sagas/reaction.js"],"names":["like","watchLike","heart","watchHeart","fetchLike","watchFetchLIke","fetchHeart","watchFetchHeart","unlike","watchUnLike","unheart","watchUnHeart","call","takeEvery","put","delay","select","selectors","actions","types","API_URL","normalize","schemas","API_BASE_URL","action","isAuthenticated","isAuth","getAuthToken","token","getAuthUserID","user","fetch","method","body","JSON","stringify","payload","reaction","headers","response","status","json","jsonResult","completeLikeVersus","non_field_errors","failLikeVersus","VERSUS_LIKE_STARTED","completeHeartVersus","failHeartVersus","VERSUS_HEART_STARTED","id","result","completeFetchLike","failFetchLike","VERSUS_LIKE_FETCH_STARTED","completeFetchHeart","failFetchHeart","VERSUS_HEART_FETCH_STARTED","completeUnLikeVersus","failUnLikeVersus","VERSUS_UNLIKE_STARTED","completeUnHeartVersus","failUnHeartVersus","VERSUS_UNHEART_STARTED"],"mappings":"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","sourcesContent":["import {\n    call,\n    takeEvery,\n    put,\n    // race,\n    // all,\n    delay,\n    select,\n  } from 'redux-saga/effects';\n\nimport * as selectors from '../reducers';\nimport * as actions from '../actions/reaction';\nimport * as types from '../types/reactions';\nimport { API_URL } from '../../configuration';\nimport { normalize } from 'normalizr';\nimport * as schemas from '../schemas/like';\n  \n  const API_BASE_URL =  API_URL + 'api/v1';\n\n\n  function* like(action) {\n    try {\n        const isAuth = yield select(selectors.isAuthenticated);\n    \n        if (isAuth) {\n          const token = yield select(selectors.getAuthToken);\n          const user = yield select(selectors.getAuthUserID);\n          const response = yield call(\n            fetch,\n            `${API_BASE_URL}/like/`,\n            {\n              method: 'POST',\n              body: JSON.stringify({...action.payload,user,reaction:0}),\n              headers:{\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${token}`,\n              },\n            }\n          );\n          if (response.status === 200) {\n            const jsonResult = yield response.json();\n            yield put(\n              actions.completeLikeVersus(\n                jsonResult,\n              ),\n            );\n          } else {\n            const { non_field_errors } = yield response.json();\n            yield put(actions.failLikeVersus(non_field_errors[0]));\n          }\n        }\n      } catch (error) {\n        yield put(actions.failLikeVersus('NETWORK ERROR'));\n      }\n  }\n  \n  export function* watchLike() {\n    yield takeEvery(\n      types.VERSUS_LIKE_STARTED,\n      like,\n    );\n  }\n\n  function* heart(action) {\n    try {\n        const isAuth = yield select(selectors.isAuthenticated);\n    \n        if (isAuth) {\n          const token = yield select(selectors.getAuthToken);\n          const user = yield select(selectors.getAuthUserID);\n          const response = yield call(\n            fetch,\n            `${API_BASE_URL}/like/`,\n            {\n              method: 'POST',\n              body: JSON.stringify({...action.payload,user,reaction:1}),\n              headers:{\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${token}`,\n              },\n            }\n          );\n          if (response.status === 200) {\n            const jsonResult = yield response.json();\n            yield put(\n              actions.completeHeartVersus(\n                jsonResult,\n              ),\n            );\n          } else {\n            const { non_field_errors } = yield response.json();\n            yield put(actions.failHeartVersus(non_field_errors[0]));\n          }\n        }\n      } catch (error) {\n        yield put(actions.failHeartVersus('NETWORK ERROR'));\n      }\n  }\n  \n  export function* watchHeart() {\n    yield takeEvery(\n      types.VERSUS_HEART_STARTED,\n      heart,\n    );\n  }\n\n\n\n\n\n\n\n\n\n  function* fetchLike(action) {\n    try {\n        const isAuth = yield select(selectors.isAuthenticated);\n    \n        if (isAuth) {\n          const token = yield select(selectors.getAuthToken);\n          const user = yield select(selectors.getAuthUserID);\n          const response = yield call(\n            fetch,\n            `${API_BASE_URL}/versus/${action.payload.id}/like/`,\n            {\n              method: 'GET',\n              headers:{\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${token}`,\n              },\n            }\n          );\n          if (response.status === 201) {\n            const {result} = yield response.json();\n            yield put(\n              actions.completeFetchLike(result),\n            );\n          } else {\n            const { non_field_errors } = yield response.json();\n            yield put(actions.failFetchLike(non_field_errors[0]));\n          }\n        }\n      } catch (error) {\n        yield put(actions.failFetchLike('NETWORK ERROR'));\n      }\n  }\n  \n  export function* watchFetchLIke() {\n    yield takeEvery(\n      types.VERSUS_LIKE_FETCH_STARTED,\n      fetchLike,\n    );\n  }\n\n  function* fetchHeart(action) {\n    try {\n        const isAuth = yield select(selectors.isAuthenticated);\n    \n        if (isAuth) {\n          const token = yield select(selectors.getAuthToken);\n          const user = yield select(selectors.getAuthUserID);\n          const response = yield call(\n            fetch,\n            `${API_BASE_URL}/versus/${action.payload.id}/heart/`,\n            {\n              method: 'GET',\n              headers:{\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${token}`,\n              },\n            }\n          );\n          if (response.status === 201) {\n            const {result} = yield response.json();\n            yield put(\n              actions.completeFetchHeart(result),\n            );\n          } else {\n            const { non_field_errors } = yield response.json();\n            yield put(actions.failFetchHeart(non_field_errors[0]));\n          }\n        }\n      } catch (error) {\n        yield put(actions.failFetchHeart('NETWORK ERROR'));\n      }\n  }\n  \n  export function* watchFetchHeart() {\n    yield takeEvery(\n      types.VERSUS_HEART_FETCH_STARTED,\n      fetchHeart,\n    );\n  }\n\n\n\n\n\n\n\n\n\n\n  function* unlike(action) {\n    try {\n        const isAuth = yield select(selectors.isAuthenticated);\n    \n        if (isAuth) {\n          const token = yield select(selectors.getAuthToken);\n          const user = yield select(selectors.getAuthUserID);\n          const response = yield call(\n            fetch,\n            `${API_BASE_URL}/like/${action.payload.id}/`,\n            {\n              method: 'DELETE',\n              headers:{\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${token}`,\n              },\n            }\n          );\n          if (response.status === 200) {\n            yield put(\n              actions.completeUnLikeVersus(),\n            );\n          } else {\n            const { non_field_errors } = yield response.json();\n            yield put(actions.failUnLikeVersus(non_field_errors[0]));\n          }\n        }\n      } catch (error) {\n        yield put(actions.failUnLikeVersus('NETWORK ERROR'));\n      }\n  }\n  \n  export function* watchUnLike() {\n    yield takeEvery(\n      types.VERSUS_UNLIKE_STARTED,\n      unlike,\n    );\n  }\n\n  function* unheart(action) {\n    try {\n        const isAuth = yield select(selectors.isAuthenticated);\n    \n        if (isAuth) {\n          const token = yield select(selectors.getAuthToken);\n          const user = yield select(selectors.getAuthUserID);\n          const response = yield call(\n            fetch,\n            `${API_BASE_URL}/like/${action.payload.id}/`,\n            {\n              method: 'DELETE',\n              headers:{\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${token}`,\n              },\n            }\n          );\n          if (response.status === 200) {\n            yield put(\n                actions.completeUnHeartVersus()\n              )\n          } else {\n            const { non_field_errors } = yield response.json();\n            yield put(actions.failUnHeartVersus(non_field_errors[0]));\n          }\n        }\n      } catch (error) {\n        yield put(actions.failUnHeartVersus('NETWORK ERROR'));\n      }\n  }\n  \n  export function* watchUnHeart() {\n    yield takeEvery(\n      types.VERSUS_UNHEART_STARTED,\n      unheart,\n    );\n  }"]},"metadata":{},"sourceType":"module"}