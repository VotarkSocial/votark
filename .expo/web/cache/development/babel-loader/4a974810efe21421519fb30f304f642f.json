{"ast":null,"code":"import * as types from \"../types/search\";\nexport var startUserHistoryFetching = function startUserHistoryFetching() {\n  return {\n    type: types.USER_SEARCH_HISTORY_FETCHED_STARTED\n  };\n};\nexport var completeUserHistoryFetching = function completeUserHistoryFetching(entities, order) {\n  return {\n    type: types.USER_SEARCH_HISTORY_FETCHED_COMPLETED,\n    payload: {\n      entities: entities,\n      order: order\n    }\n  };\n};\nexport var failUserHistoryFetching = function failUserHistoryFetching(error) {\n  return {\n    type: types.USER_SEARCH_HISTORY_FETCHED_FAILED,\n    payload: {\n      error: error\n    }\n  };\n};\nexport var startHashtagHistoryFetching = function startHashtagHistoryFetching() {\n  return {\n    type: types.HASHTAG_SEARCH_HISTORY_FETCHED_STARTED\n  };\n};\nexport var completeHashtagHistoryFetching = function completeHashtagHistoryFetching(entities, order) {\n  return {\n    type: types.HASHTAG_SEARCH_HISTORY_FETCHED_COMPLETED,\n    payload: {\n      entities: entities,\n      order: order\n    }\n  };\n};\nexport var failHashtagHistoryFetching = function failHashtagHistoryFetching(error) {\n  return {\n    type: types.HASHTAG_SEARCH_HISTORY_FETCHED_FAILED,\n    payload: {\n      error: error\n    }\n  };\n};\nexport var startUserFetching = function startUserFetching(query) {\n  return {\n    type: types.USER_SEARCH_FETCHED_STARTED,\n    payload: query\n  };\n};\nexport var completeUserFetching = function completeUserFetching(entities, order) {\n  return {\n    type: types.USER_SEARCH_FETCHED_COMPLETED,\n    payload: {\n      entities: entities,\n      order: order\n    }\n  };\n};\nexport var failUserFetching = function failUserFetching(error) {\n  return {\n    type: types.USER_SEARCH_FETCHED_FAILED,\n    payload: {\n      error: error\n    }\n  };\n};\nexport var startHashtagFetching = function startHashtagFetching(query) {\n  return {\n    type: types.HASHTAG_SEARCH_FETCHED_STARTED,\n    payload: query\n  };\n};\nexport var completeHashtagFetching = function completeHashtagFetching(entities, order) {\n  return {\n    type: types.HASHTAG_SEARCH_FETCHED_COMPLETED,\n    payload: {\n      entities: entities,\n      order: order\n    }\n  };\n};\nexport var failHashtagFetching = function failHashtagFetching(error) {\n  return {\n    type: types.HASHTAG_SEARCH_FETCHED_FAILED,\n    payload: {\n      error: error\n    }\n  };\n};","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/src/actions/search.js"],"names":["types","startUserHistoryFetching","type","USER_SEARCH_HISTORY_FETCHED_STARTED","completeUserHistoryFetching","entities","order","USER_SEARCH_HISTORY_FETCHED_COMPLETED","payload","failUserHistoryFetching","error","USER_SEARCH_HISTORY_FETCHED_FAILED","startHashtagHistoryFetching","HASHTAG_SEARCH_HISTORY_FETCHED_STARTED","completeHashtagHistoryFetching","HASHTAG_SEARCH_HISTORY_FETCHED_COMPLETED","failHashtagHistoryFetching","HASHTAG_SEARCH_HISTORY_FETCHED_FAILED","startUserFetching","query","USER_SEARCH_FETCHED_STARTED","completeUserFetching","USER_SEARCH_FETCHED_COMPLETED","failUserFetching","USER_SEARCH_FETCHED_FAILED","startHashtagFetching","HASHTAG_SEARCH_FETCHED_STARTED","completeHashtagFetching","HASHTAG_SEARCH_FETCHED_COMPLETED","failHashtagFetching","HASHTAG_SEARCH_FETCHED_FAILED"],"mappings":"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","sourcesContent":["import * as types from '../types/search';\n\n\nexport const startUserHistoryFetching = () => ({\n  type: types.USER_SEARCH_HISTORY_FETCHED_STARTED,\n});\n\n\nexport const completeUserHistoryFetching = (entities, order) => ({\n    type: types.USER_SEARCH_HISTORY_FETCHED_COMPLETED,\n    payload: {\n        entities,\n        order,\n    },\n  });\n\nexport const failUserHistoryFetching = (error) => ({\n    type: types.USER_SEARCH_HISTORY_FETCHED_FAILED,\n    payload: {\n        error,\n    },\n    \n});\n\n\nexport const startHashtagHistoryFetching = () => ({\n    type: types.HASHTAG_SEARCH_HISTORY_FETCHED_STARTED,\n  });\n  \nexport const completeHashtagHistoryFetching = (entities, order) => ({\n    type: types.HASHTAG_SEARCH_HISTORY_FETCHED_COMPLETED,\n    payload: {\n        entities,\n        order,\n    },\n});\n\nexport const failHashtagHistoryFetching = (error) => ({\n    type: types.HASHTAG_SEARCH_HISTORY_FETCHED_FAILED,\n    payload: {\n        error,\n    },\n});\n\n\n\nexport const startUserFetching = (query) => ({\n    type: types.USER_SEARCH_FETCHED_STARTED,\n    payload: query\n  });\n  \n  \n  export const completeUserFetching = (entities, order) => ({   \n      type: types.USER_SEARCH_FETCHED_COMPLETED,\n      payload: {\n        entities,\n        order,\n    },\n    });\n  \n  export const failUserFetching = (error) => ({\n      type: types.USER_SEARCH_FETCHED_FAILED,\n      payload: {\n          error,\n      },\n  });\n  \n  \n  export const startHashtagFetching = (query) => ({\n      type: types.HASHTAG_SEARCH_FETCHED_STARTED,\n      payload:query\n    });\n    \n  export const completeHashtagFetching = (entities, order) => ({\n      type: types.HASHTAG_SEARCH_FETCHED_COMPLETED,\n      payload: {\n        entities,\n        order,\n    },\n  });\n  \n  export const failHashtagFetching = (error) => ({\n      type: types.HASHTAG_SEARCH_FETCHED_FAILED,\n      payload: {\n          error,\n      },\n  });\n  \n\n"]},"metadata":{},"sourceType":"module"}