{"ast":null,"code":"import * as types from \"../types/topic\";\nexport var startFetchTopic = function startFetchTopic() {\n  return {\n    type: types.TOPIC_FETCH_STARTED\n  };\n};\nexport var completeFetchTopic = function completeFetchTopic(entities, order) {\n  return {\n    type: types.TOPIC_FETCH_COMPLETED,\n    payload: {\n      entities: entities,\n      order: order\n    }\n  };\n};\nexport var failFetchTopic = function failFetchTopic(error) {\n  return {\n    type: types.TOPIC_FETCH_FAILED,\n    payload: {\n      error: error\n    }\n  };\n};\nexport var selectTopic = function selectTopic(id) {\n  return {\n    type: types.TOPIC_SELECTED,\n    payload: id\n  };\n};","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/src/actions/topic.js"],"names":["types","startFetchTopic","type","TOPIC_FETCH_STARTED","completeFetchTopic","entities","order","TOPIC_FETCH_COMPLETED","payload","failFetchTopic","error","TOPIC_FETCH_FAILED","selectTopic","id","TOPIC_SELECTED"],"mappings":"AAAA,OAAO,KAAKA,KAAZ;AAEA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,SAAO;AAClCC,IAAAA,IAAI,EAAEF,KAAK,CAACG;AADsB,GAAP;AAAA,CAAxB;AAIP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAWC,KAAX;AAAA,SAAsB;AACpDJ,IAAAA,IAAI,EAAEF,KAAK,CAACO,qBADwC;AAEpDC,IAAAA,OAAO,EAAE;AACLH,MAAAA,QAAQ,EAARA,QADK;AAELC,MAAAA,KAAK,EAALA;AAFK;AAF2C,GAAtB;AAAA,CAA3B;AAQP,OAAO,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK;AAAA,SAAK;AACpCR,IAAAA,IAAI,EAAEF,KAAK,CAACW,kBADwB;AAEpCH,IAAAA,OAAO,EAAE;AACLE,MAAAA,KAAK,EAALA;AADK;AAF2B,GAAL;AAAA,CAA5B;AAOP,OAAO,IAAME,WAAW,GAAG,SAAdA,WAAc,CAAAC,EAAE;AAAA,SAAK;AAC9BX,IAAAA,IAAI,EAAEF,KAAK,CAACc,cADkB;AAE9BN,IAAAA,OAAO,EAAEK;AAFqB,GAAL;AAAA,CAAtB","sourcesContent":["import * as types from '../types/topic'\n\nexport const startFetchTopic = () => ({\n    type: types.TOPIC_FETCH_STARTED,\n  });\n\nexport const completeFetchTopic = (entities, order) => ({\n    type: types.TOPIC_FETCH_COMPLETED,\n    payload: {\n        entities,\n        order,\n    },\n    });\n\nexport const failFetchTopic = error => ({\n    type: types.TOPIC_FETCH_FAILED,\n    payload: {\n        error,\n    },\n});\n\nexport const selectTopic = id => ({\n    type: types.TOPIC_SELECTED,\n    payload: id\n})"]},"metadata":{},"sourceType":"module"}