{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport omit from 'lodash/omit';\nimport { combineReducers } from 'redux';\nimport * as types from \"../types/posts\";\n\nvar byId = function byId() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.POST_FETCH_COMPLETED:\n      {\n        var _action$payload = action.payload,\n            entities = _action$payload.entities,\n            _order = _action$payload.order;\n\n        var newState = _objectSpread({}, state);\n\n        _order.forEach(function (id) {\n          newState[id] = _objectSpread(_objectSpread({}, entities[id]), {}, {\n            isConfirmed: true\n          });\n        });\n\n        return newState;\n      }\n\n    case types.USER_POSTS_COMPLETED:\n      {\n        var _action$payload2 = action.payload,\n            _entities = _action$payload2.entities,\n            _order2 = _action$payload2.order;\n\n        var _newState = _objectSpread({}, state);\n\n        _order2.forEach(function (id) {\n          _newState[id] = _objectSpread(_objectSpread({}, _entities[id]), {}, {\n            isConfirmed: true\n          });\n        });\n\n        return _newState;\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nvar fetchedOnce = function fetchedOnce() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.USER_POSTS_STARTED:\n      return true;\n\n    case types.POST_FETCH_STARTED:\n      return true;\n\n    default:\n      return state;\n  }\n};\n\nvar order = function order() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.POST_FETCH_COMPLETED:\n      {\n        return action.payload.order;\n      }\n\n    case types.USER_POSTS_STARTED:\n      {\n        return [];\n      }\n\n    case types.USER_POSTS_COMPLETED:\n      {\n        return action.payload.order;\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nvar isFetching = function isFetching() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.POST_FETCH_STARTED:\n      {\n        return true;\n      }\n\n    case types.POST_FETCH_COMPLETED:\n      {\n        return false;\n      }\n\n    case types.POST_FETCH_FAILEED:\n      {\n        return false;\n      }\n\n    case types.USER_POSTS_STARTED:\n      {\n        return true;\n      }\n\n    case types.USER_POSTS_COMPLETED:\n      {\n        return false;\n      }\n\n    case types.USER_POSTS_FAILED:\n      {\n        return false;\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nvar error = function error() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.POST_FETCH_FAILEED:\n      {\n        return action.payload.error;\n      }\n\n    case types.POST_FETCH_STARTED:\n      {\n        return null;\n      }\n\n    case types.POST_FETCH_COMPLETED:\n      {\n        return null;\n      }\n\n    case types.USER_POSTS_FAILED:\n      {\n        return action.payload.error;\n      }\n\n    case types.USER_POSTS_STARTED:\n      {\n        return null;\n      }\n\n    case types.USER_POSTS_COMPLETED:\n      {\n        return null;\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport default combineReducers({\n  byId: byId,\n  order: order,\n  isFetching: isFetching,\n  error: error,\n  fetchedOnce: fetchedOnce\n});\nexport var getPost = function getPost(state, id) {\n  return state.byId[id];\n};\nexport var getPosts = function getPosts(state) {\n  return state.order.map(function (id) {\n    return getPost(state, id);\n  });\n};\nexport var isFetchingPost = function isFetchingPost(state) {\n  return state.isFetching;\n};\nexport var getFetchedOnce = function getFetchedOnce(state) {\n  return state.fetchedOnce;\n};\nexport var getFetchingErrorPost = function getFetchingErrorPost(state) {\n  return state.error;\n};","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/src/reducers/post.js"],"names":["omit","combineReducers","types","byId","state","action","type","POST_FETCH_COMPLETED","payload","entities","order","newState","forEach","id","isConfirmed","USER_POSTS_COMPLETED","fetchedOnce","USER_POSTS_STARTED","POST_FETCH_STARTED","isFetching","POST_FETCH_FAILEED","USER_POSTS_FAILED","error","getPost","getPosts","map","isFetchingPost","getFetchedOnce","getFetchingErrorPost"],"mappings":"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","sourcesContent":["import omit from 'lodash/omit';\nimport { combineReducers } from 'redux';\n\nimport * as types from '../types/posts';\n\n\nconst byId = (state = {}, action) => {\n  switch(action.type) {\n    case types.POST_FETCH_COMPLETED: {\n      const { entities, order } = action.payload;\n      const newState = { ...state };\n      order.forEach(id => {\n        newState[id] = {\n          ...entities[id],\n          isConfirmed: true,\n        };\n      });\n\n      return newState;\n    }\n    case types.USER_POSTS_COMPLETED: {\n        const { entities, order } = action.payload;\n        const newState = { ...state };\n        order.forEach(id => {\n          newState[id] = {\n            ...entities[id],\n            isConfirmed: true,\n          };\n        });\n  \n        return newState;\n      }\n    default: {\n      return state;\n    }\n  }\n};\n\nconst fetchedOnce = (state=false,action) => {\n    switch (action.type) {\n        case types.USER_POSTS_STARTED:\n            return true\n        case types.POST_FETCH_STARTED:\n            return true\n        default:\n            return state\n    }\n}\n\nconst order = (state = [], action) => {\n  switch(action.type) {\n    case types.POST_FETCH_COMPLETED: {\n      return action.payload.order;\n    }\n    case types.USER_POSTS_STARTED:{\n        return []\n    }\n    case types.USER_POSTS_COMPLETED: {\n        return action.payload.order;\n      }\n    default: {\n      return state;\n    }\n  }\n};\n\nconst isFetching = (state = false, action) => {\n  switch(action.type) {\n    case types.POST_FETCH_STARTED: {\n      return true;\n    }\n    case types.POST_FETCH_COMPLETED: {\n      return false;\n    }\n    case types.POST_FETCH_FAILEED: {\n      return false;\n    }\n    case types.USER_POSTS_STARTED: {\n        return true;\n      }\n      case types.USER_POSTS_COMPLETED: {\n        return false;\n      }\n      case types.USER_POSTS_FAILED: {\n        return false;\n      }\n    default: {\n      return state;\n    }\n  }\n};\n\nconst error = (state = null, action) => {\n  switch(action.type) {\n    case types.POST_FETCH_FAILEED: {\n      return action.payload.error;\n    }\n    case types.POST_FETCH_STARTED: {\n      return null;\n    }\n    case types.POST_FETCH_COMPLETED: {\n      return null;\n    }\n    case types.USER_POSTS_FAILED: {\n        return action.payload.error;\n      }\n      case types.USER_POSTS_STARTED: {\n        return null;\n      }\n      case types.USER_POSTS_COMPLETED: {\n        return null;\n      }\n    default: {\n      return state;\n    }\n  }\n};\n\n\nexport default combineReducers({\n  byId,\n  order,\n  isFetching,\n  error,\n  fetchedOnce,\n});\n\nexport const getPost = (state, id) => state.byId[id];\nexport const getPosts = state => state.order.map(id => getPost(state, id));\nexport const isFetchingPost = state => state.isFetching;\nexport const getFetchedOnce = state => state.fetchedOnce;\nexport const getFetchingErrorPost = state => state.error;"]},"metadata":{},"sourceType":"module"}