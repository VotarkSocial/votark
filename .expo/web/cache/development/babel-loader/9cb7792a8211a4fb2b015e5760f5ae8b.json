{"ast":null,"code":"import omit from 'lodash/omit';\nimport { combineReducers } from 'redux';\nimport * as types from \"../types/report\";\n\nvar isFetching = function isFetching() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.SEND_REPORT_STARTED:\n      {\n        return true;\n      }\n\n    case types.SEND_REPORT_COMPLETED:\n      {\n        return false;\n      }\n\n    case types.SEND_REPORT_FAILED:\n      {\n        return false;\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nvar error = function error() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.SEND_REPORT_FAILED:\n      {\n        return action.payload.error;\n      }\n\n    case types.SEND_REPORT_COMPLETED:\n      {\n        return null;\n      }\n\n    case types.SEND_REPORT_STARTED:\n      {\n        return null;\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nvar isReporting = function isReporting() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.REPORT:\n      return !state;\n\n    case types.SEND_REPORT_COMPLETED:\n      return false;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  isReporting: isReporting,\n  isFetching: isFetching,\n  error: error\n});\nexport var getIsReporting = function getIsReporting(state) {\n  return state.isReporting;\n};\nexport var getisFetchingReport = function getisFetchingReport(state) {\n  return state.isFetching;\n};\nexport var getErrorReport = function getErrorReport(state) {\n  return state.error;\n};","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/src/reducers/report.js"],"names":["omit","combineReducers","types","isFetching","state","action","type","SEND_REPORT_STARTED","SEND_REPORT_COMPLETED","SEND_REPORT_FAILED","error","payload","isReporting","REPORT","getIsReporting","getisFetchingReport","getErrorReport"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,aAAjB;AACA,SAASC,eAAT,QAAgC,OAAhC;AAEA,OAAO,KAAKC,KAAZ;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAA2B;AAAA,MAA1BC,KAA0B,uEAAlB,KAAkB;AAAA,MAAXC,MAAW;;AAC5C,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKJ,KAAK,CAACK,mBAAX;AAAgC;AAC9B,eAAO,IAAP;AACD;;AACD,SAAKL,KAAK,CAACM,qBAAX;AAAkC;AAChC,eAAO,KAAP;AACD;;AACD,SAAKN,KAAK,CAACO,kBAAX;AAA+B;AAC7B,eAAO,KAAP;AACD;;AACD;AAAS;AACP,eAAOL,KAAP;AACD;AAZH;AAcD,CAfD;;AAiBA,IAAMM,KAAK,GAAG,SAARA,KAAQ,GAA0B;AAAA,MAAzBN,KAAyB,uEAAjB,IAAiB;AAAA,MAAXC,MAAW;;AACtC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKJ,KAAK,CAACO,kBAAX;AAA+B;AAC7B,eAAOJ,MAAM,CAACM,OAAP,CAAeD,KAAtB;AACD;;AACD,SAAKR,KAAK,CAACM,qBAAX;AAAkC;AAChC,eAAO,IAAP;AACD;;AACD,SAAKN,KAAK,CAACK,mBAAX;AAAgC;AAC9B,eAAO,IAAP;AACD;;AACD;AAAS;AACP,eAAOH,KAAP;AACD;AAZH;AAcD,CAfD;;AAiBA,IAAMQ,WAAW,GAAG,SAAdA,WAAc,GAAyB;AAAA,MAAxBR,KAAwB,uEAAlB,KAAkB;AAAA,MAAXC,MAAW;;AACzC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKJ,KAAK,CAACW,MAAX;AACI,aAAO,CAACT,KAAR;;AACJ,SAAKF,KAAK,CAACM,qBAAX;AACI,aAAO,KAAP;;AACJ;AACI,aAAOJ,KAAP;AANR;AAQH,CATD;;AAWA,eAAeH,eAAe,CAAC;AAC7BW,EAAAA,WAAW,EAAXA,WAD6B;AAE7BT,EAAAA,UAAU,EAAVA,UAF6B;AAG7BO,EAAAA,KAAK,EAALA;AAH6B,CAAD,CAA9B;AAMA,OAAO,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,CAAAV,KAAK;AAAA,SAAIA,KAAK,CAACQ,WAAV;AAAA,CAA5B;AACP,OAAO,IAAMG,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAX,KAAK;AAAA,SAAIA,KAAK,CAACD,UAAV;AAAA,CAAjC;AACP,OAAO,IAAMa,cAAc,GAAG,SAAjBA,cAAiB,CAAAZ,KAAK;AAAA,SAAIA,KAAK,CAACM,KAAV;AAAA,CAA5B","sourcesContent":["import omit from 'lodash/omit';\nimport { combineReducers } from 'redux';\n\nimport * as types from '../types/report';\n\nconst isFetching = (state = false, action) => {\n  switch(action.type) {\n    case types.SEND_REPORT_STARTED: {\n      return true;\n    }\n    case types.SEND_REPORT_COMPLETED: {\n      return false;\n    }\n    case types.SEND_REPORT_FAILED: {\n      return false;\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nconst error = (state = null, action) => {\n  switch(action.type) {\n    case types.SEND_REPORT_FAILED: {\n      return action.payload.error;\n    }\n    case types.SEND_REPORT_COMPLETED: {\n      return null;\n    }\n    case types.SEND_REPORT_STARTED: {\n      return null;\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nconst isReporting = (state=false, action) => {\n    switch (action.type) {\n        case types.REPORT:\n            return !state\n        case types.SEND_REPORT_COMPLETED:\n            return false\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({\n  isReporting,\n  isFetching,\n  error,\n});\n\nexport const getIsReporting = state => state.isReporting\nexport const getisFetchingReport = state => state.isFetching;\nexport const getErrorReport = state => state.error;\n"]},"metadata":{},"sourceType":"module"}