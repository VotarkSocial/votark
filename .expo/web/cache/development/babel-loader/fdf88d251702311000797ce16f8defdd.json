{"ast":null,"code":"import omit from 'lodash/omit';\nimport { combineReducers } from 'redux';\nimport * as types from \"../types/hashtag\";\n\nvar isFetching = function isFetching() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.HASHTAG_ADDITION_STARTED:\n      {\n        return true;\n      }\n\n    case types.HASHTAG_ADDITION_COMPLETED:\n      {\n        return false;\n      }\n\n    case types.HASHTAG_ADDITION_FAILED:\n      {\n        return false;\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nvar error = function error() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.HASHTAG_ADDITION_FAILED:\n      {\n        return action.payload.error;\n      }\n\n    case types.HASHTAG_ADDITION_STARTED:\n      {\n        return null;\n      }\n\n    case types.HASHTAG_ADDITION_COMPLETED:\n      {\n        return null;\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport default combineReducers({\n  isFetching: isFetching,\n  error: error\n});\nexport var getisFetchingHashtg = function getisFetchingHashtg(state) {\n  return state.isFetching;\n};\nexport var getErrorHashtag = function getErrorHashtag(state) {\n  return state.error;\n};","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/src/reducers/hashtag.js"],"names":["omit","combineReducers","types","isFetching","state","action","type","HASHTAG_ADDITION_STARTED","HASHTAG_ADDITION_COMPLETED","HASHTAG_ADDITION_FAILED","error","payload","getisFetchingHashtg","getErrorHashtag"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,aAAjB;AACA,SAASC,eAAT,QAAgC,OAAhC;AAEA,OAAO,KAAKC,KAAZ;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAA2B;AAAA,MAA1BC,KAA0B,uEAAlB,KAAkB;AAAA,MAAXC,MAAW;;AAC5C,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKJ,KAAK,CAACK,wBAAX;AAAqC;AACnC,eAAO,IAAP;AACD;;AACD,SAAKL,KAAK,CAACM,0BAAX;AAAuC;AACrC,eAAO,KAAP;AACD;;AACD,SAAKN,KAAK,CAACO,uBAAX;AAAoC;AAClC,eAAO,KAAP;AACD;;AACD;AAAS;AACP,eAAOL,KAAP;AACD;AAZH;AAcD,CAfD;;AAiBA,IAAMM,KAAK,GAAG,SAARA,KAAQ,GAA0B;AAAA,MAAzBN,KAAyB,uEAAjB,IAAiB;AAAA,MAAXC,MAAW;;AACtC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKJ,KAAK,CAACO,uBAAX;AAAoC;AAClC,eAAOJ,MAAM,CAACM,OAAP,CAAeD,KAAtB;AACD;;AACD,SAAKR,KAAK,CAACK,wBAAX;AAAqC;AACnC,eAAO,IAAP;AACD;;AACD,SAAKL,KAAK,CAACM,0BAAX;AAAuC;AACrC,eAAO,IAAP;AACD;;AACD;AAAS;AACP,eAAOJ,KAAP;AACD;AAZH;AAcD,CAfD;;AAkBA,eAAeH,eAAe,CAAC;AAC7BE,EAAAA,UAAU,EAAVA,UAD6B;AAE7BO,EAAAA,KAAK,EAALA;AAF6B,CAAD,CAA9B;AAKA,OAAO,IAAME,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAR,KAAK;AAAA,SAAIA,KAAK,CAACD,UAAV;AAAA,CAAjC;AACP,OAAO,IAAMU,eAAe,GAAG,SAAlBA,eAAkB,CAAAT,KAAK;AAAA,SAAIA,KAAK,CAACM,KAAV;AAAA,CAA7B","sourcesContent":["import omit from 'lodash/omit';\nimport { combineReducers } from 'redux';\n\nimport * as types from '../types/hashtag';\n\nconst isFetching = (state = false, action) => {\n  switch(action.type) {\n    case types.HASHTAG_ADDITION_STARTED: {\n      return true;\n    }\n    case types.HASHTAG_ADDITION_COMPLETED: {\n      return false;\n    }\n    case types.HASHTAG_ADDITION_FAILED: {\n      return false;\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\nconst error = (state = null, action) => {\n  switch(action.type) {\n    case types.HASHTAG_ADDITION_FAILED: {\n      return action.payload.error;\n    }\n    case types.HASHTAG_ADDITION_STARTED: {\n      return null;\n    }\n    case types.HASHTAG_ADDITION_COMPLETED: {\n      return null;\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\n\nexport default combineReducers({\n  isFetching,\n  error,\n});\n\nexport const getisFetchingHashtg = state => state.isFetching;\nexport const getErrorHashtag = state => state.error;\n"]},"metadata":{},"sourceType":"module"}