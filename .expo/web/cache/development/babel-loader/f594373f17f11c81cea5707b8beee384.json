{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nvar Log = function () {\n  function Log(name) {\n    _classCallCheck(this, Log);\n\n    this._isEnable = true;\n    this._level = 0;\n    this._name = name;\n  }\n\n  _createClass(Log, [{\n    key: \"level\",\n    value: function level(val) {\n      this._isEnable = true;\n      this._level = val;\n    }\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      this._isEnable = true;\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      this._isEnable = false;\n    }\n  }, {\n    key: \"verbose\",\n    value: function verbose() {\n      var _console;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      this._isEnable && this._level > 2 && (_console = console).log.apply(_console, [this._name, 'verbose:'].concat(args));\n    }\n  }, {\n    key: \"debug\",\n    value: function debug() {\n      var _console2;\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      this._isEnable && this._level > 1 && (_console2 = console).log.apply(_console2, [this._name, 'debug:'].concat(args));\n    }\n  }, {\n    key: \"info\",\n    value: function info() {\n      var _console3;\n\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      this._isEnable && this._level > 0 && (_console3 = console).log.apply(_console3, [this._name, 'info:'].concat(args));\n    }\n  }, {\n    key: \"error\",\n    value: function error() {\n      var _console4;\n\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      this._isEnable && this._level > -1 && (_console4 = console).warn.apply(_console4, [this._name, 'error:'].concat(args));\n    }\n  }]);\n\n  return Log;\n}();\n\nexport { Log as default };","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/node_modules/react-native-fetch-blob/utils/log.js"],"names":["Log","name","_isEnable","_level","_name","val","args","console","log","warn"],"mappings":";;;IAAqBA,G;AAMnB,eAAYC,IAAZ,EAAyB;AAAA;;AAAA,SAHzBC,SAGyB,GAHL,IAGK;AAAA,SAFzBC,MAEyB,GAFT,CAES;AACvB,SAAKC,KAAL,GAAaH,IAAb;AACD;;;;0BAEKI,G,EAAY;AAChB,WAAKH,SAAL,GAAiB,IAAjB;AACA,WAAKC,MAAL,GAAcE,GAAd;AACD;;;6BAEQ;AACP,WAAKH,SAAL,GAAiB,IAAjB;AACD;;;8BAES;AACR,WAAKA,SAAL,GAAiB,KAAjB;AACD;;;8BAEgB;AAAA;;AAAA,wCAANI,IAAM;AAANA,QAAAA,IAAM;AAAA;;AACf,WAAKJ,SAAL,IAAkB,KAAKC,MAAL,GAAc,CAAhC,IAAqC,YAAAI,OAAO,EAACC,GAAR,kBAAY,KAAKJ,KAAjB,EAAwB,UAAxB,SAAuCE,IAAvC,EAArC;AACD;;;4BAEc;AAAA;;AAAA,yCAANA,IAAM;AAANA,QAAAA,IAAM;AAAA;;AACb,WAAKJ,SAAL,IAAkB,KAAKC,MAAL,GAAc,CAAhC,IAAqC,aAAAI,OAAO,EAACC,GAAR,mBAAY,KAAKJ,KAAjB,EAAwB,QAAxB,SAAqCE,IAArC,EAArC;AACD;;;2BAEa;AAAA;;AAAA,yCAANA,IAAM;AAANA,QAAAA,IAAM;AAAA;;AACZ,WAAKJ,SAAL,IAAkB,KAAKC,MAAL,GAAc,CAAhC,IAAqC,aAAAI,OAAO,EAACC,GAAR,mBAAY,KAAKJ,KAAjB,EAAwB,OAAxB,SAAoCE,IAApC,EAArC;AACD;;;4BAEc;AAAA;;AAAA,yCAANA,IAAM;AAANA,QAAAA,IAAM;AAAA;;AACb,WAAKJ,SAAL,IAAkB,KAAKC,MAAL,GAAc,CAAC,CAAjC,IAAsC,aAAAI,OAAO,EAACE,IAAR,mBAAa,KAAKL,KAAlB,EAAyB,QAAzB,SAAsCE,IAAtC,EAAtC;AACD;;;;;;SArCkBN,G","sourcesContent":["export default class Log {\n\n  _name:string;\n  _isEnable:boolean = true\n  _level:number = 0\n\n  constructor(name:string) {\n    this._name = name\n  }\n\n  level(val:number) {\n    this._isEnable = true\n    this._level = val\n  }\n\n  enable() {\n    this._isEnable = true\n  }\n\n  disable() {\n    this._isEnable = false\n  }\n\n  verbose(...args) {\n    this._isEnable && this._level > 2 && console.log(this._name, 'verbose:', ...args)\n  }\n\n  debug(...args) {\n    this._isEnable && this._level > 1 && console.log(this._name, 'debug:', ...args)\n  }\n\n  info(...args) {\n    this._isEnable && this._level > 0 && console.log(this._name, 'info:', ...args)\n  }\n\n  error(...args) {\n    this._isEnable && this._level > -1 && console.warn(this._name, 'error:', ...args)\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}