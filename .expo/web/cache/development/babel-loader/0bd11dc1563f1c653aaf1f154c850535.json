{"ast":null,"code":"import * as types from \"../types/posts\";\nexport var startFetchPost = function startFetchPost() {\n  return {\n    type: types.POST_FETCH_STARTED\n  };\n};\nexport var completeFetchPost = function completeFetchPost(entities, order) {\n  return {\n    type: types.POST_FETCH_COMPLETED,\n    payload: {\n      entities: entities,\n      order: order\n    }\n  };\n};\nexport var failFetchPost = function failFetchPost(error) {\n  return {\n    type: types.POST_FETCH_FAILEED,\n    payload: {\n      error: error\n    }\n  };\n};\nexport var startPostsFetch = function startPostsFetch() {\n  return {\n    type: types.USER_POSTS_STARTED\n  };\n};\nexport var completePostFetch = function completePostFetch(entities, order) {\n  return {\n    type: types.USER_POSTS_COMPLETED,\n    payload: {\n      entities: entities,\n      order: order\n    }\n  };\n};\nexport var failPostFetch = function failPostFetch(error) {\n  return {\n    type: types.USER_POSTS_FAILED,\n    payload: {\n      error: error\n    }\n  };\n};","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/src/actions/post.js"],"names":["types","startFetchPost","type","POST_FETCH_STARTED","completeFetchPost","entities","order","POST_FETCH_COMPLETED","payload","failFetchPost","error","POST_FETCH_FAILEED","startPostsFetch","USER_POSTS_STARTED","completePostFetch","USER_POSTS_COMPLETED","failPostFetch","USER_POSTS_FAILED"],"mappings":"AAAA,OAAO,KAAKA,KAAZ;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAO;AACjCC,IAAAA,IAAI,EAAEF,KAAK,CAACG;AADqB,GAAP;AAAA,CAAvB;AAIP,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,QAAD,EAAWC,KAAX;AAAA,SAAsB;AACnDJ,IAAAA,IAAI,EAAEF,KAAK,CAACO,oBADuC;AAEnDC,IAAAA,OAAO,EAAE;AACLH,MAAAA,QAAQ,EAARA,QADK;AAELC,MAAAA,KAAK,EAALA;AAFK;AAF0C,GAAtB;AAAA,CAA1B;AAQP,OAAO,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK;AAAA,SAAK;AACnCR,IAAAA,IAAI,EAAEF,KAAK,CAACW,kBADuB;AAEnCH,IAAAA,OAAO,EAAE;AACLE,MAAAA,KAAK,EAALA;AADK;AAF0B,GAAL;AAAA,CAA3B;AAQP,OAAO,IAAME,eAAe,GAAG,SAAlBA,eAAkB;AAAA,SAAO;AAClCV,IAAAA,IAAI,EAAEF,KAAK,CAACa;AADsB,GAAP;AAAA,CAAxB;AAIP,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACT,QAAD,EAAWC,KAAX;AAAA,SAAsB;AACnDJ,IAAAA,IAAI,EAAEF,KAAK,CAACe,oBADuC;AAEnDP,IAAAA,OAAO,EAAE;AACLH,MAAAA,QAAQ,EAARA,QADK;AAELC,MAAAA,KAAK,EAALA;AAFK;AAF0C,GAAtB;AAAA,CAA1B;AAQP,OAAO,IAAMU,aAAa,GAAG,SAAhBA,aAAgB,CAAAN,KAAK;AAAA,SAAK;AACnCR,IAAAA,IAAI,EAAEF,KAAK,CAACiB,iBADuB;AAEnCT,IAAAA,OAAO,EAAE;AACLE,MAAAA,KAAK,EAALA;AADK;AAF0B,GAAL;AAAA,CAA3B","sourcesContent":["import * as types from '../types/posts'\n\nexport const startFetchPost = () => ({\n    type: types.POST_FETCH_STARTED,\n  });\n\nexport const completeFetchPost = (entities, order) => ({\n    type: types.POST_FETCH_COMPLETED,\n    payload: {\n        entities,\n        order,\n    },\n    });\n\nexport const failFetchPost = error => ({\n    type: types.POST_FETCH_FAILEED,\n    payload: {\n        error,\n    },\n});\n\n\nexport const startPostsFetch = () => ({\n    type: types.USER_POSTS_STARTED,\n    });\n\nexport const completePostFetch = (entities, order) => ({\n    type: types.USER_POSTS_COMPLETED,\n    payload: {\n        entities,\n        order,\n    },\n    });\n\nexport const failPostFetch = error => ({\n    type: types.USER_POSTS_FAILED,\n    payload: {\n        error,\n    },\n});"]},"metadata":{},"sourceType":"module"}