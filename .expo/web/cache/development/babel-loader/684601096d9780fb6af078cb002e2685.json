{"ast":null,"code":"import * as types from \"../types/search\";\nexport var startUserHistoryFetching = function startUserHistoryFetching() {\n  return {\n    type: types.USER_SEARCH_HISTORY_FETCHED_STARTED\n  };\n};\nexport var completeUserHistoryFetching = function completeUserHistoryFetching() {\n  return {\n    type: types.USER_SEARCH_HISTORY_FETCHED_COMPLETED\n  };\n};\nexport var failUserHistoryFetching = function failUserHistoryFetching() {\n  return {\n    type: types.USER_SEARCH_HISTORY_FETCHED_FAILED\n  };\n};\nexport var startHashtagHistoryFetching = function startHashtagHistoryFetching() {\n  return {\n    type: types.HASHTAG_SEARCH_HISTORY_FETCHED_STARTED\n  };\n};\nexport var completeHashtagHistoryFetching = function completeHashtagHistoryFetching() {\n  return {\n    type: types.HASHTAG_SEARCH_HISTORY_FETCHED_COMPLETED\n  };\n};\nexport var failHashtagHistoryFetching = function failHashtagHistoryFetching() {\n  return {\n    type: types.HASHTAG_SEARCH_HISTORY_FETCHED_FAILED\n  };\n};\nexport var startUserFetching = function startUserFetching(query) {\n  return {\n    type: types.USER_SEARCH_FETCHED_STARTED,\n    payload: query\n  };\n};\nexport var completeUserFetching = function completeUserFetching() {\n  return {\n    type: types.USER_SEARCH_FETCHED_COMPLETED\n  };\n};\nexport var failUserFetching = function failUserFetching() {\n  return {\n    type: types.USER_SEARCH_FETCHED_FAILED\n  };\n};\nexport var startHashtagFetching = function startHashtagFetching(query) {\n  return {\n    type: types.HASHTAG_SEARCH_FETCHED_STARTED,\n    payload: query\n  };\n};\nexport var completeHashtagFetching = function completeHashtagFetching() {\n  return {\n    type: types.HASHTAG_SEARCH_FETCHED_COMPLETED\n  };\n};\nexport var failHashtagFetching = function failHashtagFetching() {\n  return {\n    type: types.HASHTAG_SEARCH_FETCHED_FAILED\n  };\n};","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/src/actions/search.js"],"names":["types","startUserHistoryFetching","type","USER_SEARCH_HISTORY_FETCHED_STARTED","completeUserHistoryFetching","USER_SEARCH_HISTORY_FETCHED_COMPLETED","failUserHistoryFetching","USER_SEARCH_HISTORY_FETCHED_FAILED","startHashtagHistoryFetching","HASHTAG_SEARCH_HISTORY_FETCHED_STARTED","completeHashtagHistoryFetching","HASHTAG_SEARCH_HISTORY_FETCHED_COMPLETED","failHashtagHistoryFetching","HASHTAG_SEARCH_HISTORY_FETCHED_FAILED","startUserFetching","query","USER_SEARCH_FETCHED_STARTED","payload","completeUserFetching","USER_SEARCH_FETCHED_COMPLETED","failUserFetching","USER_SEARCH_FETCHED_FAILED","startHashtagFetching","HASHTAG_SEARCH_FETCHED_STARTED","completeHashtagFetching","HASHTAG_SEARCH_FETCHED_COMPLETED","failHashtagFetching","HASHTAG_SEARCH_FETCHED_FAILED"],"mappings":"AAAA,OAAO,KAAKA,KAAZ;AAGA,OAAO,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B;AAAA,SAAO;AAC7CC,IAAAA,IAAI,EAAEF,KAAK,CAACG;AADiC,GAAP;AAAA,CAAjC;AAKP,OAAO,IAAMC,2BAA2B,GAAG,SAA9BA,2BAA8B;AAAA,SAAO;AAC9CF,IAAAA,IAAI,EAAEF,KAAK,CAACK;AADkC,GAAP;AAAA,CAApC;AAIP,OAAO,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B;AAAA,SAAO;AAC1CJ,IAAAA,IAAI,EAAEF,KAAK,CAACO;AAD8B,GAAP;AAAA,CAAhC;AAKP,OAAO,IAAMC,2BAA2B,GAAG,SAA9BA,2BAA8B;AAAA,SAAO;AAC9CN,IAAAA,IAAI,EAAEF,KAAK,CAACS;AADkC,GAAP;AAAA,CAApC;AAIP,OAAO,IAAMC,8BAA8B,GAAG,SAAjCA,8BAAiC;AAAA,SAAO;AACjDR,IAAAA,IAAI,EAAEF,KAAK,CAACW;AADqC,GAAP;AAAA,CAAvC;AAIP,OAAO,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA6B;AAAA,SAAO;AAC7CV,IAAAA,IAAI,EAAEF,KAAK,CAACa;AADiC,GAAP;AAAA,CAAnC;AAMP,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD;AAAA,SAAY;AACzCb,IAAAA,IAAI,EAAEF,KAAK,CAACgB,2BAD6B;AAEzCC,IAAAA,OAAO,EAAEF;AAFgC,GAAZ;AAAA,CAA1B;AAML,OAAO,IAAMG,oBAAoB,GAAG,SAAvBA,oBAAuB;AAAA,SAAO;AACvChB,IAAAA,IAAI,EAAEF,KAAK,CAACmB;AAD2B,GAAP;AAAA,CAA7B;AAIP,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,SAAO;AACnClB,IAAAA,IAAI,EAAEF,KAAK,CAACqB;AADuB,GAAP;AAAA,CAAzB;AAKP,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACP,KAAD;AAAA,SAAY;AAC5Cb,IAAAA,IAAI,EAAEF,KAAK,CAACuB,8BADgC;AAE5CN,IAAAA,OAAO,EAACF;AAFoC,GAAZ;AAAA,CAA7B;AAKP,OAAO,IAAMS,uBAAuB,GAAG,SAA1BA,uBAA0B;AAAA,SAAO;AAC1CtB,IAAAA,IAAI,EAAEF,KAAK,CAACyB;AAD8B,GAAP;AAAA,CAAhC;AAIP,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB;AAAA,SAAO;AACtCxB,IAAAA,IAAI,EAAEF,KAAK,CAAC2B;AAD0B,GAAP;AAAA,CAA5B","sourcesContent":["import * as types from '../types/search';\n\n\nexport const startUserHistoryFetching = () => ({\n  type: types.USER_SEARCH_HISTORY_FETCHED_STARTED,\n});\n\n\nexport const completeUserHistoryFetching = () => ({\n    type: types.USER_SEARCH_HISTORY_FETCHED_COMPLETED,\n  });\n\nexport const failUserHistoryFetching = () => ({\n    type: types.USER_SEARCH_HISTORY_FETCHED_FAILED,\n});\n\n\nexport const startHashtagHistoryFetching = () => ({\n    type: types.HASHTAG_SEARCH_HISTORY_FETCHED_STARTED,\n  });\n  \nexport const completeHashtagHistoryFetching = () => ({\n    type: types.HASHTAG_SEARCH_HISTORY_FETCHED_COMPLETED,\n});\n\nexport const failHashtagHistoryFetching = () => ({\n    type: types.HASHTAG_SEARCH_HISTORY_FETCHED_FAILED,\n});\n\n\n\nexport const startUserFetching = (query) => ({\n    type: types.USER_SEARCH_FETCHED_STARTED,\n    payload: query\n  });\n  \n  \n  export const completeUserFetching = () => ({\n      type: types.USER_SEARCH_FETCHED_COMPLETED,\n    });\n  \n  export const failUserFetching = () => ({\n      type: types.USER_SEARCH_FETCHED_FAILED,\n  });\n  \n  \n  export const startHashtagFetching = (query) => ({\n      type: types.HASHTAG_SEARCH_FETCHED_STARTED,\n      payload:query\n    });\n    \n  export const completeHashtagFetching = () => ({\n      type: types.HASHTAG_SEARCH_FETCHED_COMPLETED,\n  });\n  \n  export const failHashtagFetching = () => ({\n      type: types.HASHTAG_SEARCH_FETCHED_FAILED,\n  });\n  \n\n"]},"metadata":{},"sourceType":"module"}