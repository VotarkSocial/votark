{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/thecoder/Documentos/votark/votark/src/components/ResetPassword/index.js\";\nimport { Link } from \"react-router-dom\";\nimport { Actions } from 'react-native-router-flux';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { connect } from 'react-redux';\nimport { validateEmail } from \"../../utils/validate\";\nimport * as selectors from \"../../reducers\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React, { useState } from 'react';\nimport styles from \"./styles\";\nimport { colors } from \"../../../configuration\";\nimport * as actions from \"../../actions/auth\";\n\nvar ResetPassword = function ResetPassword(_ref) {\n  var onSubmit = _ref.onSubmit,\n      isLoading = _ref.isLoading,\n      _ref$error = _ref.error,\n      error = _ref$error === void 0 ? null : _ref$error;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      changeEmail = _useState2[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, React.createElement(LinearGradient, {\n    colors: [colors.primaryc, 'transparent'],\n    style: {\n      width: '100%',\n      height: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.centered,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    style: styles.logo,\n    source: require(\"../../public/static/img/logo.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    className: \"email\",\n    type: \"email\",\n    placeholder: \"email\",\n    value: email,\n    onChangeText: changeEmail,\n    onChange: function onChange(e) {\n      return changeEmail(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.errors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, error && React.createElement(Text, {\n    style: styles.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, error), isLoading ? React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, 'LOADING...')) : React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    type: \"submit\",\n    onPress: function onPress() {\n      return onSubmit(email);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, 'SEND EMAIL')), React.createElement(View, {\n    style: styles.option,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"Did you remember your password? \"), typeof document === 'undefined' ? React.createElement(Text, {\n    style: styles.link,\n    title: ' login ',\n    type: \"submit\",\n    onPress: function onPress() {\n      return Actions.Login(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, ' login ') : React.createElement(Link, {\n    to: \"/login\",\n    style: styles.navItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 23\n    }\n  }, ' login '))))))));\n};\n\nexport default connect(function (state) {\n  return {\n    isLoading: selectors.isReseting(state),\n    error: selectors.resetError(state),\n    hasReset: selectors.hasreset(state)\n  };\n}, function (dispatch) {\n  return {\n    onSubmit: function onSubmit(email) {\n      if (validateEmail(email)) {\n        dispatch(actions.startPasswordResetProcess(username, password, email));\n      } else {}\n    }\n  };\n})(ResetPassword);","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/src/components/ResetPassword/index.js"],"names":["Link","Actions","LinearGradient","connect","validateEmail","selectors","React","useState","styles","colors","actions","ResetPassword","onSubmit","isLoading","error","email","changeEmail","container","primaryc","width","height","alignItems","justifyContent","centered","logo","require","input","e","target","value","errors","button","option","text","document","link","Login","navItem","state","isReseting","resetError","hasReset","hasreset","dispatch","startPasswordResetProcess","username","password"],"mappings":"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","sourcesContent":["import { Link } from \"react-router-dom\";\nimport { Actions } from 'react-native-router-flux';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { connect } from 'react-redux';\nimport { validateEmail } from '../../utils/validate';\nimport * as selectors from '../../reducers';\nimport { Text, View, TextInput, Button, Image } from 'react-native';\nimport React, { useState } from 'react';\nimport styles from './styles'\nimport { colors } from '../../../configuration';\nimport * as actions from '../../actions/auth';\n\nconst ResetPassword = ({\n  onSubmit,\n  isLoading,\n  error = null,\n}) => {\n  const [email, changeEmail] = useState('');\n  return (\n    <View style={styles.container}>\n      <LinearGradient\n          colors={[colors.primaryc, 'transparent']}\n          style={{\n            width: '100%',\n            height: '100%',\n            alignItems: 'center',\n            justifyContent: 'center'\n          }}\n        >\n      <View style={styles.centered}>\n      <Image style={styles.logo} source={require('../../public/static/img/logo.png')} ></Image>\n      <TextInput\n        style={styles.input}\n        className=\"email\"\n        type=\"email\"\n        placeholder=\"email\"\n        value={email}   \n        onChangeText={changeEmail}\n        onChange={e => changeEmail(e.target.value)}\n      />\n      <View style={styles.errors}>\n        {\n        error && (\n            <Text style={styles.error}>{ error }</Text>\n        )\n      }\n        {\n          isLoading ? (\n            <View>\n              <Text style={styles.error}>{'LOADING...'}</Text>\n            </View>\n          ) : (\n            <View> \n                <View style={styles.button}>\n                    <Text style={styles.button} type=\"submit\" onPress={\n                        () => onSubmit(email)\n                    }>{'SEND EMAIL'}</Text>\n                </View>\n              <View style={styles.option}>\n                <Text style={styles.text} >{\"Did you remember your password? \"}</Text>\n                {\n                  (typeof document === 'undefined')?(\n                    <Text style={styles.link} title={' login '} type=\"submit\" \n                    onPress={() =>\n                      Actions.Login(true)\n                    }>{' login '}</Text>\n                  ):(\n                    <Link to=\"/login\" style={styles.navItem}>\n                      <Text style={styles.text}>{' login '}</Text>\n                    </Link>\n                  )\n                }\n                \n              </View>\n            </View>\n          )\n        }\n      </View>\n      </View>\n      </LinearGradient>\n    </View>\n  );\n} \n\nexport default connect(\n    state => ({\n      isLoading: selectors.isReseting(state),\n      error: selectors.resetError(state),\n      hasReset: selectors.hasreset(state)\n    }),\n    dispatch => ({\n      onSubmit(email) {\n          if(validateEmail(email)){\n              dispatch(actions.startPasswordResetProcess(username,password,email))\n          }\n          else{\n            //dispatch(actions.failRegistration(\"WRITE A VALID EMAIL\"))\n          }\n      },\n    }),\n  )(ResetPassword);\n  "]},"metadata":{},"sourceType":"module"}