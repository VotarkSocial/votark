{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/thecoder/Documentos/votark/votark/src/components/Chats/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { connect } from 'react-redux';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport * as selectors from \"../../reducers\";\nimport React, { useEffect, useState } from 'react';\nimport styles from \"./styles\";\nimport { URL } from \"../../../configuration\";\nimport { Actions } from 'react-native-router-flux';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { colors } from \"../../../configuration\";\nimport NavBar from \"../NavBar\";\nimport TokenRefresh from \"../TokenRefresh\";\nimport { startFetchingChats, startAddingChat, selectChat } from \"../../actions/chat\";\nimport { v4 } from 'uuid';\nimport { startFetchingMessages } from \"../../actions/message\";\n\nvar Chats = function Chats(_ref) {\n  var add = _ref.add,\n      chats = _ref.chats,\n      error = _ref.error,\n      messages = _ref.messages,\n      error_message = _ref.error_message,\n      fetch = _ref.fetch,\n      selected = _ref.selected,\n      select = _ref.select;\n  useEffect(function () {\n    var interval = setInterval(fetch, 1000);\n    return function () {\n      clearInterval(interval);\n    };\n  }, []);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isAdding = _useState2[0],\n      changeIsAdding = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      changeName = _useState4[1];\n\n  return React.createElement(View, {\n    style: styles.main_container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, React.createElement(LinearGradient, {\n    colors: [colors.primaryB, 'transparent'],\n    style: {\n      width: '100%',\n      height: '100%',\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n      justifyContent: 'flex-start'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, selected ? React.createElement(View, {\n    style: typeof document === 'undefined' ? styles.container : styles.webcontainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.row,\n    onPress: function onPress() {\n      return select(null);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, React.createElement(Image, {\n    style: styles.icon,\n    source: require(\"../../public/static/icon/return.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }))) : React.createElement(View, {\n    style: typeof document === 'undefined' ? styles.container : styles.webcontainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, \"CHATS\")), React.createElement(TouchableOpacity, {\n    style: styles.row,\n    onPress: function onPress() {\n      return changeIsAdding(!isAdding);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, isAdding ? React.createElement(Text, {\n    style: styles.text_,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, \"cancel\") : React.createElement(Image, {\n    style: styles.icon,\n    source: require(\"../../public/static/icon/add.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }\n  }))), selected ? React.createElement(ScrollView, {\n    style: styles.section,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.elements,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, !error_message ? React.createElement(View, {\n    style: styles.item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }, chats.length !== 0 ? chats.messages(function (item) {\n    return React.createElement(View, {\n      style: styles.row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 37\n      }\n    }, React.createElement(Text, {\n      style: styles.element,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 41\n      }\n    }, \" \", item.user), React.createElement(Text, {\n      style: styles.element,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 41\n      }\n    }, \" \", tiem.content));\n  }) : React.createElement(Text, {\n    style: styles.element,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 33\n    }\n  }, \"NO CURRENT MESSAGES\")) : React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 24\n    }\n  }, error))) : React.createElement(View, {\n    style: styles.section,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, isAdding && React.createElement(View, {\n    style: styles.row2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    className: \"user\",\n    type: \"text\",\n    placeholder: \"Chat name\",\n    value: name,\n    onChangeText: changeName,\n    onChange: function onChange(e) {\n      return changeName(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.row,\n    onPress: function onPress() {\n      changeIsAdding(false);\n      add(name);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles.text2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  }, \"CREATE\"))), React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.elements,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, !error ? React.createElement(View, {\n    style: styles.item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 25\n    }\n  }, chats.length !== 0 ? chats.map(function (chat) {\n    return React.createElement(TouchableOpacity, {\n      key: chat.id,\n      style: styles.item,\n      onPress: function onPress() {\n        select(chat.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 33\n      }\n    }, React.createElement(View, {\n      style: styles.row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 37\n      }\n    }, React.createElement(Image, {\n      style: styles.photo,\n      source: chat.picture ? {\n        uri: STATIC_URL + chat.picture\n      } : require(\"../../public/static/icon/user.png\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 41\n      }\n    }), React.createElement(Text, {\n      style: styles.element,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 41\n      }\n    }, \" \", chat.name)), React.createElement(View, {\n      style: styles.bar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 37\n      }\n    }));\n  }) : React.createElement(Text, {\n    style: styles.element,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 33\n    }\n  }, \"NO CURRENT CHATS\")) : React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 24\n    }\n  }, error))))), React.createElement(NavBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }), React.createElement(TokenRefresh, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default connect(function (state) {\n  return {\n    isAuthenticated: selectors.isAuthenticated(state),\n    error: selectors.getErrorChat(state),\n    isFetching: selectors.getisFetchingChat(state),\n    chats: selectors.getChats(state),\n    messages: selectors.getMessages(state),\n    error_message: selectors.getErrorMessage(state),\n    selected: selectors.getChat(state, selectors.getChatSelected(state))\n  };\n}, function (dispatch) {\n  return {\n    add: function add(name) {\n      dispatch(startAddingChat(name, v4()));\n    },\n    fetch_: function fetch_(selected) {\n      dispatch(startFetchingChats());\n\n      if (selected) {\n        dispatch(startFetchingMessages());\n      }\n    },\n    select: function select(id) {\n      dispatch(selectChat(id));\n    }\n  };\n}, function (stateToProps, disptachToProps) {\n  if (!stateToProps.isAuthenticated) {\n    if (typeof document !== 'undefined') {\n      window.location.href = URL + 'login/';\n    } else {\n      Actions.replace('Login');\n    }\n  }\n\n  return _objectSpread(_objectSpread(_objectSpread({}, disptachToProps), stateToProps), {}, {\n    fetch: function fetch() {\n      disptachToProps.fetch_(stateToProps.selected);\n    }\n  });\n})(Chats);","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/src/components/Chats/index.js"],"names":["connect","selectors","React","useEffect","useState","styles","URL","Actions","LinearGradient","colors","NavBar","TokenRefresh","startFetchingChats","startAddingChat","selectChat","v4","startFetchingMessages","Chats","add","chats","error","messages","error_message","fetch","selected","select","interval","setInterval","clearInterval","isAdding","changeIsAdding","name","changeName","main_container","primaryB","width","height","flexDirection","alignItems","justifyContent","document","container","webcontainer","row","icon","require","text","text_","section","elements","item","length","element","user","tiem","content","row2","input","e","target","value","text2","map","chat","id","photo","picture","uri","STATIC_URL","bar","state","isAuthenticated","getErrorChat","isFetching","getisFetchingChat","getChats","getMessages","getErrorMessage","getChat","getChatSelected","dispatch","fetch_","stateToProps","disptachToProps","window","location","href","replace"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport {Text, View, Image, TouchableOpacity, ScrollView, TextInput } from 'react-native';\nimport * as selectors from '../../reducers'\nimport React, {useEffect, useState} from 'react';\nimport styles from './styles'\nimport { URL } from '../../../configuration'\nimport { Actions } from 'react-native-router-flux';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { colors } from '../../../configuration';\nimport NavBar from '../NavBar';\nimport TokenRefresh from '../TokenRefresh';\nimport { startFetchingChats, startAddingChat, selectChat } from '../../actions/chat';\nimport {v4} from 'uuid'\nimport { startFetchingMessages } from '../../actions/message';\n\n\nconst Chats = ({add, chats,error,messages, error_message,fetch,selected,select}) => {\n    \n    useEffect(\n        () => {\n          const interval = setInterval(fetch, 1000);\n          return () => {\n            clearInterval(interval);\n          };\n        },\n        []\n      );\n\n    const [isAdding, changeIsAdding] = useState(false);\n    const [name, changeName] = useState('');\n\n    return (\n    <View style={styles.main_container}>\n    <LinearGradient\n        colors={[colors.primaryB, 'transparent']}\n        style={{\n            width: '100%',\n            height: '100%',\n            flexDirection: 'column',\n            alignItems: 'flex-start',\n            justifyContent: 'flex-start'\n        }}\n        >\n        {selected?\n            <View style={(typeof document==='undefined')?styles.container:styles.webcontainer}>\n                <TouchableOpacity style={styles.row} onPress={()=>select(null)}>\n                    {\n                        <Image style={styles.icon} source={require('../../public/static/icon/return.png')} />\n                    }\n                </TouchableOpacity>   \n            </View>\n            :\n            <View style={(typeof document==='undefined')?styles.container:styles.webcontainer}>\n                <View style={styles.row}>\n                    <Text style={styles.text} >{\"CHATS\"}</Text>\n                </View>\n                <TouchableOpacity style={styles.row} onPress={()=>changeIsAdding(!isAdding)}>\n                    {\n                        isAdding?\n                        <Text style={styles.text_} >{\"cancel\"}</Text>\n                        :\n                        <Image style={styles.icon} source={require('../../public/static/icon/add.png')} />\n                    }\n                    \n                </TouchableOpacity>   \n            </View>\n        }\n        {selected?\n            <ScrollView style={styles.section}>\n                <View style={styles.elements}>\n                    {(!error_message)?(\n                        <View style={styles.item}>\n                            {\n                                chats.length!==0?\n                            chats.messages(item =>\n                                    <View style={styles.row}>\n                                        <Text style={styles.element} > { item.user }</Text>\n                                        <Text style={styles.element} > { tiem.content }</Text>\n                                    </View>                                \n                                ):\n                                <Text style={styles.element} >NO CURRENT MESSAGES</Text>\n                            }\n                        </View>\n                    ):(<Text>{error}</Text>)\n                    }\n                </View>\n            </ScrollView>\n        :\n        <View style={styles.section}>\n        {\n            isAdding &&\n                    <View style={styles.row2}>\n                        <TextInput\n                            style={styles.input}\n                            className=\"user\"\n                            type=\"text\"\n                            placeholder=\"Chat name\"\n                            value={name}   \n                            onChangeText={changeName}\n                            onChange={e => changeName(e.target.value)}\n                            />\n                        <TouchableOpacity style={styles.row} onPress={()=>{\n                            changeIsAdding(false)\n                            add(name)}}>\n                            <Text style={styles.text2} >{\"CREATE\"}</Text>\n                        </TouchableOpacity> \n                    </View>\n        }\n            \n                <ScrollView>\n                <View style={styles.elements}>\n                    {(!error)?(\n                        <View style={styles.item}>\n                            {\n                                chats.length!==0?\n                            chats.map(chat =>\n                                <TouchableOpacity key={chat.id} style={styles.item} onPress={()=>{\n                                    select(chat.id)\n                                }}>\n                                    <View style={styles.row}>\n                                        <Image style={styles.photo} source={chat.picture?{uri: STATIC_URL + chat.picture}:require('../../public/static/icon/user.png')}/>\n                                        <Text style={styles.element} > { chat.name }</Text>\n                                    </View>\n                                    <View style={styles.bar}></View>\n                                </TouchableOpacity>\n                                ):\n                                <Text style={styles.element} >NO CURRENT CHATS</Text>\n                            }\n                        </View>\n                    ):(<Text>{error}</Text>)\n                    }\n                </View>\n            </ScrollView>\n        </View>\n    }\n    </LinearGradient>\n    <NavBar/>\n    <TokenRefresh/>\n    </View>\n)};\n\nexport default connect(\n  state => ({\n    isAuthenticated: selectors.isAuthenticated(state),\n    error: selectors.getErrorChat(state),\n    isFetching: selectors.getisFetchingChat(state),\n    chats: selectors.getChats(state),\n    messages: selectors.getMessages(state),\n    error_message: selectors.getErrorMessage(state),\n    selected: selectors.getChat(state,selectors.getChatSelected(state)),\n  }),\n  dispatch => ({\n      add(name){\n        dispatch(startAddingChat(name,v4()))\n      },\n      fetch_(selected){\n          dispatch(startFetchingChats())\n          if(selected){\n              dispatch(startFetchingMessages())\n          }\n      },\n      select(id){\n          dispatch(selectChat(id))\n      }\n  }),\n  (stateToProps,disptachToProps) => {\n    if(!stateToProps.isAuthenticated){\n      if(typeof document !== 'undefined'){\n        window.location.href = URL+'login/'\n      }\n      else{\n        Actions.replace('Login')\n      }\n    }\n    return ({...disptachToProps,\n        ...stateToProps,\n        fetch(){\n            disptachToProps.fetch_(stateToProps.selected)        \n        }\n    })\n  }\n)(Chats);"]},"metadata":{},"sourceType":"module"}