{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createForOfIteratorHelperLoose(o) { var i = 0; if (typeof Symbol === \"undefined\" || o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } i = o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"](); return i.next.bind(i); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nvar PREFIX = 'react-native-cacher:values:';\nvar DEFAULT_EXPIRES = 999999;\n\nfunction b64EncodeUnicode(str) {\n  if (Platform.OS === 'android') {\n    return encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, function (match, p1) {\n      return String.fromCharCode('0x' + p1);\n    });\n  }\n\n  return str;\n}\n\nfunction b64DecodeUnicode(str) {\n  if (Platform.OS === 'android') {\n    return decodeURIComponent(Array.prototype.map.call(str, function (c) {\n      return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(''));\n  }\n\n  return str;\n}\n\nfunction currentTime() {\n  return Math.floor(new Date().getTime() / 1000);\n}\n\nvar MemoryCache = {};\n\nMemoryCache.set = function _callee(key, value) {\n  var expires,\n      k,\n      storageValue,\n      _args = arguments;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          expires = _args.length > 2 && _args[2] !== undefined ? _args[2] : DEFAULT_EXPIRES;\n          k = PREFIX + key;\n          storageValue = {\n            value: value,\n            expires: currentTime() + parseInt(expires)\n          };\n          _context.prev = 3;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(k, b64EncodeUnicode(JSON.stringify(storageValue))));\n\n        case 6:\n          return _context.abrupt(\"return\", null);\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](3);\n          return _context.abrupt(\"return\", {\n            error: _context.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[3, 9]], Promise);\n};\n\nMemoryCache.get = function _callee2(key) {\n  var k, curTime, v;\n  return _regeneratorRuntime.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          k = PREFIX + key, curTime = currentTime();\n          _context2.prev = 1;\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(k));\n\n        case 4:\n          v = _context2.sent;\n          v = v ? JSON.parse(Platform.OS == 'android' ? b64DecodeUnicode(v) : v) : null;\n\n          if (!(v && v.expires && v.expires >= curTime)) {\n            _context2.next = 10;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", v.value);\n\n        case 10:\n          _context2.next = 12;\n          return _regeneratorRuntime.awrap(AsyncStorage.removeItem(k));\n\n        case 12:\n          _context2.next = 17;\n          break;\n\n        case 14:\n          _context2.prev = 14;\n          _context2.t0 = _context2[\"catch\"](1);\n          return _context2.abrupt(\"return\", {\n            error: _context2.t0\n          });\n\n        case 17:\n          return _context2.abrupt(\"return\", null);\n\n        case 18:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[1, 14]], Promise);\n};\n\nMemoryCache.remove = function _callee3(key) {\n  var k;\n  return _regeneratorRuntime.async(function _callee3$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          k = PREFIX + key;\n          _context3.prev = 1;\n          _context3.next = 4;\n          return _regeneratorRuntime.awrap(AsyncStorage.removeItem(k));\n\n        case 4:\n          return _context3.abrupt(\"return\", null);\n\n        case 7:\n          _context3.prev = 7;\n          _context3.t0 = _context3[\"catch\"](1);\n          return _context3.abrupt(\"return\", {\n            error: _context3.t0\n          });\n\n        case 10:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[1, 7]], Promise);\n};\n\nMemoryCache.multiGet = function (keys) {\n  return new Promise(function (resolve, reject) {\n    var counter = 0,\n        result = {};\n\n    var _loop = function _loop(key) {\n      MemoryCache.get(key).then(function (value) {\n        result[key] = value;\n\n        if (++counter == keys.length) {\n          resolve(result);\n        }\n      }).catch(function () {\n        result[key] = null;\n\n        if (++counter == keys.length) {\n          resolve(result);\n        }\n      });\n    };\n\n    for (var _iterator = _createForOfIteratorHelperLoose(keys), _step; !(_step = _iterator()).done;) {\n      var key = _step.value;\n\n      _loop(key);\n    }\n  });\n};\n\nMemoryCache.multiSet = function (values) {\n  var expires = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_EXPIRES;\n  return new Promise(function (resolve, reject) {\n    var counter = 0,\n        length = Object.keys(values).length;\n\n    for (var key in values) {\n      MemoryCache.set(key, values[key], expires).then(function () {\n        if (++counter == length) {\n          resolve(null);\n        }\n      }).catch(function (err) {\n        return reject({\n          error: err\n        });\n      });\n    }\n  });\n};\n\nMemoryCache.multiRemove = function (keys) {\n  return new Promise(function (resolve, reject) {\n    var counter = 0;\n\n    for (var _iterator2 = _createForOfIteratorHelperLoose(keys), _step2; !(_step2 = _iterator2()).done;) {\n      var key = _step2.value;\n      MemoryCache.remove(key).then(function () {\n        if (++counter == keys.length) {\n          resolve(null);\n        }\n      }).catch(function (err) {\n        return reject({\n          error: err\n        });\n      });\n    }\n  });\n};\n\nMemoryCache.flush = function _callee4() {\n  var keys;\n  return _regeneratorRuntime.async(function _callee4$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return _regeneratorRuntime.awrap(MemoryCache.getAllKeys());\n\n        case 3:\n          keys = _context4.sent;\n          _context4.next = 6;\n          return _regeneratorRuntime.awrap(MemoryCache.multiRemove(keys));\n\n        case 6:\n          return _context4.abrupt(\"return\", _context4.sent);\n\n        case 9:\n          _context4.prev = 9;\n          _context4.t0 = _context4[\"catch\"](0);\n          return _context4.abrupt(\"return\", {\n            error: _context4.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[0, 9]], Promise);\n};\n\nMemoryCache.isExpired = function _callee5(key) {\n  var k, v;\n  return _regeneratorRuntime.async(function _callee5$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          k = PREFIX + key;\n          _context5.prev = 1;\n          _context5.next = 4;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(k));\n\n        case 4:\n          v = _context5.sent;\n          v = JSON.parse(v && Platform.OS == 'android' ? b64DecodeUnicode(v) : v);\n          return _context5.abrupt(\"return\", !v.expires || v.expires < currentTime());\n\n        case 9:\n          _context5.prev = 9;\n          _context5.t0 = _context5[\"catch\"](1);\n          return _context5.abrupt(\"return\", {\n            error: _context5.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, [[1, 9]], Promise);\n};\n\nMemoryCache.getAllKeys = function _callee6() {\n  var keys, tmpKeys, _iterator3, _step3, key;\n\n  return _regeneratorRuntime.async(function _callee6$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getAllKeys());\n\n        case 3:\n          keys = _context6.sent;\n          tmpKeys = [];\n\n          for (_iterator3 = _createForOfIteratorHelperLoose(keys); !(_step3 = _iterator3()).done;) {\n            key = _step3.value;\n\n            if (key.match(PREFIX) !== null) {\n              key = key.replace(PREFIX, '');\n              tmpKeys.push(key);\n            }\n          }\n\n          return _context6.abrupt(\"return\", tmpKeys);\n\n        case 9:\n          _context6.prev = 9;\n          _context6.t0 = _context6[\"catch\"](0);\n          return _context6.abrupt(\"return\", {\n            error: _context6.t0\n          });\n\n        case 12:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, [[0, 9]], Promise);\n};\n\nMemoryCache.getAllValues = function () {\n  return MemoryCache.getAllKeys().then(function (all) {\n    return all.reduce(function (prev, next) {\n      AsyncStorage.getItem(PREFIX + next).then(function (item) {\n        return prev[next] = item;\n      });\n      return prev;\n    }, {});\n  });\n};\n\nexport default MemoryCache;","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/node_modules/react-native-clcasher/MemoryCache.js"],"names":["PREFIX","DEFAULT_EXPIRES","b64EncodeUnicode","str","Platform","OS","encodeURIComponent","replace","match","p1","String","fromCharCode","b64DecodeUnicode","decodeURIComponent","Array","prototype","map","call","c","charCodeAt","toString","slice","join","currentTime","Math","floor","Date","getTime","MemoryCache","set","key","value","expires","k","storageValue","parseInt","AsyncStorage","setItem","JSON","stringify","error","get","curTime","getItem","v","parse","removeItem","remove","multiGet","keys","Promise","resolve","reject","counter","result","then","length","catch","multiSet","values","Object","err","multiRemove","flush","getAllKeys","isExpired","tmpKeys","push","getAllValues","all","reduce","prev","next","item"],"mappings":"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","sourcesContent":["// import React, {Component} from 'react';\nimport {AsyncStorage, Platform} from 'react-native';\n\nconst PREFIX = 'react-native-cacher:values:';\nconst DEFAULT_EXPIRES = 999999;\n\nfunction b64EncodeUnicode(str) {\n     if (Platform.OS === 'android') {\n            return encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, function (match, p1) {\n                return String.fromCharCode('0x' + p1);\n            })\n     }\n     return str;\n}\n\nfunction b64DecodeUnicode(str) {\n     if (Platform.OS === 'android'){\n        return decodeURIComponent(Array.prototype.map.call(str, function(c) {\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n     }\n     return str;\n}\n\nfunction currentTime(){\n    return Math.floor((new Date().getTime() / 1000));\n}\n\nlet MemoryCache = {};\n\nMemoryCache.set = async (key, value, expires = DEFAULT_EXPIRES) => {\n    const k = PREFIX + key;\n    const storageValue = {\n        value: value,\n        expires: currentTime() + parseInt(expires)\n    };\n\n    try {\n        await AsyncStorage.setItem(k, b64EncodeUnicode(JSON.stringify(storageValue)));\n        return null;\n    } catch ( err ) {\n        return {error: err};\n    }\n\n};\n\nMemoryCache.get = async (key) => {\n\n    const k = PREFIX + key,\n    curTime = currentTime();\n\n    try {\n        let v = await AsyncStorage.getItem(k);\n\n        v = v ? JSON.parse((Platform.OS == 'android') ?  b64DecodeUnicode(v) : v) : null;\n\n        if ( v && v.expires && v.expires >= curTime ) {\n            return v.value;\n        } else {\n            await AsyncStorage.removeItem(k);\n        }\n    } catch ( err ) {\n        return {error: err};\n    }\n\n    return null;\n};\n\nMemoryCache.remove = async (key) => {\n    const k = PREFIX + key;\n    try {\n        await AsyncStorage.removeItem(k);\n        return null;\n    } catch (err) {\n        return {error: err};\n    }\n};\n\nMemoryCache.multiGet = (keys) => {\n    return new Promise((resolve, reject) => {\n        let counter = 0, result = {};\n        for ( let key of keys ) {\n            MemoryCache.get(key).then((value) => {\n                result[key] = value;\n                if ( ++counter == keys.length ) {\n                    resolve(result);\n                }\n            }).catch(() => {\n                result[key] = null;\n                if ( ++counter == keys.length ) {\n                    resolve(result);\n                }\n            });\n        }\n    });\n};\n\nMemoryCache.multiSet = (values, expires = DEFAULT_EXPIRES) => {\n    return new Promise((resolve, reject) => {\n        let counter = 0, length = Object.keys(values).length;\n        for ( let key in values ) {\n            MemoryCache.set(key, values[key], expires).then(() => {\n                if ( ++counter == length ) {\n                    resolve(null);\n                }\n            }).catch(err => reject({error: err}));\n        }\n    });\n};\n\nMemoryCache.multiRemove = (keys) => {\n    return new Promise((resolve, reject) => {\n        let counter = 0;\n        for ( let key of keys ) {\n            MemoryCache.remove(key).then(() => {\n                if ( ++counter == keys.length ) {\n                    resolve(null);\n                }\n            }).catch(err => reject({error: err}));\n        }\n    });\n};\n\n\nMemoryCache.flush = async () => {\n    try {\n        let keys = await MemoryCache.getAllKeys();\n        return await MemoryCache.multiRemove(keys);\n    } catch ( err ) {\n        return {error: err};\n    }\n};\n\nMemoryCache.isExpired = async (key) => {\n\n    const k = PREFIX + key;\n\n    try {\n        let v = await AsyncStorage.getItem(k);\n        v = JSON.parse(v && (Platform.OS == 'android') ?  b64DecodeUnicode(v) : v);\n        return ( ! v.expires ) || ( v.expires < currentTime());\n    } catch ( err ) {\n        return {error: err};\n    }\n\n};\n\nMemoryCache.getAllKeys = async () => {\n    try {\n        let keys = await AsyncStorage.getAllKeys();\n        let tmpKeys = [];\n        for (let key of keys) {\n            if (key.match(PREFIX) !== null) {\n                key = key.replace(PREFIX, '');\n                tmpKeys.push(key);\n            }\n        }\n        return tmpKeys;\n    } catch ( err ) {\n        return {error: err};\n    }\n};\n\nMemoryCache.getAllValues = () => MemoryCache.getAllKeys()\n    .then((all) => all.reduce((prev, next) => {\n        AsyncStorage.getItem(PREFIX + next).then(item => prev[next] = item);\n        return prev;\n}, {}));\n\nexport default MemoryCache;"]},"metadata":{},"sourceType":"module"}