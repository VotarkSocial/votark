{"ast":null,"code":"import * as types from \"../types/versus\";\nimport { NULL_SETTED } from \"../types/comment\";\nexport var startFetchingVersus = function startFetchingVersus() {\n  return {\n    type: types.VERSUS_FETCHING_STARTED\n  };\n};\nexport var completeFetchingVersus = function completeFetchingVersus(entities, order) {\n  return {\n    type: types.VERSUS_FETCHING_COMPLETED,\n    payload: {\n      entities: entities,\n      order: order\n    }\n  };\n};\nexport var failFetchingVersus = function failFetchingVersus(error) {\n  return {\n    type: types.VERSUS_FETCHING_FAILED,\n    payload: {\n      error: error\n    }\n  };\n};\nexport var startSharingVersus = function startSharingVersus() {\n  return {\n    type: types.VERSUS_SHARE_STARTED\n  };\n};\nexport var completeSharingVersus = function completeSharingVersus() {\n  return {\n    type: types.VERSUS_SHARE_COMPLETED\n  };\n};\nexport var failSharingVersus = function failSharingVersus(error) {\n  return {\n    type: types.VERSUS_SHARE_FAILED,\n    payload: {\n      error: error\n    }\n  };\n};\nexport var startVoteVersus = function startVoteVersus(direction, id) {\n  return {\n    type: types.VERSUS_VOTE_STARTED,\n    payload: {\n      winner: direction,\n      versus: id\n    }\n  };\n};\nexport var completeVoteVersus = function completeVoteVersus() {\n  return {\n    type: types.VERSUS_VOTE_COMPLETED\n  };\n};\nexport var failVoteVersus = function failVoteVersus(error) {\n  return {\n    type: types.VERSUS_VOTE_FAILED,\n    payload: {\n      error: error\n    }\n  };\n};\nexport var setNull = function setNull() {\n  return {\n    type: types.setNull\n  };\n};\nexport var setNull_toProps = function setNull_toProps() {\n  return {\n    type: NULL_SETTED\n  };\n};","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/src/actions/versus.js"],"names":["types","NULL_SETTED","startFetchingVersus","type","VERSUS_FETCHING_STARTED","completeFetchingVersus","entities","order","VERSUS_FETCHING_COMPLETED","payload","failFetchingVersus","error","VERSUS_FETCHING_FAILED","startSharingVersus","VERSUS_SHARE_STARTED","completeSharingVersus","VERSUS_SHARE_COMPLETED","failSharingVersus","VERSUS_SHARE_FAILED","startVoteVersus","direction","id","VERSUS_VOTE_STARTED","winner","versus","completeVoteVersus","VERSUS_VOTE_COMPLETED","failVoteVersus","VERSUS_VOTE_FAILED","setNull","setNull_toProps"],"mappings":"AAAA,OAAO,KAAKA,KAAZ;AACA,SAASC,WAAT;AAEA,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB;AAAA,SAAO;AACtCC,IAAAA,IAAI,EAAEH,KAAK,CAACI;AAD0B,GAAP;AAAA,CAA5B;AAIP,OAAO,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,QAAD,EAAWC,KAAX;AAAA,SAAsB;AACxDJ,IAAAA,IAAI,EAAEH,KAAK,CAACQ,yBAD4C;AAExDC,IAAAA,OAAO,EAAE;AACLH,MAAAA,QAAQ,EAARA,QADK;AAELC,MAAAA,KAAK,EAALA;AAFK;AAF+C,GAAtB;AAAA,CAA/B;AAQP,OAAO,IAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,KAAK;AAAA,SAAK;AACxCR,IAAAA,IAAI,EAAEH,KAAK,CAACY,sBAD4B;AAExCH,IAAAA,OAAO,EAAE;AACLE,MAAAA,KAAK,EAALA;AADK;AAF+B,GAAL;AAAA,CAAhC;AAOP,OAAO,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,SAAO;AACrCV,IAAAA,IAAI,EAAEH,KAAK,CAACc;AADyB,GAAP;AAAA,CAA3B;AAIP,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB;AAAA,SAAO;AACxCZ,IAAAA,IAAI,EAAEH,KAAK,CAACgB;AAD4B,GAAP;AAAA,CAA9B;AAIP,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAN,KAAK;AAAA,SAAK;AACvCR,IAAAA,IAAI,EAAEH,KAAK,CAACkB,mBAD2B;AAEvCT,IAAAA,OAAO,EAAE;AACLE,MAAAA,KAAK,EAALA;AADK;AAF8B,GAAL;AAAA,CAA/B;AAOP,OAAO,IAAMQ,eAAe,GAAG,SAAlBA,eAAkB,CAACC,SAAD,EAAWC,EAAX;AAAA,SAAmB;AAC9ClB,IAAAA,IAAI,EAAEH,KAAK,CAACsB,mBADkC;AAE9Cb,IAAAA,OAAO,EAAC;AACJc,MAAAA,MAAM,EAAEH,SADJ;AAEJI,MAAAA,MAAM,EAAEH;AAFJ;AAFsC,GAAnB;AAAA,CAAxB;AAQP,OAAO,IAAMI,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,SAAO;AACrCtB,IAAAA,IAAI,EAAEH,KAAK,CAAC0B;AADyB,GAAP;AAAA,CAA3B;AAIP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAhB,KAAK;AAAA,SAAK;AACpCR,IAAAA,IAAI,EAAEH,KAAK,CAAC4B,kBADwB;AAEpCnB,IAAAA,OAAO,EAAE;AACLE,MAAAA,KAAK,EAALA;AADK;AAF2B,GAAL;AAAA,CAA5B;AAOP,OAAO,IAAMkB,OAAO,GAAG,SAAVA,OAAU;AAAA,SAAO;AAC1B1B,IAAAA,IAAI,EAAEH,KAAK,CAAC6B;AADc,GAAP;AAAA,CAAhB;AAIP,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,SAAO;AAClC3B,IAAAA,IAAI,EAAEF;AAD4B,GAAP;AAAA,CAAxB","sourcesContent":["import * as types from '../types/versus'\nimport { NULL_SETTED } from '../types/comment';\n\nexport const startFetchingVersus = () => ({\n    type: types.VERSUS_FETCHING_STARTED,\n  });\n\nexport const completeFetchingVersus = (entities, order) => ({\n    type: types.VERSUS_FETCHING_COMPLETED,\n    payload: {\n        entities,\n        order,\n        },\n    });\n\nexport const failFetchingVersus = error => ({\n    type: types.VERSUS_FETCHING_FAILED,\n    payload: {\n        error,\n        },\n    });\n\nexport const startSharingVersus = () => ({\n    type: types.VERSUS_SHARE_STARTED,\n    });\n\nexport const completeSharingVersus = () => ({\n    type: types.VERSUS_SHARE_COMPLETED,\n    });\n\nexport const failSharingVersus = error => ({\n    type: types.VERSUS_SHARE_FAILED,\n    payload: {\n        error,\n        },\n    });\n\nexport const startVoteVersus = (direction,id) => ({\n    type: types.VERSUS_VOTE_STARTED,\n    payload:{\n        winner: direction,\n        versus: id\n    },\n    });\n\nexport const completeVoteVersus = () => ({\n    type: types.VERSUS_VOTE_COMPLETED,\n    });\n\nexport const failVoteVersus = error => ({\n    type: types.VERSUS_VOTE_FAILED,\n    payload: {\n        error,\n        },\n    });\n\nexport const setNull = () => ({\n    type: types.setNull,\n})\n\nexport const setNull_toProps = () => ({\n    type: NULL_SETTED\n})"]},"metadata":{},"sourceType":"module"}