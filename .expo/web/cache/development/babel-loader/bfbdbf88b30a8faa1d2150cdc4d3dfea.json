{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/thecoder/Documentos/votark/votark/src/components/Search/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { connect } from 'react-redux';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport * as selectors from \"../../reducers\";\nimport React, { useEffect, useState } from 'react';\nimport styles from \"./styles\";\nimport { URL, STATIC_URL } from \"../../../configuration\";\nimport { Actions } from 'react-native-router-flux';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { colors } from \"../../../configuration\";\nimport * as actions from \"../../actions/search\";\nimport { ScrollView } from 'react-native-gesture-handler';\nimport NavBar from \"../NavBar\";\nimport TokenRefresh from \"../TokenRefresh\";\nimport { startFetchPost } from \"../../actions/post\";\nimport { startFetchTopic, selectTopic } from \"../../actions/topic\";\nimport Posts from \"../Posts\";\n\nvar Search = function Search(_ref) {\n  var search = _ref.search,\n      users = _ref.users,\n      hashtags = _ref.hashtags,\n      isFetchingHash = _ref.isFetchingHash,\n      isFetchingUsers = _ref.isFetchingUsers,\n      hashError = _ref.hashError,\n      userError = _ref.userError,\n      fetch = _ref.fetch,\n      posts = _ref.posts,\n      topics = _ref.topics,\n      error = _ref.error,\n      select = _ref.select;\n  useEffect(function () {\n    var interval = setInterval(fetch, 1000);\n    return function () {\n      clearInterval(interval);\n    };\n  }, []);\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      query = _useState2[0],\n      changeQuery = _useState2[1];\n\n  var changeQueryMiddleware = function changeQueryMiddleware(query) {\n    changeQuery(query);\n    search(query);\n  };\n\n  return React.createElement(View, {\n    style: styles.main_container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, React.createElement(LinearGradient, {\n    colors: [colors.primaryB, 'transparent'],\n    style: {\n      width: '100%',\n      height: '100%',\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n      justifyContent: 'flex-start'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: typeof document === 'undefined' ? styles.container : styles.webcontainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    style: styles.icon,\n    source: require(\"../../public/static/icon/search.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    className: \"user\",\n    type: \"text\",\n    placeholder: \"Search\",\n    value: query,\n    onChangeText: changeQueryMiddleware,\n    onChange: function onChange(e) {\n      return changeQueryMiddleware(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }))), query ? React.createElement(ScrollView, {\n    style: typeof document === 'undefined' ? styles.section : styles.websection,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.subtext,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, '@ USERS'), React.createElement(View, {\n    style: styles.elements,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, !userError ? !isFetchingUsers ? React.createElement(View, {\n    style: styles.item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 29\n    }\n  }, users.map(function (user) {\n    return React.createElement(TouchableOpacity, {\n      key: user.id,\n      style: styles.item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 37\n      }\n    }, React.createElement(View, {\n      style: styles.row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 41\n      }\n    }, React.createElement(Image, {\n      style: styles.photo,\n      source: user.picture ? {\n        uri: STATIC_URL + user.picture\n      } : require(\"../../public/static/icon/user.png\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 45\n      }\n    }), React.createElement(Text, {\n      style: styles.element,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 45\n      }\n    }, \"@ \", user.username)), React.createElement(View, {\n      style: styles.bar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 41\n      }\n    }));\n  })) : React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 28\n    }\n  }, 'LOADING...') : React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 27\n    }\n  }, userError)), React.createElement(Text, {\n    style: styles.subtext,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, '# HASHTAGS:'), React.createElement(View, {\n    style: styles.elements,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, !hashError ? !isFetchingHash ? React.createElement(View, {\n    style: styles.item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 29\n    }\n  }, hashtags.map(function (hash) {\n    return React.createElement(TouchableOpacity, {\n      key: hash.id,\n      style: styles.item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 37\n      }\n    }, React.createElement(Text, {\n      style: styles.element,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 41\n      }\n    }, \"# \", hash.content), React.createElement(View, {\n      style: styles.bar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 41\n      }\n    }));\n  })) : React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 28\n    }\n  }, 'LOADING...') : React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 27\n    }\n  }, hashError))) : error ? React.createElement(Text, {\n    style: styles.element,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 34\n    }\n  }, error) : React.createElement(View, {\n    style: styles.section2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  }, React.createElement(ScrollView, {\n    horizontal: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 33\n    }\n  }, topics.map(function (topic) {\n    return React.createElement(TouchableOpacity, {\n      key: topic.id,\n      style: styles.topic,\n      onPress: select(topic.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 45\n      }\n    }, React.createElement(Text, {\n      style: styles.element,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 49\n      }\n    }, topic.name));\n  })), React.createElement(Posts, {\n    posts: posts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 33\n    }\n  }))), React.createElement(NavBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 8\n    }\n  }), React.createElement(TokenRefresh, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default connect(function (state) {\n  return {\n    isAuthenticated: selectors.isAuthenticated(state),\n    users: selectors.getSearchedUsers(state),\n    hashtags: selectors.getSearchedHashtag(state),\n    isFetchingUsers: selectors.getisFetchingSearchedUser(state),\n    isFetchingHash: selectors.getisFetchingHashtag(state),\n    hashError: selectors.getError_Hashtag_search(state),\n    userError: selectors.getError_User_search(state),\n    topics: selectors.getTopics(state),\n    posts: selectors.getPosts(state),\n    error: selectors.getFetchingErrorTopic(state)\n  };\n}, function (dispatch) {\n  return {\n    onClick: function onClick() {},\n    home: function home() {\n      if (typeof document !== 'undefined') {\n        window.location.href = URL;\n      } else {\n        Actions.Home(true);\n      }\n    },\n    search: function search(query) {\n      dispatch(actions.startHashtagFetching(query));\n      dispatch(actions.startUserFetching(query));\n    },\n    dofetch: function dofetch() {\n      dispatch(startFetchPost());\n      dispatch(startFetchTopic());\n    },\n    select: function select(id) {\n      dispatch(selectTopic(id));\n    }\n  };\n}, function (stateToProps, disptachToProps) {\n  if (!stateToProps.isAuthenticated) {\n    if (typeof document !== 'undefined') {\n      window.location.href = URL + 'login/';\n    } else {\n      Actions.Login(true);\n    }\n  }\n\n  return _objectSpread(_objectSpread(_objectSpread({}, disptachToProps), stateToProps), {}, {\n    fetch: function fetch() {\n      if (stateToProps.topics.length === 0 || stateToProps.posts.length === 0) {\n        disptachToProps.dofetch();\n      }\n    }\n  });\n})(Search);","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/src/components/Search/index.js"],"names":["connect","selectors","React","useEffect","useState","styles","URL","STATIC_URL","Actions","LinearGradient","colors","actions","ScrollView","NavBar","TokenRefresh","startFetchPost","startFetchTopic","selectTopic","Posts","Search","search","users","hashtags","isFetchingHash","isFetchingUsers","hashError","userError","fetch","posts","topics","error","select","interval","setInterval","clearInterval","query","changeQuery","changeQueryMiddleware","main_container","primaryB","width","height","flexDirection","alignItems","justifyContent","document","container","webcontainer","row","icon","require","input","e","target","value","section","websection","subtext","elements","item","map","user","id","photo","picture","uri","element","username","bar","hash","content","section2","topic","name","state","isAuthenticated","getSearchedUsers","getSearchedHashtag","getisFetchingSearchedUser","getisFetchingHashtag","getError_Hashtag_search","getError_User_search","getTopics","getPosts","getFetchingErrorTopic","dispatch","onClick","home","window","location","href","Home","startHashtagFetching","startUserFetching","dofetch","stateToProps","disptachToProps","Login","length"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport {Text, View, Image, TouchableOpacity,TextInput } from 'react-native';\nimport * as selectors from '../../reducers'\nimport React, {useEffect,useState} from 'react';\nimport styles from './styles'\nimport { URL, STATIC_URL } from '../../../configuration'\nimport { Actions } from 'react-native-router-flux';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { colors } from '../../../configuration';\nimport * as actions from '../../actions/search';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport NavBar from '../NavBar';\nimport TokenRefresh from '../TokenRefresh';\nimport { startFetchPost } from '../../actions/post';\nimport { startFetchTopic, selectTopic } from '../../actions/topic';\nimport Posts from '../Posts';\n\nconst Search = ({search,users,hashtags,isFetchingHash,isFetchingUsers,hashError,userError,fetch,posts,topics,error,select}) => {\n    \n    useEffect(\n        () => {\n          const interval = setInterval(fetch, 1000);\n          return () => {\n            clearInterval(interval);\n          };\n        },\n        []\n      );\n\n    const [query, changeQuery] = useState('');\n\n    const changeQueryMiddleware = (query) => {\n        changeQuery(query)\n        search(query)\n    }\n\n    return (\n    <View style={styles.main_container}>\n    <LinearGradient\n        colors={[colors.primaryB, 'transparent']}\n        style={{\n            width: '100%',\n            height: '100%',\n            flexDirection: 'column',\n            alignItems: 'flex-start',\n            justifyContent: 'flex-start'\n        }}\n        >\n        <View style={(typeof document==='undefined')?styles.container:styles.webcontainer}>\n            <View style={styles.row}>\n                <Image style={styles.icon} source={require('../../public/static/icon/search.png')} ></Image>\n                <TextInput\n                style={styles.input}\n                className=\"user\"\n                type=\"text\"\n                placeholder=\"Search\"\n                value={query}   \n                onChangeText={changeQueryMiddleware}\n                onChange={e => changeQueryMiddleware(e.target.value)}\n                />\n            </View>\n        </View>\n        {\n            query?(\n                <ScrollView style={(typeof document==='undefined')?styles.section:styles.websection}>\n                    <Text style={styles.subtext}>{'@ USERS'}</Text>\n                    <View style={styles.elements}>\n                        {(!userError)?(!isFetchingUsers)?(\n                            <View style={styles.item}>\n                                {\n                                users.map(user =>\n                                    <TouchableOpacity key={user.id} style={styles.item}>\n                                        <View style={styles.row}>\n                                            <Image style={styles.photo} source={user.picture?{uri: STATIC_URL + user.picture}:require('../../public/static/icon/user.png')}/>\n                                            <Text style={styles.element} >@ { user.username }</Text>\n                                        </View>\n                                        <View style={styles.bar}></View>\n                                    </TouchableOpacity>\n                                    )\n                                }\n                            </View>\n                        ):(<Text>{'LOADING...'}</Text>)\n                        :(<Text>{userError}</Text>)\n                        }\n                    </View>\n                    <Text style={styles.subtext}>{'# HASHTAGS:'}</Text>\n                    <View style={styles.elements}>\n                        {(!hashError)?((!isFetchingHash)?(\n                            <View style={styles.item}>\n                                {\n                                hashtags.map(hash =>\n                                    <TouchableOpacity key={hash.id} style={styles.item}>\n                                        <Text style={styles.element} ># {hash.content}</Text>\n                                        <View style={styles.bar}></View>\n                                    </TouchableOpacity>\n                                    )\n                                }\n                            </View>\n                        ):(<Text>{'LOADING...'}</Text>))\n                        :(<Text>{hashError}</Text>)\n                        }\n                    </View>\n                </ScrollView>):(\n                        (error)?(<Text style={styles.element} >{error}</Text>):(                    \n                            <View style={styles.section2}>\n                                \n                                <ScrollView horizontal={true}>\n                                        {\n                                        topics.map(topic =>\n                                            <TouchableOpacity key={topic.id} style={styles.topic} onPress={select(topic.id)}>\n                                                <Text style={styles.element} >{topic.name}</Text>\n                                            </TouchableOpacity>\n                                            )\n                                        }\n                                </ScrollView>\n                                <Posts posts={posts}></Posts>\n                            </View>\n                        )\n                )\n        }\n        </LinearGradient>\n       <NavBar/>\n      <TokenRefresh/>\n    </View>\n)};\n\nexport default connect(\n  state => ({\n    isAuthenticated: selectors.isAuthenticated(state),\n    users: selectors.getSearchedUsers(state),\n    hashtags: selectors.getSearchedHashtag(state),\n    isFetchingUsers: selectors.getisFetchingSearchedUser(state),\n    isFetchingHash: selectors.getisFetchingHashtag(state),\n    hashError: selectors.getError_Hashtag_search(state),\n    userError: selectors.getError_User_search(state),\n    topics: selectors.getTopics(state),\n    posts: selectors.getPosts(state),\n    error : selectors.getFetchingErrorTopic(state),\n  }),\n  dispatch => ({\n      onClick(){\n        \n      },\n      home(){\n        if(typeof document !== 'undefined'){\n            window.location.href = URL\n          }\n          else{\n            Actions.Home(true)\n          }\n      },\n      search(query){\n        dispatch(actions.startHashtagFetching(query))\n        dispatch(actions.startUserFetching(query))\n      },\n    dofetch(){\n        dispatch(startFetchPost())\n        dispatch(startFetchTopic())\n      },\n    select(id){\n        dispatch(selectTopic(id))\n    }\n      \n  }),\n  (stateToProps,disptachToProps) => {\n    if(!stateToProps.isAuthenticated){\n      if(typeof document !== 'undefined'){\n        window.location.href = URL+'login/'\n      }\n      else{\n        Actions.Login(true)\n      }\n    }\n    return ({...disptachToProps,\n        ...stateToProps,\n        fetch(){\n            if(stateToProps.topics.length===0 || stateToProps.posts.length===0){\n                disptachToProps.dofetch()\n            }\n        }\n    })\n  },\n)(Search);\n"]},"metadata":{},"sourceType":"module"}