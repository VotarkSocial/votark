{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _marked = _regeneratorRuntime.mark(addingPost),\n    _marked2 = _regeneratorRuntime.mark(watchAddingPost),\n    _marked3 = _regeneratorRuntime.mark(pictureSetted),\n    _marked4 = _regeneratorRuntime.mark(watchPictureSetted);\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { call, takeEvery, put, delay, select } from 'redux-saga/effects';\nimport * as selectors from \"../reducers\";\nimport * as actions from \"../actions/newPost\";\nimport * as types from \"../types/post\";\nimport { API_URL, URL } from \"../../configuration\";\nimport { normalize } from 'normalizr';\nimport { Actions } from 'react-native-router-flux';\nvar API_BASE_URL = API_URL + 'api/v1';\n\nfunction addingPost(action) {\n  var isAuth, user, token, response, error;\n  return _regeneratorRuntime.wrap(function addingPost$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return select(selectors.isAuthenticated);\n\n        case 3:\n          isAuth = _context.sent;\n          _context.next = 6;\n          return select(selectors.getAuthUserID);\n\n        case 6:\n          user = _context.sent;\n\n          if (!isAuth) {\n            _context.next = 29;\n            break;\n          }\n\n          _context.next = 10;\n          return select(selectors.getAuthToken);\n\n        case 10:\n          token = _context.sent;\n          _context.next = 13;\n          return call(fetch, API_BASE_URL + \"/post/\", {\n            method: 'POST',\n            body: JSON.stringify(_objectSpread(_objectSpread({}, action.payload), {}, {\n              user: user\n            })),\n            headers: {\n              'Content-Type': 'multipart/form-data',\n              'Authorization': \"JWT \" + token\n            }\n          });\n\n        case 13:\n          response = _context.sent;\n\n          if (!(response.status === 201)) {\n            _context.next = 26;\n            break;\n          }\n\n          _context.next = 17;\n          return put(actions.completeAddingPost());\n\n        case 17:\n          if (!(typeof document !== 'undefined')) {\n            _context.next = 22;\n            break;\n          }\n\n          _context.next = 20;\n          return window.location.href = URL;\n\n        case 20:\n          _context.next = 24;\n          break;\n\n        case 22:\n          _context.next = 24;\n          return Actions.replace('Home');\n\n        case 24:\n          _context.next = 29;\n          break;\n\n        case 26:\n          _context.next = 28;\n          return response.json();\n\n        case 28:\n          error = _context.sent;\n\n        case 29:\n          _context.next = 36;\n          break;\n\n        case 31:\n          _context.prev = 31;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n          _context.next = 36;\n          return put(actions.failAddingPost('CONNECTION FAILED'));\n\n        case 36:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 31]]);\n}\n\nexport function watchAddingPost() {\n  return _regeneratorRuntime.wrap(function watchAddingPost$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(types.POST_ADDED_STARTED, addingPost);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction pictureSetted(action) {\n  return _regeneratorRuntime.wrap(function pictureSetted$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          if (!(typeof document !== 'undefined')) {\n            _context3.next = 5;\n            break;\n          }\n\n          _context3.next = 3;\n          return window.location.href = URL + 'post/';\n\n        case 3:\n          _context3.next = 7;\n          break;\n\n        case 5:\n          _context3.next = 7;\n          return Actions.replace('Post');\n\n        case 7:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\n\nexport function watchPictureSetted() {\n  return _regeneratorRuntime.wrap(function watchPictureSetted$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeEvery(types.PICTURE_SETTED, pictureSetted);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/src/sagas/newPost.js"],"names":["addingPost","watchAddingPost","pictureSetted","watchPictureSetted","call","takeEvery","put","delay","select","selectors","actions","types","API_URL","URL","normalize","Actions","API_BASE_URL","action","isAuthenticated","isAuth","getAuthUserID","user","getAuthToken","token","fetch","method","body","JSON","stringify","payload","headers","response","status","completeAddingPost","document","window","location","href","replace","json","error","console","log","failAddingPost","POST_ADDED_STARTED","PICTURE_SETTED"],"mappings":"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","sourcesContent":["import {\n    call,\n    takeEvery,\n    put,\n    // race,\n    // all,\n    delay,\n    select,\n  } from 'redux-saga/effects';\n\nimport * as selectors from '../reducers';\nimport * as actions from '../actions/newPost';\nimport * as types from '../types/post';\nimport { API_URL, URL } from '../../configuration';\nimport { normalize } from 'normalizr';\nimport { Actions } from 'react-native-router-flux'\n  \n  const API_BASE_URL =  API_URL + 'api/v1';\n  \n  function* addingPost(action) {\n    try {\n        const isAuth = yield select(selectors.isAuthenticated);\n        const user = yield select(selectors.getAuthUserID)\n        if (isAuth) {\n          const token = yield select(selectors.getAuthToken);\n          const response = yield call(\n            fetch,\n            `${API_BASE_URL}/post/`,\n            {\n              method: 'POST',\n              body: JSON.stringify({...action.payload,user}),\n              headers:{\n                'Content-Type': 'multipart/form-data',\n                'Authorization': `JWT ${token}`,\n              },\n            }\n          );\n          if (response.status === 201) {\n            yield put(actions.completeAddingPost())\n            if(typeof document !== 'undefined'){\n                yield window.location.href = URL\n              }\n              else{\n                yield Actions.replace('Home')\n              }\n          } else {\n            const error= yield response.json();\n            //yield put(actions.failAddingPost(non_field_errors[0]));\n          }\n        }\n      } catch (error) {\n          console.log(error)\n        yield put(actions.failAddingPost('CONNECTION FAILED'));\n      }\n  }\n  \n  export function* watchAddingPost() {\n    yield takeEvery(\n      types.POST_ADDED_STARTED,\n      addingPost,\n    );\n  }\n\n  function* pictureSetted(action) {\n    if(typeof document !== 'undefined'){\n        yield window.location.href = URL+'post/'\n      }\n      else{\n        yield Actions.replace('Post')\n      }\n  }\n  \n  export function* watchPictureSetted() {\n    yield takeEvery(\n      types.PICTURE_SETTED,\n      pictureSetted,\n    );\n  }"]},"metadata":{},"sourceType":"module"}