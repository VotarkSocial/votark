{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar _marked = _regeneratorRuntime.mark(chatFetch),\n    _marked2 = _regeneratorRuntime.mark(watchchatFetch),\n    _marked3 = _regeneratorRuntime.mark(addchat),\n    _marked4 = _regeneratorRuntime.mark(watchchatAddition),\n    _marked5 = _regeneratorRuntime.mark(addUser),\n    _marked6 = _regeneratorRuntime.mark(watchAddUserToChat),\n    _marked7 = _regeneratorRuntime.mark(addAdmin),\n    _marked8 = _regeneratorRuntime.mark(watchAddAdminToChat);\n\nimport { call, takeEvery, put, delay, select } from 'redux-saga/effects';\nimport * as selectors from \"../reducers\";\nimport * as actions from \"../actions/chat\";\nimport * as types from \"../types/chat\";\nimport { API_URL } from \"../../configuration\";\nimport { normalize } from 'normalizr';\nimport * as schemas from \"../schemas/chat\";\nvar API_BASE_URL = API_URL + 'api/v1';\n\nfunction chatFetch(action) {\n  var isAuth, userid, token, response, jsonResult, normalized, _yield$response$json, non_field_errors;\n\n  return _regeneratorRuntime.wrap(function chatFetch$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return select(selectors.isAuthenticated);\n\n        case 3:\n          isAuth = _context.sent;\n          _context.next = 6;\n          return select(selectors.getAuthUserID);\n\n        case 6:\n          userid = _context.sent;\n\n          if (!(isAuth && userid)) {\n            _context.next = 29;\n            break;\n          }\n\n          _context.next = 10;\n          return select(selectors.getAuthToken);\n\n        case 10:\n          token = _context.sent;\n          _context.next = 13;\n          return call(fetch, API_BASE_URL + \"/user/\" + userid + \"/chats/\", {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': \"JWT \" + token\n            }\n          });\n\n        case 13:\n          response = _context.sent;\n\n          if (!(response.status === 200)) {\n            _context.next = 23;\n            break;\n          }\n\n          _context.next = 17;\n          return response.json();\n\n        case 17:\n          jsonResult = _context.sent;\n          normalized = normalize(jsonResult, schemas.chats);\n          _context.next = 21;\n          return put(actions.completeFetchingChats(normalized.entities.chats, normalized.result));\n\n        case 21:\n          _context.next = 29;\n          break;\n\n        case 23:\n          _context.next = 25;\n          return response.json();\n\n        case 25:\n          _yield$response$json = _context.sent;\n          non_field_errors = _yield$response$json.non_field_errors;\n          _context.next = 29;\n          return put(actions.failFetchingChats(non_field_errors[0]));\n\n        case 29:\n          _context.next = 35;\n          break;\n\n        case 31:\n          _context.prev = 31;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 35;\n          return put(actions.failFetchingChats('CONNECTION FAILED'));\n\n        case 35:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 31]]);\n}\n\nexport function watchchatFetch() {\n  return _regeneratorRuntime.wrap(function watchchatFetch$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(types.CHATS_FETCHING_STARTED, chatFetch);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction addchat(action) {\n  var isAuth, token, response, chat;\n  return _regeneratorRuntime.wrap(function addchat$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return select(selectors.isAuthenticated);\n\n        case 3:\n          isAuth = _context3.sent;\n\n          if (!isAuth) {\n            _context3.next = 19;\n            break;\n          }\n\n          _context3.next = 7;\n          return select(selectors.getAuthToken);\n\n        case 7:\n          token = _context3.sent;\n          _context3.next = 10;\n          return call(fetch, API_BASE_URL + \"/chat/\", {\n            method: 'POST',\n            body: JSON.stringify(_objectSpread({}, action.payload)),\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': \"JWT \" + token\n            }\n          });\n\n        case 10:\n          response = _context3.sent;\n\n          if (!(response.status === 201)) {\n            _context3.next = 19;\n            break;\n          }\n\n          _context3.next = 14;\n          return response.json();\n\n        case 14:\n          chat = _context3.sent;\n          _context3.next = 17;\n          return put(actions.completeAddingChat(action.payload.id, chat));\n\n        case 17:\n          _context3.next = 19;\n          break;\n\n        case 19:\n          _context3.next = 23;\n          break;\n\n        case 21:\n          _context3.prev = 21;\n          _context3.t0 = _context3[\"catch\"](0);\n\n        case 23:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 21]]);\n}\n\nexport function watchchatAddition() {\n  return _regeneratorRuntime.wrap(function watchchatAddition$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeEvery(types.CHAT_ADDITION_STARTED, addchat);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction addUser(action) {\n  var isAuth, chatid, token, response, chat;\n  return _regeneratorRuntime.wrap(function addUser$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return select(selectors.isAuthenticated);\n\n        case 3:\n          isAuth = _context5.sent;\n          _context5.next = 6;\n          return select(selectors.getChatSelected);\n\n        case 6:\n          chatid = _context5.sent;\n\n          if (!(isAuth && chatid)) {\n            _context5.next = 22;\n            break;\n          }\n\n          _context5.next = 10;\n          return select(selectors.getAuthToken);\n\n        case 10:\n          token = _context5.sent;\n          _context5.next = 13;\n          return call(fetch, API_BASE_URL + \"/chat/\" + chatid + \"/add/\", {\n            method: 'POST',\n            body: JSON.stringify(_objectSpread({}, action.payload)),\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': \"JWT \" + token\n            }\n          });\n\n        case 13:\n          response = _context5.sent;\n\n          if (!(response.status === 200)) {\n            _context5.next = 22;\n            break;\n          }\n\n          _context5.next = 17;\n          return response.json();\n\n        case 17:\n          chat = _context5.sent;\n          _context5.next = 20;\n          return put(actions.completeAddingUser());\n\n        case 20:\n          _context5.next = 22;\n          break;\n\n        case 22:\n          _context5.next = 26;\n          break;\n\n        case 24:\n          _context5.prev = 24;\n          _context5.t0 = _context5[\"catch\"](0);\n\n        case 26:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 24]]);\n}\n\nexport function watchAddUserToChat() {\n  return _regeneratorRuntime.wrap(function watchAddUserToChat$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeEvery(types.USER_ADDITION_STARTED, addUser);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction addAdmin(action) {\n  var isAuth, chatid, token, response, chat;\n  return _regeneratorRuntime.wrap(function addAdmin$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return select(selectors.isAuthenticated);\n\n        case 3:\n          isAuth = _context7.sent;\n          _context7.next = 6;\n          return select(selectors.getChatSelected);\n\n        case 6:\n          chatid = _context7.sent;\n\n          if (!(isAuth && chatid)) {\n            _context7.next = 22;\n            break;\n          }\n\n          _context7.next = 10;\n          return select(selectors.getAuthToken);\n\n        case 10:\n          token = _context7.sent;\n          _context7.next = 13;\n          return call(fetch, API_BASE_URL + \"/chat/\" + chatid + \"/add_admin/\", {\n            method: 'POST',\n            body: JSON.stringify(_objectSpread({}, action.payload)),\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': \"JWT \" + token\n            }\n          });\n\n        case 13:\n          response = _context7.sent;\n\n          if (!(response.status === 200)) {\n            _context7.next = 22;\n            break;\n          }\n\n          _context7.next = 17;\n          return response.json();\n\n        case 17:\n          chat = _context7.sent;\n          _context7.next = 20;\n          return put(actions.completeAddingAdmin());\n\n        case 20:\n          _context7.next = 22;\n          break;\n\n        case 22:\n          _context7.next = 26;\n          break;\n\n        case 24:\n          _context7.prev = 24;\n          _context7.t0 = _context7[\"catch\"](0);\n\n        case 26:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 24]]);\n}\n\nexport function watchAddAdminToChat() {\n  return _regeneratorRuntime.wrap(function watchAddAdminToChat$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeEvery(types.ADMIN_ADDITION_STARTED, addAdmin);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/src/sagas/chat.js"],"names":["chatFetch","watchchatFetch","addchat","watchchatAddition","addUser","watchAddUserToChat","addAdmin","watchAddAdminToChat","call","takeEvery","put","delay","select","selectors","actions","types","API_URL","normalize","schemas","API_BASE_URL","action","isAuthenticated","isAuth","getAuthUserID","userid","getAuthToken","token","fetch","method","headers","response","status","json","jsonResult","normalized","chats","completeFetchingChats","entities","result","non_field_errors","failFetchingChats","CHATS_FETCHING_STARTED","body","JSON","stringify","payload","chat","completeAddingChat","id","CHAT_ADDITION_STARTED","getChatSelected","chatid","completeAddingUser","USER_ADDITION_STARTED","completeAddingAdmin","ADMIN_ADDITION_STARTED"],"mappings":"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","sourcesContent":["import {\n    call,\n    takeEvery,\n    put,\n    // race,\n    // all,\n    delay,\n    select,\n  } from 'redux-saga/effects';\n\nimport * as selectors from '../reducers';\nimport * as actions from '../actions/chat';\nimport * as types from '../types/chat';\nimport { API_URL } from '../../configuration';\nimport { normalize } from 'normalizr';\nimport * as schemas from '../schemas/chat';\n  \n  const API_BASE_URL =  API_URL + 'api/v1';\n  \n  \n  function* chatFetch(action) {\n    try {\n        const isAuth = yield select(selectors.isAuthenticated);\n        const userid = yield select(selectors.getAuthUserID)\n        if (isAuth && userid) {\n          const token = yield select(selectors.getAuthToken);\n          const response = yield call(\n            fetch,\n            `${API_BASE_URL}/user/${userid}/chats/`,\n            {\n              method: 'GET',\n              headers:{\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${token}`,\n              },\n            }\n          );\n          if (response.status === 200) {\n            const jsonResult = yield response.json();\n            const normalized = normalize(jsonResult, schemas.chats);\n            yield put(\n            actions.completeFetchingChats(\n                normalized.entities.chats,\n                normalized.result\n            ),\n            );\n          } else {\n            const { non_field_errors } = yield response.json();\n            yield put(actions.failFetchingChats(non_field_errors[0]));\n          }\n        }\n      } catch (error) {\n        yield put(actions.failFetchingChats('CONNECTION FAILED'));\n      }\n  }\n  \n  export function* watchchatFetch() {\n    yield takeEvery(\n      types.CHATS_FETCHING_STARTED,\n      chatFetch,\n    );\n  }\n\nfunction* addchat(action) {\n    try {\n      const isAuth = yield select(selectors.isAuthenticated);   \n  \n      if (isAuth) {\n        const token = yield select(selectors.getAuthToken);\n        const response = yield call(\n          fetch,\n          `${API_BASE_URL}/chat/`,\n          {\n            method: 'POST',\n            body: JSON.stringify({...action.payload}),\n            headers:{\n              'Content-Type': 'application/json',\n              'Authorization': `JWT ${token}`,\n            },\n          }\n        );\n  \n        if (response.status === 201) {\n          const chat = yield response.json();\n          yield put(\n            actions.completeAddingChat(\n              action.payload.id,\n              chat,\n            ),\n          );\n        } else {\n          // const { non_field_errors } = yield response.json();\n          // yield put(actions.failLogin(non_field_errors[0]));\n        }\n      }\n    } catch (error) {\n      // yield put(actions.failLogin(''));\n    }\n  }\n\n  export function* watchchatAddition() {\n    yield takeEvery(\n      types.CHAT_ADDITION_STARTED,\n      addchat,\n    );\n  }\n\n\n\n\nfunction* addUser(action) {\n  try {\n    const isAuth = yield select(selectors.isAuthenticated);   \n    const chatid = yield select(selectors.getChatSelected);\n    if (isAuth && chatid) {\n      const token = yield select(selectors.getAuthToken);\n      const response = yield call(\n        fetch,\n        `${API_BASE_URL}/chat/${chatid}/add/`,\n        {\n          method: 'POST',\n          body: JSON.stringify({...action.payload}),\n          headers:{\n            'Content-Type': 'application/json',\n            'Authorization': `JWT ${token}`,\n          },\n        }\n      );\n\n      if (response.status === 200) {\n        const chat = yield response.json();\n        yield put(\n          actions.completeAddingUser(),\n        );\n      } else {\n        // const { non_field_errors } = yield response.json();\n        // yield put(actions.failLogin(non_field_errors[0]));\n      }\n    }\n  } catch (error) {\n    // yield put(actions.failLogin(''));\n  }\n}\n\nexport function* watchAddUserToChat() {\n  yield takeEvery(\n    types.USER_ADDITION_STARTED,\n    addUser,\n  );\n}\n\nfunction* addAdmin(action) {\n  try {\n    const isAuth = yield select(selectors.isAuthenticated);   \n    const chatid = yield select(selectors.getChatSelected);\n    if (isAuth && chatid) {\n      const token = yield select(selectors.getAuthToken);\n      const response = yield call(\n        fetch,\n        `${API_BASE_URL}/chat/${chatid}/add_admin/`,\n        {\n          method: 'POST',\n          body: JSON.stringify({...action.payload}),\n          headers:{\n            'Content-Type': 'application/json',\n            'Authorization': `JWT ${token}`,\n          },\n        }\n      );\n\n      if (response.status === 200) {\n        const chat = yield response.json();\n        yield put(\n          actions.completeAddingAdmin(),\n        );\n      } else {\n        // const { non_field_errors } = yield response.json();\n        // yield put(actions.failLogin(non_field_errors[0]));\n      }\n    }\n  } catch (error) {\n    // yield put(actions.failLogin(''));\n  }\n}\n\nexport function* watchAddAdminToChat() {\n  yield takeEvery(\n    types.ADMIN_ADDITION_STARTED,\n    addAdmin,\n  );\n}"]},"metadata":{},"sourceType":"module"}