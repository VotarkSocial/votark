{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Event from \"./Event\";\n\nvar ProgressEvent = function (_Event) {\n  _inherits(ProgressEvent, _Event);\n\n  var _super = _createSuper(ProgressEvent);\n\n  function ProgressEvent(lengthComputable, loaded, total) {\n    var _this;\n\n    _classCallCheck(this, ProgressEvent);\n\n    _this = _super.call(this);\n    _this._lengthComputable = false;\n    _this._loaded = -1;\n    _this._total = -1;\n    _this._lengthComputable = lengthComputable;\n    _this._loaded = loaded;\n    _this._total = total;\n    return _this;\n  }\n\n  _createClass(ProgressEvent, [{\n    key: \"lengthComputable\",\n    get: function get() {\n      return this._lengthComputable;\n    }\n  }, {\n    key: \"loaded\",\n    get: function get() {\n      return this._loaded;\n    }\n  }, {\n    key: \"total\",\n    get: function get() {\n      return this._total;\n    }\n  }]);\n\n  return ProgressEvent;\n}(Event);\n\nexport { ProgressEvent as default };","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/node_modules/react-native-fetch-blob/polyfill/ProgressEvent.js"],"names":["Event","ProgressEvent","lengthComputable","loaded","total","_lengthComputable","_loaded","_total"],"mappings":";;;;;;;;;;AAIA,OAAOA,KAAP;;IAEqBC,a;;;;;AAMnB,yBAAYC,gBAAZ,EAA8BC,MAA9B,EAAsCC,KAAtC,EAA6C;AAAA;;AAAA;;AAC3C;AAD2C,UAJ7CC,iBAI6C,GAJf,KAIe;AAAA,UAH7CC,OAG6C,GAH1B,CAAC,CAGyB;AAAA,UAF7CC,MAE6C,GAF3B,CAAC,CAE0B;AAE3C,UAAKF,iBAAL,GAAyBH,gBAAzB;AACA,UAAKI,OAAL,GAAeH,MAAf;AACA,UAAKI,MAAL,GAAcH,KAAd;AAJ2C;AAK5C;;;;wBAEsB;AACrB,aAAO,KAAKC,iBAAZ;AACD;;;wBAEY;AACX,aAAO,KAAKC,OAAZ;AACD;;;wBAEW;AACV,aAAO,KAAKC,MAAZ;AACD;;;;EAvBwCP,K;;SAAtBC,a","sourcesContent":["// Copyright 2016 wkh237@github. All rights reserved.\n// Use of this source code is governed by a MIT-style license that can be\n// found in the LICENSE file.\n\nimport Event from './Event'\n\nexport default class ProgressEvent extends Event {\n\n  _lengthComputable : boolean = false;\n  _loaded : number = -1;\n  _total : numver = -1;\n\n  constructor(lengthComputable, loaded, total) {\n    super()\n    this._lengthComputable = lengthComputable;\n    this._loaded = loaded\n    this._total = total\n  }\n\n  get lengthComputable() {\n    return this._lengthComputable\n  }\n\n  get loaded() {\n    return this._loaded\n  }\n\n  get total() {\n    return this._total\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}