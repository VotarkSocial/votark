{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/thecoder/Documentos/votark/votark/src/components/Search/index.js\";\nimport { connect } from 'react-redux';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as selectors from \"../../reducers\";\nimport React from 'react';\nimport styles from \"./styles\";\nimport { URL } from \"../../../configuration\";\nimport { Actions } from 'react-native-router-flux';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { colors } from \"../../../configuration\";\nimport * as actions from \"../../actions/search\";\nimport { ScrollView } from 'react-native-gesture-handler';\n\nvar Search = function Search(_ref) {\n  var _onClick = _ref.onClick,\n      home = _ref.home,\n      search = _ref.search,\n      getHistory = _ref.getHistory,\n      users = _ref.users,\n      hashtags = _ref.hashtags,\n      isFetchingHash = _ref.isFetchingHash,\n      isFetchingUsers = _ref.isFetchingUsers,\n      hashError = _ref.hashError,\n      userError = _ref.userError;\n  useEffect(getHistory);\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      query = _useState2[0],\n      changeQuery = _useState2[1];\n\n  var changeQueryMiddleware = function changeQueryMiddleware(query) {\n    changeQuery(query);\n    search(query);\n  };\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: typeof document === 'undefined' ? styles.container : styles.webcontainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.row,\n    onClick: function onClick() {\n      return home;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: styles.logo,\n    source: require(\"../../public/static/img/logo.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    className: \"user\",\n    type: \"text\",\n    placeholder: \"Search\",\n    value: username,\n    onChangeText: query,\n    onChange: function onChange(e) {\n      return changeQueryMiddleware(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: styles.row,\n    onClick: function onClick() {\n      return _onClick;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: styles.icon,\n    source: require(\"../../public/static/icon/notification.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }))), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, 'HASHTAGS #'), !hashError ? !isFetchingHash ? hashtags.length() !== 0 ? React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, hashtags.map(function (hash) {\n    React.createElement(TouchableOpacity, {\n      key: hash.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 29\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 33\n      }\n    }, \" \", hash.content, \" \"));\n  })) : React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, 'NO RESULTS') : React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 16\n    }\n  }, 'LOADING') : React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, hashError), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, 'USERS @'), !userError ? !isFetchingUsers ? users.length() !== 0 ? React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, users.map(function (user) {\n    React.createElement(TouchableOpacity, {\n      key: user.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 33\n      }\n    }, \" \", user.username, \" \"));\n  })) : React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, 'NO RESULTS') : React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 16\n    }\n  }, 'LOADING') : React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, userError));\n};\n\nexport default connect(function (state) {\n  return {\n    users: selectors.getSearchedUsers(state),\n    hashtags: selectors.getSearchedHashtag(state),\n    isFetchingUsers: selectors.getisFetchingSearchedUser(state),\n    isFetchingHash: selectors.getisFetchingHashtag(state),\n    hashError: selectors.getError_Hashtag_search(state),\n    userError: selectors.getError_User_search(state)\n  };\n}, function (dispatch) {\n  return {\n    onClick: function onClick() {},\n    home: function home() {\n      if (typeof document !== 'undefined') {\n        window.location.href = URL;\n      } else {\n        Actions.Home(true);\n      }\n    },\n    search: function search(query) {\n      dispatch(actions.startHashtagFetching(query));\n      dispatch(actions.startUserFetching(query));\n    },\n    getHistory: function getHistory() {\n      dispatch(actions.startHashtagHistoryFetching());\n      dispatch(actions.startUserHistoryFetching());\n    }\n  };\n})(Search);","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/src/components/Search/index.js"],"names":["connect","selectors","React","styles","URL","Actions","LinearGradient","colors","actions","ScrollView","Search","onClick","home","search","getHistory","users","hashtags","isFetchingHash","isFetchingUsers","hashError","userError","useEffect","useState","query","changeQuery","changeQueryMiddleware","document","container","webcontainer","row","logo","require","input","username","e","target","value","icon","length","map","hash","id","content","user","state","getSearchedUsers","getSearchedHashtag","getisFetchingSearchedUser","getisFetchingHashtag","getError_Hashtag_search","getError_User_search","dispatch","window","location","href","Home","startHashtagFetching","startUserFetching","startHashtagHistoryFetching","startUserHistoryFetching"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport {Text, View, Image, TouchableOpacity } from 'react-native';\nimport * as selectors from '../../reducers'\nimport React from 'react';\nimport styles from './styles'\nimport { URL } from '../../../configuration'\nimport { Actions } from 'react-native-router-flux';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { colors } from '../../../configuration';\nimport * as actions from '../../actions/search';\nimport { ScrollView } from 'react-native-gesture-handler';\n\nconst Search = ({onClick,home,search,getHistory,users,hashtags,isFetchingHash,isFetchingUsers,hashError,userError}) => {\n    useEffect(getHistory)\n\n    const [query, changeQuery] = useState('');\n\n    const changeQueryMiddleware = (query) => {\n        changeQuery(query)\n        search(query)\n    }\n\n    return (\n    <View>\n    <View style={(typeof document==='undefined')?styles.container:styles.webcontainer}>\n        <TouchableOpacity style={styles.row} onClick={() => home}>\n            <Image style={styles.logo} source={require('../../public/static/img/logo.png')} ></Image>\n        </TouchableOpacity>  \n        <View style={styles.row}>\n            <TextInput\n            style={styles.input}\n            className=\"user\"\n            type=\"text\"\n            placeholder=\"Search\"\n            value={username}   \n            onChangeText={query}\n            onChange={e => changeQueryMiddleware(e.target.value)}\n            />\n        </View>\n        <TouchableOpacity style={styles.row} onClick={() => onClick}>\n            <Image style={styles.icon} source={require('../../public/static/icon/notification.png')} />\n        </TouchableOpacity>\n    </View>\n        <Text>{'HASHTAGS #'}</Text>\n            {(!hashError)?(!isFetchingHash)?(hashtags.length()!==0)?(\n                <ScrollView>\n                    {\n                        hashtags.map(hash=>{\n                            <TouchableOpacity key={hash.id}>\n                                <Text> {hash.content} </Text>\n                            </TouchableOpacity>\n                        })\n                    }\n                </ScrollView>\n            ):(\n                <Text>{'NO RESULTS'}</Text>\n            ):(<Text>{'LOADING'}</Text>)\n            :(<Text>{hashError}</Text>)\n            }\n        <Text>{'USERS @'}</Text>\n            {(!userError)?(!isFetchingUsers)?(users.length()!==0)?(\n                <ScrollView>\n                    {\n                        users.map(user=>{\n                            <TouchableOpacity key={user.id}>\n                                <Text> {user.username} </Text>\n                            </TouchableOpacity>\n                        })\n                    }\n                </ScrollView>\n            ):(\n                <Text>{'NO RESULTS'}</Text>\n            ):(<Text>{'LOADING'}</Text>)\n            :(<Text>{userError}</Text>)\n            }\n    </View>\n)};\n\nexport default connect(\n  state => ({\n    users: selectors.getSearchedUsers(state),\n    hashtags: selectors.getSearchedHashtag(state),\n    isFetchingUsers: selectors.getisFetchingSearchedUser(state),\n    isFetchingHash: selectors.getisFetchingHashtag(state),\n    hashError: selectors.getError_Hashtag_search(state),\n    userError: selectors.getError_User_search(state),\n  }),\n  dispatch => ({\n      onClick(){\n        \n      },\n      home(){\n        if(typeof document !== 'undefined'){\n            window.location.href = URL\n          }\n          else{\n            Actions.Home(true)\n          }\n      },\n      search(query){\n        dispatch(actions.startHashtagFetching(query))\n        dispatch(actions.startUserFetching(query))\n      },\n      getHistory(){\n          dispatch(actions.startHashtagHistoryFetching())\n          dispatch(actions.startUserHistoryFetching())\n      }\n      \n  }),\n)(Search);\n"]},"metadata":{},"sourceType":"module"}