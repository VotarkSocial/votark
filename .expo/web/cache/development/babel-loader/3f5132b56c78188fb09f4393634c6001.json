{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = _regeneratorRuntime.mark(login),\n    _marked2 = _regeneratorRuntime.mark(watchLoginStarted),\n    _marked3 = _regeneratorRuntime.mark(refreshToken),\n    _marked4 = _regeneratorRuntime.mark(watchRefreshTokenStarted),\n    _marked5 = _regeneratorRuntime.mark(signup),\n    _marked6 = _regeneratorRuntime.mark(watchSignupStarted),\n    _marked7 = _regeneratorRuntime.mark(reset),\n    _marked8 = _regeneratorRuntime.mark(watchResetPassword);\n\nimport { call, takeEvery, put, delay, select } from 'redux-saga/effects';\nimport * as selectors from \"../reducers\";\nimport * as actions from \"../actions/auth\";\nimport * as types from \"../types/auth\";\nimport { API_URL } from \"../../configuration\";\nvar API_BASE_URL = API_URL + 'api/v1';\n\nfunction login(action) {\n  var response, _yield$response$json, token, _yield$response$json2, non_field_errors;\n\n  return _regeneratorRuntime.wrap(function login$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(fetch, API_BASE_URL + \"/token-auth/\", {\n            method: 'POST',\n            body: JSON.stringify(action.payload),\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          });\n\n        case 3:\n          response = _context.sent;\n\n          if (!(response.status === 200)) {\n            _context.next = 13;\n            break;\n          }\n\n          _context.next = 7;\n          return response.json();\n\n        case 7:\n          _yield$response$json = _context.sent;\n          token = _yield$response$json.token;\n          _context.next = 11;\n          return put(actions.completeLogin(token));\n\n        case 11:\n          _context.next = 19;\n          break;\n\n        case 13:\n          _context.next = 15;\n          return response.json();\n\n        case 15:\n          _yield$response$json2 = _context.sent;\n          non_field_errors = _yield$response$json2.non_field_errors;\n          _context.next = 19;\n          return put(actions.failLogin(non_field_errors[0]));\n\n        case 19:\n          _context.next = 25;\n          break;\n\n        case 21:\n          _context.prev = 21;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 25;\n          return put(actions.failLogin('NETWORK ERROR'));\n\n        case 25:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 21]]);\n}\n\nexport function watchLoginStarted() {\n  return _regeneratorRuntime.wrap(function watchLoginStarted$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(types.AUTHENTICATION_STARTED, login);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction refreshToken(action) {\n  var expiration, now, token, response, jResponse, _yield$response$json3, non_field_errors;\n\n  return _regeneratorRuntime.wrap(function refreshToken$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return select(selectors.getAuthExpiration);\n\n        case 2:\n          expiration = _context3.sent;\n          now = parseInt(new Date().getTime() / 1000);\n\n          if (!(expiration - now < 3600)) {\n            _context3.next = 32;\n            break;\n          }\n\n          _context3.prev = 5;\n          _context3.next = 8;\n          return select(selectors.getAuthToken);\n\n        case 8:\n          token = _context3.sent;\n          _context3.next = 11;\n          return call(fetch, API_BASE_URL + \"/token-refresh/\", {\n            method: 'POST',\n            body: JSON.stringify({\n              token: token\n            }),\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          });\n\n        case 11:\n          response = _context3.sent;\n\n          if (!(response.status === 200)) {\n            _context3.next = 20;\n            break;\n          }\n\n          _context3.next = 15;\n          return response.json();\n\n        case 15:\n          jResponse = _context3.sent;\n          _context3.next = 18;\n          return put(actions.completeTokenRefresh(jResponse.token));\n\n        case 18:\n          _context3.next = 26;\n          break;\n\n        case 20:\n          _context3.next = 22;\n          return response.json();\n\n        case 22:\n          _yield$response$json3 = _context3.sent;\n          non_field_errors = _yield$response$json3.non_field_errors;\n          _context3.next = 26;\n          return put(actions.failTokenRefresh(non_field_errors[0]));\n\n        case 26:\n          _context3.next = 32;\n          break;\n\n        case 28:\n          _context3.prev = 28;\n          _context3.t0 = _context3[\"catch\"](5);\n          _context3.next = 32;\n          return put(actions.failTokenRefresh('NETWORK ERROR'));\n\n        case 32:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[5, 28]]);\n}\n\nexport function watchRefreshTokenStarted() {\n  return _regeneratorRuntime.wrap(function watchRefreshTokenStarted$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeEvery(types.TOKEN_REFRESH_STARTED, refreshToken);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction signup(action) {\n  var response, _yield$response$json4, token, _yield$response$json5, username;\n\n  return _regeneratorRuntime.wrap(function signup$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(fetch, API_BASE_URL + \"/user/\", {\n            method: 'POST',\n            body: JSON.stringify(action.payload),\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          });\n\n        case 3:\n          response = _context5.sent;\n\n          if (!(response.status === 201)) {\n            _context5.next = 15;\n            break;\n          }\n\n          _context5.next = 7;\n          return response.json();\n\n        case 7:\n          _yield$response$json4 = _context5.sent;\n          token = _yield$response$json4.token;\n          _context5.next = 11;\n          return put(actions.completeRegistration());\n\n        case 11:\n          _context5.next = 13;\n          return put(actions.startLogin(action.payload.username, action.payload.password));\n\n        case 13:\n          _context5.next = 21;\n          break;\n\n        case 15:\n          _context5.next = 17;\n          return response.json();\n\n        case 17:\n          _yield$response$json5 = _context5.sent;\n          username = _yield$response$json5.username;\n          _context5.next = 21;\n          return put(actions.failRegistration(username[0]));\n\n        case 21:\n          _context5.next = 27;\n          break;\n\n        case 23:\n          _context5.prev = 23;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 27;\n          return put(actions.failRegistration('NETWORK ERROR'));\n\n        case 27:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 23]]);\n}\n\nexport function watchSignupStarted() {\n  return _regeneratorRuntime.wrap(function watchSignupStarted$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeEvery(types.REGISTRATION_STARTED, signup);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction reset(action) {\n  var response, _yield$response$json6, token, _yield$response$json7, detail;\n\n  return _regeneratorRuntime.wrap(function reset$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          console.log(\"herjk\");\n          _context7.next = 4;\n          return call(fetch, API_BASE_URL + \"/user/restore/\", {\n            method: 'POST',\n            body: JSON.stringify(action.payload),\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          });\n\n        case 4:\n          response = _context7.sent;\n\n          if (!(response.status === 200)) {\n            _context7.next = 14;\n            break;\n          }\n\n          _context7.next = 8;\n          return response.json();\n\n        case 8:\n          _yield$response$json6 = _context7.sent;\n          token = _yield$response$json6.token;\n          _context7.next = 12;\n          return put(actions.completeRegistration());\n\n        case 12:\n          _context7.next = 20;\n          break;\n\n        case 14:\n          _context7.next = 16;\n          return response.json();\n\n        case 16:\n          _yield$response$json7 = _context7.sent;\n          detail = _yield$response$json7.detail;\n          _context7.next = 20;\n          return put(actions.failRegistration(detail[0]));\n\n        case 20:\n          _context7.next = 26;\n          break;\n\n        case 22:\n          _context7.prev = 22;\n          _context7.t0 = _context7[\"catch\"](0);\n          _context7.next = 26;\n          return put(actions.failRegistration('NETWORK ERROR'));\n\n        case 26:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 22]]);\n}\n\nexport function watchResetPassword() {\n  return _regeneratorRuntime.wrap(function watchResetPassword$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeEvery(types.PASSWORD_RESET_PROCESS_STARTED, reset);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/src/sagas/auth.js"],"names":["login","watchLoginStarted","refreshToken","watchRefreshTokenStarted","signup","watchSignupStarted","reset","watchResetPassword","call","takeEvery","put","delay","select","selectors","actions","types","API_URL","API_BASE_URL","action","fetch","method","body","JSON","stringify","payload","headers","response","status","json","token","completeLogin","non_field_errors","failLogin","AUTHENTICATION_STARTED","getAuthExpiration","expiration","now","parseInt","Date","getTime","getAuthToken","jResponse","completeTokenRefresh","failTokenRefresh","TOKEN_REFRESH_STARTED","completeRegistration","startLogin","username","password","failRegistration","REGISTRATION_STARTED","console","log","detail","PASSWORD_RESET_PROCESS_STARTED"],"mappings":"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","sourcesContent":["import {\n    call,\n    takeEvery,\n    put,\n    // race,\n    // all,\n    delay,\n    select,\n  } from 'redux-saga/effects';\n  \n  import * as selectors from '../reducers';\n  import * as actions from '../actions/auth';\n  import * as types from '../types/auth';\n  import { API_URL } from '../../configuration'\n  \n  \n  const API_BASE_URL =  API_URL + 'api/v1';\n  \n  \n  function* login(action) {\n    try {\n      const response = yield call(\n        fetch,\n        `${API_BASE_URL}/token-auth/`,\n        {\n          method: 'POST',\n          body: JSON.stringify(action.payload),\n          headers:{\n            'Content-Type': 'application/json',\n          },\n        },\n      );\n  \n      if (response.status === 200) {\n        const { token } = yield response.json();\n        yield put(actions.completeLogin(token));\n      } else {\n        const { non_field_errors } = yield response.json();\n        yield put(actions.failLogin(non_field_errors[0]));\n      }\n    } catch (error) {\n      yield put(actions.failLogin('NETWORK ERROR'));\n    }\n  }\n  \n  export function* watchLoginStarted() {\n    yield takeEvery(\n      types.AUTHENTICATION_STARTED,\n      login,\n    );\n  }\n  \n  function* refreshToken(action) {\n    const expiration = yield select(selectors.getAuthExpiration);\n    const now =  parseInt(new Date().getTime() / 1000);\n  \n    if (expiration - now < 3600) {\n      try {\n        const token = yield select(selectors.getAuthToken);\n        const response = yield call(\n          fetch,\n          `${API_BASE_URL}/token-refresh/`,\n          {\n            method: 'POST',\n            body: JSON.stringify({ token }),\n            headers:{\n              'Content-Type': 'application/json',\n            },\n          },\n        );\n  \n        if (response.status === 200) {\n          const jResponse = yield response.json();\n          yield put(actions.completeTokenRefresh(jResponse.token));\n        } else {\n          // TODO: poner un redirect al home (login)\n          const { non_field_errors } = yield response.json();\n          yield put(actions.failTokenRefresh(non_field_errors[0]));\n        }\n      } catch (error) {\n        // TODO: poner un redirect al home (login)\n        yield put(actions.failTokenRefresh('NETWORK ERROR'));\n      }\n    }\n  }\n  \n  export function* watchRefreshTokenStarted() {\n    yield takeEvery(\n      types.TOKEN_REFRESH_STARTED,\n      refreshToken,\n    );\n  }\n  \n  function* signup(action) {\n    try {\n      const response = yield call(\n        fetch,\n        `${API_BASE_URL}/user/`,\n        {\n          method: 'POST',\n          body: JSON.stringify(action.payload),\n          headers:{\n            'Content-Type': 'application/json',\n          },\n        },\n      );\n  \n      if (response.status === 201) {\n        const { token } = yield response.json();\n        yield put(actions.completeRegistration());\n        yield put(actions.startLogin(action.payload.username, action.payload.password))\n      } else {\n        const { username } = yield response.json();\n        yield put(actions.failRegistration(username[0]));\n      }\n    } catch (error) {\n      yield put(actions.failRegistration('NETWORK ERROR'));\n    }\n  }\n  \n  export function* watchSignupStarted() {\n    yield takeEvery(\n      types.REGISTRATION_STARTED,\n      signup,\n    );\n  }\n  \n  function* reset(action) {\n    try {\n      console.log(\"herjk\")\n      const response = yield call(\n        fetch,\n        `${API_BASE_URL}/user/restore/`,\n        {\n          method: 'POST',\n          body: JSON.stringify(action.payload),\n          headers:{\n            'Content-Type': 'application/json',\n          },\n        },\n      );\n  \n      if (response.status === 200) {\n        const { token } = yield response.json();\n        yield put(actions.completeRegistration());\n      } else {\n        const { detail } = yield response.json();\n        yield put(actions.failRegistration(detail[0]));\n      }\n    } catch (error) {\n      yield put(actions.failRegistration('NETWORK ERROR'));\n    }\n  }\n\n  export function* watchResetPassword() {\n    yield takeEvery(\n      types.PASSWORD_RESET_PROCESS_STARTED,\n      reset,\n    );\n  }"]},"metadata":{},"sourceType":"module"}