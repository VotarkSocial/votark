{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport EventTarget from \"./EventTarget.js\";\nimport Log from \"../utils/log.js\";\nvar log = new Log('XMLHttpRequestEventTarget');\nlog.disable();\n\nvar XMLHttpRequestEventTarget = function (_EventTarget) {\n  _inherits(XMLHttpRequestEventTarget, _EventTarget);\n\n  var _super = _createSuper(XMLHttpRequestEventTarget);\n\n  function XMLHttpRequestEventTarget() {\n    var _this;\n\n    _classCallCheck(this, XMLHttpRequestEventTarget);\n\n    _this = _super.call(this);\n\n    _this._onabort = function () {};\n\n    _this._onerror = function () {};\n\n    _this._onload = function () {};\n\n    _this._onloadstart = function () {};\n\n    _this._onprogress = function () {};\n\n    _this._ontimeout = function () {};\n\n    _this._onloadend = function () {};\n\n    log.info('constructor called');\n    return _this;\n  }\n\n  _createClass(XMLHttpRequestEventTarget, [{\n    key: \"dispatchEvent\",\n    value: function dispatchEvent(event, e) {\n      log.debug('dispatch event', event, e);\n\n      _get(_getPrototypeOf(XMLHttpRequestEventTarget.prototype), \"dispatchEvent\", this).call(this, event, e);\n\n      switch (event) {\n        case 'abort':\n          this._onabort(e);\n\n          break;\n\n        case 'error':\n          this._onerror(e);\n\n          break;\n\n        case 'load':\n          this._onload(e);\n\n          break;\n\n        case 'loadstart':\n          this._onloadstart(e);\n\n          break;\n\n        case 'loadend':\n          this._onloadend(e);\n\n          break;\n\n        case 'progress':\n          this._onprogress(e);\n\n          break;\n\n        case 'timeout':\n          this._ontimeout(e);\n\n          break;\n      }\n    }\n  }, {\n    key: \"onabort\",\n    set: function set(fn) {\n      log.info('set onabort');\n      this._onabort = fn;\n    },\n    get: function get() {\n      return this._onabort;\n    }\n  }, {\n    key: \"onerror\",\n    set: function set(fn) {\n      log.info('set onerror');\n      this._onerror = fn;\n    },\n    get: function get() {\n      return this._onerror;\n    }\n  }, {\n    key: \"onload\",\n    set: function set(fn) {\n      log.info('set onload', fn);\n      this._onload = fn;\n    },\n    get: function get() {\n      return this._onload;\n    }\n  }, {\n    key: \"onloadstart\",\n    set: function set(fn) {\n      log.info('set onloadstart');\n      this._onloadstart = fn;\n    },\n    get: function get() {\n      return this._onloadstart;\n    }\n  }, {\n    key: \"onprogress\",\n    set: function set(fn) {\n      log.info('set onprogress');\n      this._onprogress = fn;\n    },\n    get: function get() {\n      return this._onprogress;\n    }\n  }, {\n    key: \"ontimeout\",\n    set: function set(fn) {\n      log.info('set ontimeout');\n      this._ontimeout = fn;\n    },\n    get: function get() {\n      return this._ontimeout;\n    }\n  }, {\n    key: \"onloadend\",\n    set: function set(fn) {\n      log.info('set onloadend');\n      this._onloadend = fn;\n    },\n    get: function get() {\n      return this._onloadend;\n    }\n  }]);\n\n  return XMLHttpRequestEventTarget;\n}(EventTarget);\n\nexport { XMLHttpRequestEventTarget as default };","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/node_modules/react-native-fetch-blob/polyfill/XMLHttpRequestEventTarget.js"],"names":["EventTarget","Log","log","disable","XMLHttpRequestEventTarget","_onabort","_onerror","_onload","_onloadstart","_onprogress","_ontimeout","_onloadend","info","event","e","debug","fn"],"mappings":";;;;;;;;;;;AAIA,OAAOA,WAAP;AACA,OAAOC,GAAP;AAEA,IAAMC,GAAG,GAAG,IAAID,GAAJ,CAAQ,2BAAR,CAAZ;AAEAC,GAAG,CAACC,OAAJ;;IAGqBC,yB;;;;;AAUnB,uCAAc;AAAA;;AAAA;;AACZ;;AADY,UARdC,QAQc,GARiB,YAAM,CAAE,CAQzB;;AAAA,UAPdC,QAOc,GAPiB,YAAM,CAAE,CAOzB;;AAAA,UANdC,OAMc,GANgB,YAAM,CAAE,CAMxB;;AAAA,UALdC,YAKc,GALqB,YAAM,CAAE,CAK7B;;AAAA,UAJdC,WAIc,GAJoB,YAAM,CAAE,CAI5B;;AAAA,UAHdC,UAGc,GAHmB,YAAM,CAAE,CAG3B;;AAAA,UAFdC,UAEc,GAFmB,YAAM,CAAE,CAE3B;;AAEZT,IAAAA,GAAG,CAACU,IAAJ,CAAS,oBAAT;AAFY;AAGb;;;;kCAEaC,K,EAAcC,C,EAAS;AACnCZ,MAAAA,GAAG,CAACa,KAAJ,CAAU,gBAAV,EAA4BF,KAA5B,EAAmCC,CAAnC;;AACA,mGAAoBD,KAApB,EAA2BC,CAA3B;;AACA,cAAOD,KAAP;AACE,aAAK,OAAL;AACE,eAAKR,QAAL,CAAcS,CAAd;;AACF;;AACA,aAAK,OAAL;AACE,eAAKR,QAAL,CAAcQ,CAAd;;AACF;;AACA,aAAK,MAAL;AACE,eAAKP,OAAL,CAAaO,CAAb;;AACF;;AACA,aAAK,WAAL;AACE,eAAKN,YAAL,CAAkBM,CAAlB;;AACF;;AACA,aAAK,SAAL;AACE,eAAKH,UAAL,CAAgBG,CAAhB;;AACF;;AACA,aAAK,UAAL;AACE,eAAKL,WAAL,CAAiBK,CAAjB;;AACF;;AACA,aAAK,SAAL;AACE,eAAKJ,UAAL,CAAgBI,CAAhB;;AACF;AArBF;AAuBD;;;sBAEWE,E,EAAsB;AAChCd,MAAAA,GAAG,CAACU,IAAJ,CAAS,aAAT;AACA,WAAKP,QAAL,GAAgBW,EAAhB;AACD,K;wBAEa;AACZ,aAAO,KAAKX,QAAZ;AACD;;;sBACWW,E,EAAsB;AAChCd,MAAAA,GAAG,CAACU,IAAJ,CAAS,aAAT;AACA,WAAKN,QAAL,GAAgBU,EAAhB;AACD,K;wBAEa;AACZ,aAAO,KAAKV,QAAZ;AACD;;;sBAEUU,E,EAAsB;AAC/Bd,MAAAA,GAAG,CAACU,IAAJ,CAAS,YAAT,EAAuBI,EAAvB;AACA,WAAKT,OAAL,GAAeS,EAAf;AACD,K;wBAEY;AACX,aAAO,KAAKT,OAAZ;AACD;;;sBAEeS,E,EAAsB;AACpCd,MAAAA,GAAG,CAACU,IAAJ,CAAS,iBAAT;AACA,WAAKJ,YAAL,GAAoBQ,EAApB;AACD,K;wBAEiB;AAChB,aAAO,KAAKR,YAAZ;AACD;;;sBAEcQ,E,EAAsB;AACnCd,MAAAA,GAAG,CAACU,IAAJ,CAAS,gBAAT;AACA,WAAKH,WAAL,GAAmBO,EAAnB;AACD,K;wBAEgB;AACf,aAAO,KAAKP,WAAZ;AACD;;;sBAEaO,E,EAAsB;AAClCd,MAAAA,GAAG,CAACU,IAAJ,CAAS,eAAT;AACA,WAAKF,UAAL,GAAkBM,EAAlB;AACD,K;wBAEe;AACd,aAAO,KAAKN,UAAZ;AACD;;;sBAEaM,E,EAAsB;AAClCd,MAAAA,GAAG,CAACU,IAAJ,CAAS,eAAT;AACA,WAAKD,UAAL,GAAkBK,EAAlB;AACD,K;wBAEe;AACd,aAAO,KAAKL,UAAZ;AACD;;;;EAvGoDX,W;;SAAlCI,yB","sourcesContent":["// Copyright 2016 wkh237@github. All rights reserved.\n// Use of this source code is governed by a MIT-style license that can be\n// found in the LICENSE file.\n\nimport EventTarget from './EventTarget.js'\nimport Log from '../utils/log.js'\n\nconst log = new Log('XMLHttpRequestEventTarget')\n\nlog.disable()\n// log.level(3)\n\nexport default class XMLHttpRequestEventTarget extends EventTarget {\n\n  _onabort : (e:Event) => void = () => {};\n  _onerror : (e:Event) => void = () => {};\n  _onload : (e:Event) => void = () => {};\n  _onloadstart : (e:Event) => void = () => {};\n  _onprogress : (e:Event) => void = () => {};\n  _ontimeout : (e:Event) => void = () => {};\n  _onloadend : (e:Event) => void = () => {};\n\n  constructor() {\n    super()\n    log.info('constructor called')\n  }\n\n  dispatchEvent(event:string, e:Event) {\n    log.debug('dispatch event', event, e)\n    super.dispatchEvent(event, e)\n    switch(event) {\n      case 'abort' :\n        this._onabort(e)\n      break;\n      case 'error' :\n        this._onerror(e)\n      break;\n      case 'load' :\n        this._onload(e)\n      break;\n      case 'loadstart' :\n        this._onloadstart(e)\n      break;\n      case 'loadend' :\n        this._onloadend(e)\n      break;\n      case 'progress' :\n        this._onprogress(e)\n      break;\n      case 'timeout' :\n        this._ontimeout(e)\n      break;\n    }\n  }\n\n  set onabort(fn:(e:Event) => void) {\n    log.info('set onabort')\n    this._onabort = fn\n  }\n\n  get onabort() {\n    return this._onabort\n  }\n  set onerror(fn:(e:Event) => void) {\n    log.info('set onerror')\n    this._onerror = fn\n  }\n\n  get onerror() {\n    return this._onerror\n  }\n\n  set onload(fn:(e:Event) => void) {\n    log.info('set onload', fn)\n    this._onload = fn\n  }\n\n  get onload() {\n    return this._onload\n  }\n\n  set onloadstart(fn:(e:Event) => void) {\n    log.info('set onloadstart')\n    this._onloadstart = fn\n  }\n\n  get onloadstart() {\n    return this._onloadstart\n  }\n\n  set onprogress(fn:(e:Event) => void) {\n    log.info('set onprogress')\n    this._onprogress = fn\n  }\n\n  get onprogress() {\n    return this._onprogress\n  }\n\n  set ontimeout(fn:(e:Event) => void) {\n    log.info('set ontimeout')\n    this._ontimeout = fn\n  }\n\n  get ontimeout() {\n    return this._ontimeout\n  }\n\n  set onloadend(fn:(e:Event) => void) {\n    log.info('set onloadend')\n    this._onloadend = fn\n  }\n\n  get onloadend() {\n    return this._onloadend\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}