{"ast":null,"code":"var _jsxFileName = \"/home/thecoder/Documentos/votark/votark/src/components/Posts/index.js\";\nimport { connect } from 'react-redux';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as selectors from \"../../reducers\";\nimport React from 'react';\nimport styles from \"./styles\";\nimport { URL, STATIC_URL } from \"../../../configuration\";\nimport { Actions } from 'react-native-router-flux';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { colors } from \"../../../configuration\";\nimport { logout } from \"../../actions/auth\";\nimport { ScrollView } from 'react-native-gesture-handler';\nimport FitImage from 'react-native-fit-image';\nimport { gridList } from \"../../utils/gridList\";\n\nvar Posts = function Posts(_ref) {\n  var posts = _ref.posts;\n  return React.createElement(ScrollView, {\n    style: styles.posts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, posts.length === 0 ? React.createElement(View, {\n    style: styles.row,\n    key: row[0].id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 25\n    }\n  }, React.createElement(View, {\n    key: post.id,\n    style: styles.post,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 33\n    }\n  }, \"@\", post.username, \" \"), React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 33\n    }\n  }, \"topic:\", post.topicname, \" \"), React.createElement(FitImage, {\n    style: styles.image,\n    source: {\n      uri: STATIC_URL + post.image\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 33\n    }\n  }), React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 33\n    }\n  }, \"victories:\", post.victories, \" \"), React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 33\n    }\n  }, \"clasification:\", post.order, \" \")), React.createElement(View, {\n    key: post.id,\n    style: styles.post,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 33\n    }\n  }, \"@\", post.username, \" \"), React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 33\n    }\n  }, \"topic:\", post.topicname, \" \"), React.createElement(FitImage, {\n    style: styles.image,\n    source: {\n      uri: STATIC_URL + post.image\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 33\n    }\n  }), React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 33\n    }\n  }, \"victories:\", post.victories, \" \"), React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 33\n    }\n  }, \"clasification:\", post.order, \" \"))) : posts.map(function (row) {\n    return React.createElement(View, {\n      style: styles.row,\n      key: row[0].id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, row.map(function (post) {\n      return React.createElement(View, {\n        key: post.id,\n        style: styles.post,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 33\n        }\n      }, \"@\", post.username, \" \"), React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 33\n        }\n      }, \"topic:\", post.topicname, \" \"), React.createElement(FitImage, {\n        style: styles.image,\n        source: {\n          uri: STATIC_URL + post.image\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 33\n        }\n      }), React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 33\n        }\n      }, \"victories:\", post.victories, \" \"), React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 33\n        }\n      }, \"clasification:\", post.order, \" \"));\n    }));\n  }));\n};\n\nexport default connect(function (state, _ref2) {\n  var posts = _ref2.posts;\n  return {\n    posts: gridList(posts)\n  };\n}, function (dispatch) {\n  return {};\n})(Posts);","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/src/components/Posts/index.js"],"names":["connect","selectors","React","styles","URL","STATIC_URL","Actions","LinearGradient","colors","logout","ScrollView","FitImage","gridList","Posts","posts","length","row","id","post","text","username","topicname","image","uri","victories","order","map","state","dispatch"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport {Text, View, Image, TouchableOpacity } from 'react-native';\nimport * as selectors from '../../reducers'\nimport React from 'react';\nimport styles from './styles'\nimport { URL, STATIC_URL } from '../../../configuration'\nimport { Actions } from 'react-native-router-flux';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { colors } from '../../../configuration';\nimport { logout } from '../../actions/auth';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport FitImage from 'react-native-fit-image';\nimport { gridList } from '../../utils/gridList';\n\nconst Posts = ({posts}) => {\n    \n    return(\n        <ScrollView style={styles.posts}>\n                {\n                    posts.length===0?(\n                        <View style={styles.row} key={row[0].id}>\n                            <View key={post.id} style={styles.post}>\n                                <Text style={styles.text}>@{post.username} </Text>\n                                <Text style={styles.text}>topic:{post.topicname} </Text>\n                                <FitImage  \n                                    style={styles.image}\n                                    source={{uri: STATIC_URL+post.image}} \n                                />\n                                <Text style={styles.text}>victories:{post.victories} </Text>\n                                <Text style={styles.text}>clasification:{post.order} </Text>\n                            </View>\n                            <View key={post.id} style={styles.post}>\n                                <Text style={styles.text}>@{post.username} </Text>\n                                <Text style={styles.text}>topic:{post.topicname} </Text>\n                                <FitImage  \n                                    style={styles.image}\n                                    source={{uri: STATIC_URL+post.image}} \n                                />\n                                <Text style={styles.text}>victories:{post.victories} </Text>\n                                <Text style={styles.text}>clasification:{post.order} </Text>\n                            </View>\n                        </View>\n                    ):(                \n                posts.map(row =>\n                    <View style={styles.row} key={row[0].id}>\n                        {row.map(post => \n                            <View key={post.id} style={styles.post}>\n                                <Text style={styles.text}>@{post.username} </Text>\n                                <Text style={styles.text}>topic:{post.topicname} </Text>\n                                <FitImage  \n                                    style={styles.image}\n                                    source={{uri: STATIC_URL+post.image}} \n                                />\n                                <Text style={styles.text}>victories:{post.victories} </Text>\n                                <Text style={styles.text}>clasification:{post.order} </Text>\n                            </View>\n                        )}\n                    </View>\n                    \n                    )\n                )\n            }\n        </ScrollView>\n)};\n\nexport default connect(\n  (state, {posts}) => ({\n      posts:gridList(posts)\n  }),\n  dispatch => ({      \n  }),\n)(Posts);\n"]},"metadata":{},"sourceType":"module"}