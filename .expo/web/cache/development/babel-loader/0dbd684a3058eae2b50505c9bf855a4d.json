{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/thecoder/Documentos/votark/votark/src/components/Chats/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { connect } from 'react-redux';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport * as selectors from \"../../reducers\";\nimport React, { useEffect, useState } from 'react';\nimport styles from \"./styles\";\nimport { URL } from \"../../../configuration\";\nimport { Actions } from 'react-native-router-flux';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { colors } from \"../../../configuration\";\nimport NavBar from \"../NavBar\";\nimport TokenRefresh from \"../TokenRefresh\";\nimport { startFetchingChats, startAddingChat, selectChat, startAddingUser } from \"../../actions/chat\";\nimport { v4 } from 'uuid';\nimport { startFetchingMessages, startAddingMessage } from \"../../actions/message\";\nimport { startUserFetching } from \"../../actions/search\";\n\nvar Chats = function Chats(_ref) {\n  var add = _ref.add,\n      chats = _ref.chats,\n      error = _ref.error,\n      messages = _ref.messages,\n      error_message = _ref.error_message,\n      fetch = _ref.fetch,\n      selected = _ref.selected,\n      select = _ref.select,\n      send = _ref.send,\n      looggedUser = _ref.looggedUser,\n      isFetchingUsers = _ref.isFetchingUsers,\n      userError = _ref.userError,\n      users = _ref.users,\n      search = _ref.search;\n  useEffect(function () {\n    var interval = setInterval(fetch, 1000);\n    return function () {\n      clearInterval(interval);\n    };\n  }, []);\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      query = _useState2[0],\n      changeQuery = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isAdding = _useState4[0],\n      changeIsAdding = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isAddingUser = _useState6[0],\n      changeIsAddingUser = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      name = _useState8[0],\n      changeName = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      message = _useState10[0],\n      changeMessage = _useState10[1];\n\n  var changeQueryMiddleware = function changeQueryMiddleware(query) {\n    changeQuery(query);\n    search(query);\n  };\n\n  return React.createElement(View, {\n    style: styles.main_container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, React.createElement(LinearGradient, {\n    colors: [colors.primaryB, 'transparent'],\n    style: {\n      width: '100%',\n      height: '100%',\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n      justifyContent: 'flex-start'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, selected ? React.createElement(View, {\n    style: typeof document === 'undefined' ? styles.container : styles.webcontainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, isAddingUser ? React.createElement(View, {\n    style: typeof document === 'undefined' ? styles.container : styles.webcontainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 33\n    }\n  }, React.createElement(View, {\n    style: styles.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, React.createElement(Image, {\n    style: styles.icon,\n    source: require(\"../../public/static/icon/search.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    className: \"user\",\n    type: \"text\",\n    placeholder: \"Search\",\n    value: query,\n    onChangeText: changeQueryMiddleware,\n    onChange: function onChange(e) {\n      return changeQueryMiddleware(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  }))) : React.createElement(TouchableOpacity, {\n    style: styles.row,\n    onPress: function onPress() {\n      return select(null);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, React.createElement(Image, {\n    style: styles.icon,\n    source: require(\"../../public/static/icon/return.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: styles.row,\n    onPress: function onPress() {\n      return changeIsAddingUser(!isAdding);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, isAddingUser ? React.createElement(Text, {\n    style: styles.text_,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, \"cancel\") : React.createElement(Image, {\n    style: styles.icon,\n    source: require(\"../../public/static/icon/add.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }))) : React.createElement(View, {\n    style: typeof document === 'undefined' ? styles.container : styles.webcontainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, \"CHATS\")), React.createElement(TouchableOpacity, {\n    style: styles.row,\n    onPress: function onPress() {\n      return changeIsAdding(!isAdding);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, isAdding ? React.createElement(Text, {\n    style: styles.text_,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }, \"cancel\") : React.createElement(Image, {\n    style: styles.icon,\n    source: require(\"../../public/static/icon/add.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }))), selected ? React.createElement(ScrollView, {\n    style: styles.section,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, isAddingUser && React.createElement(View, {\n    style: styles.elements,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, !userError ? !isFetchingUsers ? React.createElement(View, {\n    style: styles.item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  }, users.map(function (user) {\n    return React.createElement(TouchableOpacity, {\n      key: user.id,\n      style: styles.item,\n      onPress: function onPress() {\n        selectUser(user.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 33\n      }\n    }, React.createElement(View, {\n      style: styles.row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 37\n      }\n    }, React.createElement(Image, {\n      style: styles.photo,\n      source: user.picture ? {\n        uri: STATIC_URL + user.picture\n      } : require(\"../../public/static/icon/user.png\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 41\n      }\n    }), React.createElement(Text, {\n      style: styles.element,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 41\n      }\n    }, \"@ \", user.username)), React.createElement(View, {\n      style: styles.bar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 37\n      }\n    }));\n  })) : React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 24\n    }\n  }, 'LOADING...') : React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 23\n    }\n  }, userError)), React.createElement(View, {\n    style: styles.elements,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, !error_message ? React.createElement(View, {\n    style: styles.item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 25\n    }\n  }, messages.length !== 0 ? messages.map(function (item) {\n    return React.createElement(View, {\n      style: looggedUser === item.user ? styles.my_message : styles.their_message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 37\n      }\n    }, React.createElement(Text, {\n      style: styles.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 41\n      }\n    }, \" @\", item.username), React.createElement(Text, {\n      style: styles.message_text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 41\n      }\n    }, \" \", item.content));\n  }) : React.createElement(Text, {\n    style: styles.element,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 33\n    }\n  }, \"NO CURRENT MESSAGES\")) : React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 24\n    }\n  }, error))) : React.createElement(View, {\n    style: styles.section,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, isAdding && React.createElement(View, {\n    style: styles.row2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    className: \"user\",\n    type: \"text\",\n    placeholder: \"Chat name\",\n    value: name,\n    onChangeText: changeName,\n    onChange: function onChange(e) {\n      return changeName(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 25\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.row,\n    onPress: function onPress() {\n      changeIsAdding(false);\n      add(name);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles.text2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 29\n    }\n  }, \"CREATE\"))), React.createElement(ScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.elements,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }, !error ? React.createElement(View, {\n    style: styles.item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 25\n    }\n  }, chats.length !== 0 ? chats.map(function (chat) {\n    return React.createElement(TouchableOpacity, {\n      key: chat.id,\n      style: styles.item,\n      onPress: function onPress() {\n        select(chat.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 33\n      }\n    }, React.createElement(View, {\n      style: styles.row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 37\n      }\n    }, React.createElement(Image, {\n      style: styles.photo,\n      source: chat.picture ? {\n        uri: STATIC_URL + chat.picture\n      } : require(\"../../public/static/icon/user.png\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 41\n      }\n    }), React.createElement(Text, {\n      style: styles.element,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 41\n      }\n    }, \" \", chat.name)), React.createElement(View, {\n      style: styles.bar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 37\n      }\n    }));\n  }) : React.createElement(Text, {\n    style: styles.element,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 33\n    }\n  }, \"NO CURRENT CHATS\")) : React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 24\n    }\n  }, error))))), selected && React.createElement(View, {\n    style: styles.Writer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: styles.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.sendInput,\n    className: \"user\",\n    type: \"text\",\n    placeholder: \"Write here...\",\n    value: message,\n    onChangeText: changeMessage,\n    onChange: function onChange(e) {\n      return changeMessage(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.send,\n    type: \"submit\",\n    onPress: function onPress() {\n      return send(message);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }, ' Send '))), React.createElement(NavBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 5\n    }\n  }), React.createElement(TokenRefresh, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default connect(function (state) {\n  return {\n    isAuthenticated: selectors.isAuthenticated(state),\n    error: selectors.getErrorChat(state),\n    isFetching: selectors.getisFetchingChat(state),\n    chats: selectors.getChats(state),\n    messages: selectors.getMessages(state),\n    error_message: selectors.getErrorMessage(state),\n    selected: selectors.getChat(state, selectors.getChatSelected(state)),\n    selectedid: selectors.getChatSelected(state),\n    looggedUser: selectors.getAuthUserID(state),\n    isFetchingUsers: selectors.getisFetchingSearchedUser(state),\n    userError: selectors.getError_User_search(state),\n    users: selectors.getSearchedUsers(state)\n  };\n}, function (dispatch) {\n  return {\n    add: function add(name) {\n      dispatch(startAddingChat(name, v4()));\n    },\n    fetch: function fetch() {\n      dispatch(startFetchingChats());\n      dispatch(startFetchingMessages());\n    },\n    select: function select(id) {\n      dispatch(selectChat(id));\n    },\n    send: function send(message) {\n      dispatch(startAddingMessage(message, v4()));\n    },\n    addUser: function addUser(id) {\n      dispatch(startAddingUser(id));\n    },\n    search: function search(query) {\n      dispatch(startUserFetchingq(query));\n    }\n  };\n}, function (stateToProps, disptachToProps) {\n  if (!stateToProps.isAuthenticated) {\n    if (typeof document !== 'undefined') {\n      window.location.href = URL + 'login/';\n    } else {\n      Actions.replace('Login');\n    }\n  }\n\n  return _objectSpread(_objectSpread({}, disptachToProps), stateToProps);\n})(Chats);","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/src/components/Chats/index.js"],"names":["connect","selectors","React","useEffect","useState","styles","URL","Actions","LinearGradient","colors","NavBar","TokenRefresh","startFetchingChats","startAddingChat","selectChat","startAddingUser","v4","startFetchingMessages","startAddingMessage","startUserFetching","Chats","add","chats","error","messages","error_message","fetch","selected","select","send","looggedUser","isFetchingUsers","userError","users","search","interval","setInterval","clearInterval","query","changeQuery","isAdding","changeIsAdding","isAddingUser","changeIsAddingUser","name","changeName","message","changeMessage","changeQueryMiddleware","main_container","primaryB","width","height","flexDirection","alignItems","justifyContent","document","container","webcontainer","row","icon","require","input","e","target","value","text_","text","section","elements","item","map","user","id","selectUser","photo","picture","uri","STATIC_URL","element","username","bar","length","my_message","their_message","message_text","content","row2","text2","chat","Writer","sendInput","state","isAuthenticated","getErrorChat","isFetching","getisFetchingChat","getChats","getMessages","getErrorMessage","getChat","getChatSelected","selectedid","getAuthUserID","getisFetchingSearchedUser","getError_User_search","getSearchedUsers","dispatch","addUser","startUserFetchingq","stateToProps","disptachToProps","window","location","href","replace"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport {Text, View, Image, TouchableOpacity, ScrollView, TextInput } from 'react-native';\nimport * as selectors from '../../reducers'\nimport React, {useEffect, useState} from 'react';\nimport styles from './styles'\nimport { URL } from '../../../configuration'\nimport { Actions } from 'react-native-router-flux';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { colors } from '../../../configuration';\nimport NavBar from '../NavBar';\nimport TokenRefresh from '../TokenRefresh';\nimport { startFetchingChats, startAddingChat, selectChat, startAddingUser } from '../../actions/chat';\nimport {v4} from 'uuid'\nimport { startFetchingMessages, startAddingMessage } from '../../actions/message';\nimport { startUserFetching } from '../../actions/search';\n\n\nconst Chats = ({add, chats,error,messages, error_message,fetch,selected,select,send,looggedUser,isFetchingUsers,userError, users,search }) => {\n    \n    useEffect(\n        () => {\n          const interval = setInterval(fetch, 1000);\n          return () => {\n            clearInterval(interval);\n          };\n        },\n        []\n      );\n    \n    const [query, changeQuery] = useState('');\n    const [isAdding, changeIsAdding] = useState(false);\n    const [isAddingUser, changeIsAddingUser] = useState(false);\n    const [name, changeName] = useState('');\n    const [message, changeMessage] = useState('');\n\n    const changeQueryMiddleware = (query) => {\n        changeQuery(query)\n        search(query)\n    }\n\n    return (\n    <View style={styles.main_container}>\n    <LinearGradient\n        colors={[colors.primaryB, 'transparent']}\n        style={{\n            width: '100%',\n            height: '100%',\n            flexDirection: 'column',\n            alignItems: 'flex-start',\n            justifyContent: 'flex-start'\n        }}\n        >\n        {selected?\n            <View style={(typeof document==='undefined')?styles.container:styles.webcontainer}>\n                {isAddingUser ? <View style={(typeof document==='undefined')?styles.container:styles.webcontainer}>\n                        <View style={styles.row}>\n                            <Image style={styles.icon} source={require('../../public/static/icon/search.png')} ></Image>\n                            <TextInput\n                            style={styles.input}\n                            className=\"user\"\n                            type=\"text\"\n                            placeholder=\"Search\"\n                            value={query}   \n                            onChangeText={changeQueryMiddleware}\n                            onChange={e => changeQueryMiddleware(e.target.value)}\n                            />\n                        </View>\n                    </View>\n                    :\n                    <TouchableOpacity style={styles.row} onPress={()=>select(null)}>\n                    {\n                        <Image style={styles.icon} source={require('../../public/static/icon/return.png')} />\n                    }\n                </TouchableOpacity>    \n                }\n                <TouchableOpacity style={styles.row} onPress={()=>changeIsAddingUser(!isAdding)}>\n                    {\n                        isAddingUser?\n                        <Text style={styles.text_} >{\"cancel\"}</Text>\n                        :\n                        <Image style={styles.icon} source={require('../../public/static/icon/add.png')} />\n                    }\n                </TouchableOpacity>   \n            </View>\n            :\n            <View style={(typeof document==='undefined')?styles.container:styles.webcontainer}>\n                <View style={styles.row}>\n                    <Text style={styles.text} >{\"CHATS\"}</Text>\n                </View>\n                <TouchableOpacity style={styles.row} onPress={()=>changeIsAdding(!isAdding)}>\n                    {\n                        isAdding?\n                        <Text style={styles.text_} >{\"cancel\"}</Text>\n                        :\n                        <Image style={styles.icon} source={require('../../public/static/icon/add.png')} />\n                    }\n                    \n                </TouchableOpacity>   \n            </View>\n        }\n        {selected?\n            <ScrollView style={styles.section}>\n                {\n            isAddingUser &&\n                    <View style={styles.elements}>\n                    {(!userError)?(!isFetchingUsers)?(\n                        <View style={styles.item}>\n                            {\n                            users.map(user =>\n                                <TouchableOpacity key={user.id} style={styles.item} onPress={()=>{\n                                    selectUser(user.id)\n                                }}>\n                                    <View style={styles.row}>\n                                        <Image style={styles.photo} source={user.picture?{uri: STATIC_URL + user.picture}:require('../../public/static/icon/user.png')}/>\n                                        <Text style={styles.element} >@ { user.username }</Text>\n                                    </View>\n                                    <View style={styles.bar}></View>\n                                </TouchableOpacity>\n                                )\n                            }\n                        </View>\n                    ):(<Text>{'LOADING...'}</Text>)\n                    :(<Text>{userError}</Text>)\n                    }\n                </View>\n                }\n                <View style={styles.elements}>\n                    {(!error_message)?(\n                        <View style={styles.item}>\n                            {\n                                messages.length!==0?\n                                messages.map(item =>\n                                    <View style={looggedUser===item.user?styles.my_message:styles.their_message}>\n                                        <Text style={styles.username} > @{ item.username }</Text>\n                                        <Text style={styles.message_text} > { item.content }</Text>\n                                    </View>                                \n                                ):\n                                <Text style={styles.element} >NO CURRENT MESSAGES</Text>\n                            }\n                        </View>\n                    ):(<Text>{error}</Text>)\n                    }\n                </View>\n            </ScrollView>\n        :\n        <View style={styles.section}>\n        {\n            isAdding &&\n                    <View style={styles.row2}>\n                        <TextInput\n                            style={styles.input}\n                            className=\"user\"\n                            type=\"text\"\n                            placeholder=\"Chat name\"\n                            value={name}   \n                            onChangeText={changeName}\n                            onChange={e => changeName(e.target.value)}\n                            />\n                        <TouchableOpacity style={styles.row} onPress={()=>{\n                            changeIsAdding(false)\n                            add(name)}}>\n                            <Text style={styles.text2} >{\"CREATE\"}</Text>\n                        </TouchableOpacity> \n                    </View>\n        }\n            \n                <ScrollView>\n                <View style={styles.elements}>\n                    {(!error)?(\n                        <View style={styles.item}>\n                            {\n                                chats.length!==0?\n                            chats.map(chat =>\n                                <TouchableOpacity key={chat.id} style={styles.item} onPress={()=>{\n                                    select(chat.id)\n                                }}>\n                                    <View style={styles.row}>\n                                        <Image style={styles.photo} source={chat.picture?{uri: STATIC_URL + chat.picture}:require('../../public/static/icon/user.png')}/>\n                                        <Text style={styles.element} > { chat.name }</Text>\n                                    </View>\n                                    <View style={styles.bar}></View>\n                                </TouchableOpacity>\n                                ):\n                                <Text style={styles.element} >NO CURRENT CHATS</Text>\n                            }\n                        </View>\n                    ):(<Text>{error}</Text>)\n                    }\n                </View>\n            </ScrollView>\n        </View>\n    }\n    </LinearGradient>\n    { selected&&\n  <View style={styles.Writer}>\n      <View style={styles.row}>\n            <TextInput\n            style={styles.sendInput}\n            className=\"user\"\n            type=\"text\"\n            placeholder=\"Write here...\"\n            value={message}   \n            onChangeText={changeMessage}\n            onChange={e => changeMessage(e.target.value)}\n            />\n            <Text style={styles.send} type=\"submit\" \n            onPress={() =>\n              send(message)\n            }>{' Send '}</Text>\n      </View>\n    </View>\n    }\n    <NavBar/>\n    <TokenRefresh/>\n    </View>\n)};\n\nexport default connect(\n  state => ({\n    isAuthenticated: selectors.isAuthenticated(state),\n    error: selectors.getErrorChat(state),\n    isFetching: selectors.getisFetchingChat(state),\n    chats: selectors.getChats(state),\n    messages: selectors.getMessages(state),\n    error_message: selectors.getErrorMessage(state),\n    selected: selectors.getChat(state,selectors.getChatSelected(state)),\n    selectedid: selectors.getChatSelected(state),\n    looggedUser: selectors.getAuthUserID(state),\n    isFetchingUsers: selectors.getisFetchingSearchedUser(state),\n    userError: selectors.getError_User_search(state),\n    users: selectors.getSearchedUsers(state),\n  }),\n  dispatch => ({\n      add(name){\n        dispatch(startAddingChat(name,v4()))\n      },\n      fetch(){\n          dispatch(startFetchingChats())\n          dispatch(startFetchingMessages())\n      },\n      select(id){\n          dispatch(selectChat(id))\n      },\n      send(message){\n          dispatch(startAddingMessage(message,v4()))\n      },\n      addUser(id){\n          dispatch(startAddingUser(id))\n      },\n      search(query){\n        dispatch(startUserFetchingq(query))\n      }\n  }),\n  (stateToProps,disptachToProps) => {\n    if(!stateToProps.isAuthenticated){\n      if(typeof document !== 'undefined'){\n        window.location.href = URL+'login/'\n      }\n      else{\n        Actions.replace('Login')\n      }\n    }\n    return ({...disptachToProps,\n        ...stateToProps,\n    })\n  }\n)(Chats);"]},"metadata":{},"sourceType":"module"}