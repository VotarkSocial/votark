{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/thecoder/Documentos/votark/votark/node_modules/react-native-loader/src/DoubleBounce.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { ART } from \"react-native-web/dist/index\";\nvar Surface = ART.Surface;\nimport Circle from \"./animated/Circle\";\n\nvar Pulse = function (_Component) {\n  _inherits(Pulse, _Component);\n\n  var _super = _createSuper(Pulse);\n\n  function Pulse() {\n    var _this;\n\n    _classCallCheck(this, Pulse);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      bounces: [new Animated.Value(1), new Animated.Value(0)]\n    };\n    return _this;\n  }\n\n  _createClass(Pulse, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.animate(0);\n      setTimeout(function () {\n        return _this2.animate(1);\n      }, 1000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unmounted = true;\n    }\n  }, {\n    key: \"animate\",\n    value: function animate(index) {\n      var _this3 = this;\n\n      Animated.sequence([Animated.timing(this.state.bounces[index], {\n        toValue: 1,\n        duration: 1000\n      }), Animated.timing(this.state.bounces[index], {\n        toValue: 0,\n        duration: 1000\n      })]).start(function () {\n        if (!_this3.unmounted) {\n          _this3.animate(index);\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          size = _this$props.size,\n          color = _this$props.color;\n\n      var _this$state$bounces = _slicedToArray(this.state.bounces, 2),\n          scale1 = _this$state$bounces[0],\n          scale2 = _this$state$bounces[1];\n\n      var width = size * 2;\n      var height = size * 2;\n      return React.createElement(Surface, {\n        width: width,\n        height: height,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      }, React.createElement(Circle, {\n        radius: size,\n        fill: color,\n        scale: scale1,\n        opacity: 0.6,\n        x: size,\n        y: size,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }\n      }), React.createElement(Circle, {\n        radius: size,\n        fill: color,\n        scale: scale2,\n        opacity: 0.6,\n        x: size,\n        y: size,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return Pulse;\n}(Component);\n\nPulse.propTypes = {\n  size: PropTypes.number,\n  color: PropTypes.string\n};\nPulse.defaultProps = {\n  size: 14,\n  color: '#000'\n};\nexport { Pulse as default };","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/node_modules/react-native-loader/src/DoubleBounce.js"],"names":["React","Component","PropTypes","ART","Surface","Circle","Pulse","state","bounces","Animated","Value","animate","setTimeout","unmounted","index","sequence","timing","toValue","duration","start","props","size","color","scale1","scale2","width","height","propTypes","number","string","defaultProps"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;SACmBC,G;IACXC,O,GAAYD,G,CAAZC,O;AAER,OAAOC,MAAP;;IAEqBC,K;;;;;;;;;;;;;;;UAWnBC,K,GAAQ;AACNC,MAAAA,OAAO,EAAE,CACP,IAAIC,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CADO,EAEP,IAAID,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAFO;AADH,K;;;;;;wCAOY;AAAA;;AAClB,WAAKC,OAAL,CAAa,CAAb;AACAC,MAAAA,UAAU,CAAC;AAAA,eAAM,MAAI,CAACD,OAAL,CAAa,CAAb,CAAN;AAAA,OAAD,EAAwB,IAAxB,CAAV;AACD;;;2CAEsB;AACrB,WAAKE,SAAL,GAAiB,IAAjB;AACD;;;4BAEOC,K,EAAO;AAAA;;AACbL,MAAAA,QAAQ,CACLM,QADH,CACY,CACRN,QAAQ,CAACO,MAAT,CAAgB,KAAKT,KAAL,CAAWC,OAAX,CAAmBM,KAAnB,CAAhB,EAA2C;AACzCG,QAAAA,OAAO,EAAE,CADgC;AAEzCC,QAAAA,QAAQ,EAAE;AAF+B,OAA3C,CADQ,EAKRT,QAAQ,CAACO,MAAT,CAAgB,KAAKT,KAAL,CAAWC,OAAX,CAAmBM,KAAnB,CAAhB,EAA2C;AACzCG,QAAAA,OAAO,EAAE,CADgC;AAEzCC,QAAAA,QAAQ,EAAE;AAF+B,OAA3C,CALQ,CADZ,EAWGC,KAXH,CAWS,YAAM;AACX,YAAI,CAAC,MAAI,CAACN,SAAV,EAAqB;AACnB,UAAA,MAAI,CAACF,OAAL,CAAaG,KAAb;AACD;AACF,OAfH;AAgBD;;;6BAEQ;AAAA,wBACiB,KAAKM,KADtB;AAAA,UACCC,IADD,eACCA,IADD;AAAA,UACOC,KADP,eACOA,KADP;;AAAA,+CAE+B,KAAKf,KAFpC,CAECC,OAFD;AAAA,UAEWe,MAFX;AAAA,UAEmBC,MAFnB;;AAGP,UAAMC,KAAK,GAAGJ,IAAI,GAAG,CAArB;AACA,UAAMK,MAAM,GAAGL,IAAI,GAAG,CAAtB;AAEA,aAAQ,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAEI,KAAhB;AAAuB,QAAA,MAAM,EAAEC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACN,oBAAC,MAAD;AACE,QAAA,MAAM,EAAEL,IADV;AAEE,QAAA,IAAI,EAAEC,KAFR;AAGE,QAAA,KAAK,EAAEC,MAHT;AAIE,QAAA,OAAO,EAAE,GAJX;AAKE,QAAA,CAAC,EAAEF,IALL;AAME,QAAA,CAAC,EAAEA,IANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADM,EASN,oBAAC,MAAD;AACE,QAAA,MAAM,EAAEA,IADV;AAEE,QAAA,IAAI,EAAEC,KAFR;AAGE,QAAA,KAAK,EAAEE,MAHT;AAIE,QAAA,OAAO,EAAE,GAJX;AAKE,QAAA,CAAC,EAAEH,IALL;AAME,QAAA,CAAC,EAAEA,IANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATM,CAAR;AAkBD;;;;EAtEgCpB,S;;AAAdK,K,CACZqB,S,GAAY;AACjBN,EAAAA,IAAI,EAAEnB,SAAS,CAAC0B,MADC;AAEjBN,EAAAA,KAAK,EAAEpB,SAAS,CAAC2B;AAFA,C;AADAvB,K,CAMZwB,Y,GAAe;AACpBT,EAAAA,IAAI,EAAE,EADc;AAEpBC,EAAAA,KAAK,EAAE;AAFa,C;SANHhB,K","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Animated, ART } from 'react-native';\nconst { Surface } = ART;\n\nimport Circle from './animated/Circle';\n\nexport default class Pulse extends Component {\n  static propTypes = {\n    size: PropTypes.number,\n    color: PropTypes.string\n  };\n\n  static defaultProps = {\n    size: 14,\n    color: '#000'\n  };\n\n  state = {\n    bounces: [\n      new Animated.Value(1),\n      new Animated.Value(0)\n    ]\n  };\n\n  componentDidMount() {\n    this.animate(0);\n    setTimeout(() => this.animate(1), 1000);\n  }\n\n  componentWillUnmount() {\n    this.unmounted = true;\n  }\n\n  animate(index) {\n    Animated\n      .sequence([\n        Animated.timing(this.state.bounces[index], {\n          toValue: 1,\n          duration: 1000\n        }),\n        Animated.timing(this.state.bounces[index], {\n          toValue: 0,\n          duration: 1000\n        })\n      ])\n      .start(() => {\n        if (!this.unmounted) {\n          this.animate(index);\n        }\n      });\n  }\n\n  render() {\n    const { size, color } = this.props;\n    const { bounces: [scale1, scale2] } = this.state;\n    const width = size * 2;\n    const height = size * 2;\n\n    return (<Surface width={width} height={height}>\n      <Circle\n        radius={size}\n        fill={color}\n        scale={scale1}\n        opacity={0.6}\n        x={size}\n        y={size}\n      />\n      <Circle\n        radius={size}\n        fill={color}\n        scale={scale2}\n        opacity={0.6}\n        x={size}\n        y={size}\n      />\n    </Surface>);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}