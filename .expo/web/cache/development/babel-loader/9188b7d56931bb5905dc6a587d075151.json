{"ast":null,"code":"import React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport * as selectors from \"../../reducers\";\nimport * as actions from \"../../actions/auth\";\n\nvar TokenRefresh = function TokenRefresh(_ref) {\n  var onRefresh = _ref.onRefresh,\n      _ref$reviewTime = _ref.reviewTime,\n      reviewTime = _ref$reviewTime === void 0 ? 50000 : _ref$reviewTime;\n  useEffect(function () {\n    var interval = setInterval(onRefresh, reviewTime);\n    return function () {\n      clearInterval(interval);\n    };\n  }, []);\n  return null;\n};\n\nexport default connect(function (state) {\n  return {\n    isAuthenticated: selectors.isAuthenticated(state)\n  };\n}, function (dispatch) {\n  return {\n    onRefresh: function onRefresh() {\n      dispatch(actions.startTokenRefresh());\n    }\n  };\n}, function (statetoProps, dispatchToProps) {\n  return {\n    onRefresh: function onRefresh() {\n      if (statetoProps.isAuthenticated) {\n        dispatchToProps.onRefresh();\n      }\n    }\n  };\n})(TokenRefresh);","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/src/components/TokenRefresh/index.js"],"names":["React","Fragment","useEffect","connect","selectors","actions","TokenRefresh","onRefresh","reviewTime","interval","setInterval","clearInterval","state","isAuthenticated","dispatch","startTokenRefresh","statetoProps","dispatchToProps"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AAGA,OAAO,KAAKC,SAAZ;AACA,OAAO,KAAKC,OAAZ;;AAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAuC;AAAA,MAApCC,SAAoC,QAApCA,SAAoC;AAAA,6BAAzBC,UAAyB;AAAA,MAAzBA,UAAyB,gCAAZ,KAAY;AAC1DN,EAAAA,SAAS,CACP,YAAM;AACJ,QAAMO,QAAQ,GAAGC,WAAW,CAACH,SAAD,EAAYC,UAAZ,CAA5B;AACA,WAAO,YAAM;AACXG,MAAAA,aAAa,CAACF,QAAD,CAAb;AACD,KAFD;AAGD,GANM,EAOP,EAPO,CAAT;AASA,SAAO,IAAP;AACD,CAXD;;AAcA,eAAeN,OAAO,CACpB,UAAAS,KAAK;AAAA,SAAK;AACRC,IAAAA,eAAe,EAAET,SAAS,CAACS,eAAV,CAA0BD,KAA1B;AADT,GAAL;AAAA,CADe,EAIpB,UAAAE,QAAQ;AAAA,SAAK;AACXP,IAAAA,SADW,uBACC;AACVO,MAAAA,QAAQ,CAACT,OAAO,CAACU,iBAAR,EAAD,CAAR;AACD;AAHU,GAAL;AAAA,CAJY,EASpB,UAACC,YAAD,EAAcC,eAAd;AAAA,SAAmC;AACjCV,IAAAA,SADiC,uBACtB;AACT,UAAGS,YAAY,CAACH,eAAhB,EAAgC;AAC9BI,QAAAA,eAAe,CAACV,SAAhB;AACD;AACF;AALgC,GAAnC;AAAA,CAToB,CAAP,CAgBbD,YAhBa,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\n// import './styles.css';\nimport * as selectors from '../../reducers';\nimport * as actions from '../../actions/auth';\n\n\nconst TokenRefresh = ({ onRefresh, reviewTime = 50000 }) => {\n  useEffect(\n    () => {\n      const interval = setInterval(onRefresh, reviewTime);\n      return () => {\n        clearInterval(interval);\n      };\n    },\n    []\n  );\n  return null;\n};\n\n\nexport default connect(\n  state => ({\n    isAuthenticated: selectors.isAuthenticated(state),\n  }),\n  dispatch => ({\n    onRefresh() {\n      dispatch(actions.startTokenRefresh());\n    },\n  }),\n  (statetoProps,dispatchToProps) => ({\n    onRefresh(){\n      if(statetoProps.isAuthenticated){\n        dispatchToProps.onRefresh()\n      }\n    }\n  })\n)(TokenRefresh);\n"]},"metadata":{},"sourceType":"module"}