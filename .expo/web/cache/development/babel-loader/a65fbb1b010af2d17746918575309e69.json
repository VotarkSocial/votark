{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = _regeneratorRuntime.mark(mainSaga);\n\nimport { fork, all } from 'redux-saga/effects';\nimport { watchLoginStarted, watchRefreshTokenStarted, watchSignupStarted, watchResetPassword } from \"./auth\";\nimport { watchVersusFetch, watchVoteFetch } from \"./versus\";\nimport { watchCommentFetch, watchCommentAddition } from \"./comments\";\n\nfunction mainSaga() {\n  return _regeneratorRuntime.wrap(function mainSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return all([fork(watchLoginStarted), fork(watchRefreshTokenStarted), fork(watchSignupStarted), fork(watchResetPassword), fork(watchVersusFetch), fork(watchVoteFetch), fork(watchCommentAddition), fork(watchCommentFetch)]);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nexport default mainSaga;","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/src/sagas/index.js"],"names":["mainSaga","fork","all","watchLoginStarted","watchRefreshTokenStarted","watchSignupStarted","watchResetPassword","watchVersusFetch","watchVoteFetch","watchCommentFetch","watchCommentAddition"],"mappings":";;uCAmBUA,Q;;AAnBV,SAASC,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AAEA,SACEC,iBADF,EAEEC,wBAFF,EAGEC,kBAHF,EAIEC,kBAJF;AAOA,SACEC,gBADF,EAEEC,cAFF;AAKA,SACEC,iBADF,EAEEC,oBAFF;;AAKA,SAAUV,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAME,GAAG,CAAC,CACRD,IAAI,CAACE,iBAAD,CADI,EAERF,IAAI,CAACG,wBAAD,CAFI,EAGRH,IAAI,CAACI,kBAAD,CAHI,EAIRJ,IAAI,CAACK,kBAAD,CAJI,EAKRL,IAAI,CAACM,gBAAD,CALI,EAMRN,IAAI,CAACO,cAAD,CANI,EAORP,IAAI,CAACS,oBAAD,CAPI,EAQRT,IAAI,CAACQ,iBAAD,CARI,CAAD,CAAT;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcA,eAAeT,QAAf","sourcesContent":["import { fork, all } from 'redux-saga/effects';\n\nimport {\n  watchLoginStarted,\n  watchRefreshTokenStarted,\n  watchSignupStarted,\n  watchResetPassword,\n} from './auth';\n\nimport {\n  watchVersusFetch,\n  watchVoteFetch,\n} from './versus'\n\nimport {\n  watchCommentFetch,\n  watchCommentAddition,\n} from './comments'\n\nfunction* mainSaga() {\n  yield all([\n    fork(watchLoginStarted),\n    fork(watchRefreshTokenStarted),\n    fork(watchSignupStarted),\n    fork(watchResetPassword),\n    fork(watchVersusFetch),\n    fork(watchVoteFetch),\n    fork(watchCommentAddition),\n    fork(watchCommentFetch)\n  ]);\n}\n\n\nexport default mainSaga;\n"]},"metadata":{},"sourceType":"module"}