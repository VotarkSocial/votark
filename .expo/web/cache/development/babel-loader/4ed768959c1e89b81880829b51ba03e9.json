{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/thecoder/Documentos/votark/votark/node_modules/react-native-loader/src/Pulse.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { ART } from \"react-native-web/dist/index\";\nvar Surface = ART.Surface;\nimport Circle from \"./animated/Circle\";\n\nvar Pulse = function (_Component) {\n  _inherits(Pulse, _Component);\n\n  var _super = _createSuper(Pulse);\n\n  function Pulse() {\n    var _this;\n\n    _classCallCheck(this, Pulse);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      pulse: new Animated.ValueXY({\n        x: 0.5,\n        y: 1\n      })\n    };\n    return _this;\n  }\n\n  _createClass(Pulse, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.animate();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unmounted = true;\n    }\n  }, {\n    key: \"animate\",\n    value: function animate() {\n      var _this2 = this;\n\n      Animated.timing(this.state.pulse, {\n        toValue: {\n          x: 1,\n          y: 0\n        },\n        duration: 1000\n      }).start(function () {\n        if (!_this2.unmounted) {\n          _this2.state.pulse.setValue({\n            x: 0,\n            y: 1\n          });\n\n          _this2.animate();\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          size = _this$props.size,\n          color = _this$props.color;\n      var pulse = this.state.pulse;\n      var width = size * 2;\n      var height = size * 2;\n      return React.createElement(Surface, {\n        width: width,\n        height: height,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      }, React.createElement(Circle, {\n        radius: size,\n        fill: color,\n        scale: pulse.x,\n        opacity: pulse.y,\n        x: size,\n        y: size,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return Pulse;\n}(Component);\n\nPulse.propTypes = {\n  size: PropTypes.number,\n  color: PropTypes.string\n};\nPulse.defaultProps = {\n  size: 14,\n  color: '#000'\n};\nexport { Pulse as default };","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/node_modules/react-native-loader/src/Pulse.js"],"names":["React","Component","PropTypes","ART","Surface","Circle","Pulse","state","pulse","Animated","ValueXY","x","y","animate","unmounted","timing","toValue","duration","start","setValue","props","size","color","width","height","propTypes","number","string","defaultProps"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;SACmBC,G;IACXC,O,GAAYD,G,CAAZC,O;AAER,OAAOC,MAAP;;IAEqBC,K;;;;;;;;;;;;;;;UAWnBC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,IAAIC,QAAQ,CAACC,OAAb,CAAqB;AAC1BC,QAAAA,CAAC,EAAE,GADuB;AAE1BC,QAAAA,CAAC,EAAE;AAFuB,OAArB;AADD,K;;;;;;wCAOY;AAClB,WAAKC,OAAL;AACD;;;2CAEsB;AACrB,WAAKC,SAAL,GAAiB,IAAjB;AACD;;;8BAES;AAAA;;AACRL,MAAAA,QAAQ,CACLM,MADH,CACU,KAAKR,KAAL,CAAWC,KADrB,EAC4B;AACxBQ,QAAAA,OAAO,EAAE;AACPL,UAAAA,CAAC,EAAE,CADI;AAEPC,UAAAA,CAAC,EAAE;AAFI,SADe;AAKxBK,QAAAA,QAAQ,EAAE;AALc,OAD5B,EAQGC,KARH,CAQS,YAAM;AACX,YAAI,CAAC,MAAI,CAACJ,SAAV,EAAqB;AACnB,UAAA,MAAI,CAACP,KAAL,CAAWC,KAAX,CAAiBW,QAAjB,CAA0B;AACxBR,YAAAA,CAAC,EAAE,CADqB;AAExBC,YAAAA,CAAC,EAAE;AAFqB,WAA1B;;AAIA,UAAA,MAAI,CAACC,OAAL;AACD;AACF,OAhBH;AAiBD;;;6BAEQ;AAAA,wBACiB,KAAKO,KADtB;AAAA,UACCC,IADD,eACCA,IADD;AAAA,UACOC,KADP,eACOA,KADP;AAAA,UAECd,KAFD,GAEW,KAAKD,KAFhB,CAECC,KAFD;AAGP,UAAMe,KAAK,GAAGF,IAAI,GAAG,CAArB;AACA,UAAMG,MAAM,GAAGH,IAAI,GAAG,CAAtB;AAEA,aAAQ,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAEE,KAAhB;AAAuB,QAAA,MAAM,EAAEC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACN,oBAAC,MAAD;AACE,QAAA,MAAM,EAAEH,IADV;AAEE,QAAA,IAAI,EAAEC,KAFR;AAGE,QAAA,KAAK,EAAEd,KAAK,CAACG,CAHf;AAIE,QAAA,OAAO,EAAEH,KAAK,CAACI,CAJjB;AAKE,QAAA,CAAC,EAAES,IALL;AAME,QAAA,CAAC,EAAEA,IANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADM,CAAR;AAUD;;;;EA9DgCpB,S;;AAAdK,K,CACZmB,S,GAAY;AACjBJ,EAAAA,IAAI,EAAEnB,SAAS,CAACwB,MADC;AAEjBJ,EAAAA,KAAK,EAAEpB,SAAS,CAACyB;AAFA,C;AADArB,K,CAMZsB,Y,GAAe;AACpBP,EAAAA,IAAI,EAAE,EADc;AAEpBC,EAAAA,KAAK,EAAE;AAFa,C;SANHhB,K","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Animated, ART } from 'react-native';\nconst { Surface } = ART;\n\nimport Circle from './animated/Circle';\n\nexport default class Pulse extends Component {\n  static propTypes = {\n    size: PropTypes.number,\n    color: PropTypes.string\n  };\n\n  static defaultProps = {\n    size: 14,\n    color: '#000'\n  };\n\n  state = {\n    pulse: new Animated.ValueXY({\n      x: 0.5,\n      y: 1\n    })\n  };\n\n  componentDidMount() {\n    this.animate();\n  }\n\n  componentWillUnmount() {\n    this.unmounted = true;\n  }\n\n  animate() {\n    Animated\n      .timing(this.state.pulse, {\n        toValue: {\n          x: 1,\n          y: 0\n        },\n        duration: 1000\n      })\n      .start(() => {\n        if (!this.unmounted) {\n          this.state.pulse.setValue({\n            x: 0,\n            y: 1\n          });\n          this.animate();\n        }\n      });\n  }\n\n  render() {\n    const { size, color } = this.props;\n    const { pulse } = this.state;\n    const width = size * 2;\n    const height = size * 2;\n\n    return (<Surface width={width} height={height}>\n      <Circle\n        radius={size}\n        fill={color}\n        scale={pulse.x}\n        opacity={pulse.y}\n        x={size}\n        y={size}\n      />\n    </Surface>);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}