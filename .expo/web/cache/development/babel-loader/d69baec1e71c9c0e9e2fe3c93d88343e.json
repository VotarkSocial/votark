{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/thecoder/Documentos/votark/votark/src/components/Camera/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport ImagePicker from 'react-native-image-picker';\nimport React, { useState, useEffect, useRef } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport styles from \"../Home/styles\";\nvar options = {\n  title: 'Select a photo',\n  takePhotoButtonTitle: 'Take a photo',\n  chooseFromLibraryButtonTitle: 'Chose from gallery',\n  quality: 1\n};\n\nvar MyCamera = function MyCamera() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      uri = _useState2[0],\n      changeUri = _useState2[1];\n\n  var selectPhoto = function selectPhoto() {\n    ImagePicker.showImagePicker(options, function (response) {\n      console.log('Response = ', response);\n\n      if (response.didCancel) {\n        console.log('User cancelled image picker');\n      } else if (response.error) {\n        console.log('ImagePicker Error: ', response.error);\n      } else if (response.customButton) {\n        console.log('User tapped custom button: ', response.customButton);\n      } else {\n        var source = {\n          uri: response.uri\n        };\n        changeUri(source);\n      }\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 3\n    }\n  }, React.createElement(Image, {\n    style: styles.image,\n    source: {\n      uri: uri.uri\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: selectPhoto,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"Select\")));\n};\n\nexport default connect(function (state) {\n  return {\n    isAuthenticated: selectors.isAuthenticated(state)\n  };\n}, function (dispatch) {\n  return {\n    takePicture: function takePicture(data) {\n      dispatch(setPicture(data.uri.startsWith('file://') ? data.uri.substr('file://'.length) : data.uri));\n    }\n  };\n}, function (stateToProps, disptachToProps) {\n  if (!stateToProps.isAuthenticated) {\n    if (typeof document !== 'undefined') {\n      window.location.href = URL + 'login/';\n    } else {\n      Actions.replace('Login');\n    }\n  }\n\n  return _objectSpread(_objectSpread({}, disptachToProps), stateToProps);\n})(MyCamera);","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/src/components/Camera/index.js"],"names":["ImagePicker","React","useState","useEffect","useRef","styles","options","title","takePhotoButtonTitle","chooseFromLibraryButtonTitle","quality","MyCamera","uri","changeUri","selectPhoto","showImagePicker","response","console","log","didCancel","error","customButton","source","container","image","connect","state","isAuthenticated","selectors","dispatch","takePicture","data","setPicture","startsWith","substr","length","stateToProps","disptachToProps","document","window","location","href","URL","Actions","replace"],"mappings":"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","sourcesContent":["import ImagePicker from 'react-native-image-picker';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Text, View, TouchableOpacity, Image } from 'react-native';\nimport styles from '../Home/styles';\n\nconst options = {\n  title: 'Select a photo',\n  takePhotoButtonTitle: 'Take a photo',\n  chooseFromLibraryButtonTitle: 'Chose from gallery',\n  quality: 1,\n};\n\n\nconst MyCamera = () => {\n\n\n  const [uri, changeUri] = useState('')\n  \n  const selectPhoto = () => {\n    ImagePicker.showImagePicker(options, (response) => {\n      console.log('Response = ', response);\n    \n      if (response.didCancel) {\n        console.log('User cancelled image picker');\n      } else if (response.error) {\n        console.log('ImagePicker Error: ', response.error);\n      } else if (response.customButton) {\n        console.log('User tapped custom button: ', response.customButton);\n      } else {\n        const source = { uri: response.uri };\n    \n        // You can also display the image using data:\n        // const source = { uri: 'data:image/jpeg;base64,' + response.data };\n    \n        changeUri(source)\n      }\n    });\n  }\n  \n  return (\n  <View style={styles.container}>\n\n    <Image  \n          style={styles.image}\n          source={{uri: uri.uri}}/>\n    <TouchableOpacity onPress={selectPhoto}>\n        <Text>Select</Text>\n    </TouchableOpacity>\n  </View>\n)}\n\n\nexport default connect(\n  state => ({\n    isAuthenticated: selectors.isAuthenticated(state),\n  }),\n  dispatch=>({\n    takePicture(data){\n      dispatch(setPicture(data.uri.startsWith('file://')\n      ? data.uri.substr('file://'.length)\n      : data.uri))\n    }\n  }),\n  (stateToProps,disptachToProps) => {\n    if(!stateToProps.isAuthenticated){\n      if(typeof document !== 'undefined'){\n        window.location.href = URL+'login/'\n      }\n      else{\n        Actions.replace('Login')\n      }\n    }\n    return ({...disptachToProps,...stateToProps})\n  }\n)(MyCamera);\n\n\n\n\n\n\n\n\n\n// import React, { useState, useEffect, useRef } from 'react';\n// import { Text, View, TouchableOpacity, Image } from 'react-native';\n// import { Camera } from 'expo-camera'; \n// import styles from  './styles'\n// import TokenRefresh from '../TokenRefresh';\n// import { Actions } from 'react-native-router-flux';\n// import { connect } from 'react-redux';\n// import * as selectors from '../../reducers'\n// import { setPicture } from '../../actions/newPost';\n\n// const MyCamera = ({takePicture}) => {\n//   const [hasPermission, setHasPermission] = useState(null);\n//   const [cameraRef, setCameraRef] = useState(null)\n//   const [uri, changeUri] = useState('')\n\n\n//   const [type, setType] = useState(Camera.Constants.Type.back);useEffect(() => {\n//     (async () => {\n//       const { status } = await Camera.requestPermissionsAsync();\n//       setHasPermission(status === 'granted');\n//     })();\n//   }, []);\n  \n  \n//   if (hasPermission === null) {\n//     return <View />;\n//   }\n//   if (hasPermission === false) {\n//     return <Text>No access to camera</Text>;\n//   }\n//   return (\n//     <View style={styles.mainContainer}>\n//         {uri?\n//           <Image  \n//           style={styles.image}\n//           source={{uri: uri}} />\n//         :\n//           <Camera style={styles.camera} type={type} ref={ref => {\n//             setCameraRef(ref) ;\n//           }}>\n        \n//           <View\n//             style={styles.container}>\n//             <TouchableOpacity\n//               style={styles.iconContainer}\n//               onPress={() => {\n//                 setType(\n//                   type === Camera.Constants.Type.back\n//                     ? Camera.Constants.Type.front\n//                     : Camera.Constants.Type.back\n//                 );\n//               }}>\n//               <Image style={styles.icon} source={require('../../public/static/icon/frontal.png')} />\n//             </TouchableOpacity>\n//             <TouchableOpacity onPress={async() => {\n//               if(cameraRef){\n//                 let photo = await cameraRef.takePictureAsync();\n//                 changeUri(photo.uri)\n//               }\n//             }}>\n//               <View style={styles.pictureButton1}\n//               >\n//                 <View style={styles.pictureButton2} >\n//                 </View>\n//               </View>\n//             </TouchableOpacity>\n//             <TouchableOpacity\n//               style={styles.iconContainer}\n//               onPress={() => {\n//                  Actions.replace('Home')\n//               }}>\n//               <Image style={styles.icon} source={require('../../public/static/icon/close.png')} />\n//             </TouchableOpacity>\n//           </View>\n//         </Camera>\n//         }\n//       <TokenRefresh/>\n//     </View>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}