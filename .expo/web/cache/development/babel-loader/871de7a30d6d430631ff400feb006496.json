{"ast":null,"code":"export default {\n  isFileURI: function isFileURI(uri) {\n    if (typeof uri !== 'string') return false;\n    return /^RNFetchBlob-file\\:\\/\\//.test(uri);\n  },\n  isJSONStreamURI: function isJSONStreamURI(uri) {\n    if (typeof uri !== 'string') return false;\n    return /^JSONStream\\:\\/\\//.test(uri);\n  },\n  removeURIScheme: function removeURIScheme(uri, iterations) {\n    iterations = iterations || 1;\n    var result = uri;\n\n    for (var i = 0; i < iterations; i++) {\n      result = String(result).replace(/^[^\\:]+\\:\\/\\//, '');\n    }\n\n    return String(result);\n  },\n  unwrapFileURI: function unwrapFileURI(uri) {\n    return String(uri).replace(/^RNFetchBlob-file\\:\\/\\//, '');\n  }\n};","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/node_modules/react-native-fetch-blob/utils/uri.js"],"names":["isFileURI","uri","test","isJSONStreamURI","removeURIScheme","iterations","result","i","String","replace","unwrapFileURI"],"mappings":"AAAA,eAAe;AAEbA,EAAAA,SAAS,EAAG,mBAACC,GAAD,EAAwB;AAClC,QAAG,OAAOA,GAAP,KAAe,QAAlB,EACE,OAAO,KAAP;AACF,WAAO,0BAA0BC,IAA1B,CAA+BD,GAA/B,CAAP;AACD,GANY;AAQbE,EAAAA,eAAe,EAAG,yBAACF,GAAD,EAAwB;AACxC,QAAG,OAAOA,GAAP,KAAe,QAAlB,EACE,OAAO,KAAP;AACF,WAAO,oBAAoBC,IAApB,CAAyBD,GAAzB,CAAP;AACD,GAZY;AAcbG,EAAAA,eAAe,EAAG,yBAACH,GAAD,EAAaI,UAAb,EAA0C;AAC1DA,IAAAA,UAAU,GAAGA,UAAU,IAAI,CAA3B;AACA,QAAIC,MAAM,GAAGL,GAAb;;AACA,SAAI,IAAIM,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACF,UAAd,EAAyBE,CAAC,EAA1B,EAA8B;AAC5BD,MAAAA,MAAM,GAAGE,MAAM,CAACF,MAAD,CAAN,CAAeG,OAAf,CAAuB,eAAvB,EAAwC,EAAxC,CAAT;AACD;;AACD,WAAOD,MAAM,CAACF,MAAD,CAAb;AACD,GArBY;AAuBbI,EAAAA,aAAa,EAAG,uBAACT,GAAD,EAAuB;AACrC,WAAOO,MAAM,CAACP,GAAD,CAAN,CAAYQ,OAAZ,CAAoB,yBAApB,EAA+C,EAA/C,CAAP;AACD;AAzBY,CAAf","sourcesContent":["export default {\n\n  isFileURI : (uri:string):boolean => {\n    if(typeof uri !== 'string')\n      return false\n    return /^RNFetchBlob-file\\:\\/\\//.test(uri)\n  },\n\n  isJSONStreamURI : (uri:string):boolean => {\n    if(typeof uri !== 'string')\n      return false\n    return /^JSONStream\\:\\/\\//.test(uri)\n  },\n\n  removeURIScheme : (uri:string, iterations:number):string => {\n    iterations = iterations || 1\n    let result = uri\n    for(let i=0;i<iterations;i++) {\n      result = String(result).replace(/^[^\\:]+\\:\\/\\//, '')\n    }\n    return String(result)\n  },\n\n  unwrapFileURI : (uri:string):string => {\n    return String(uri).replace(/^RNFetchBlob-file\\:\\/\\//, '')\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}