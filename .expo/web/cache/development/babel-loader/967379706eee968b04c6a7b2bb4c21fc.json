{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/thecoder/Documentos/votark/votark/src/components/Chats/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { connect } from 'react-redux';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport * as selectors from \"../../reducers\";\nimport React, { useEffect } from 'react';\nimport styles from \"./styles\";\nimport { URL } from \"../../../configuration\";\nimport { Actions } from 'react-native-router-flux';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { colors } from \"../../../configuration\";\nimport { logout } from \"../../actions/auth\";\nimport NavBar from \"../NavBar\";\nimport TokenRefresh from \"../TokenRefresh\";\nimport { startFetchingChats } from \"../../actions/chat\";\n\nvar Chats = function Chats(_ref) {\n  var add = _ref.add,\n      chats = _ref.chats,\n      error = _ref.error,\n      isFetching = _ref.isFetching,\n      fetch = _ref.fetch;\n  useEffect(function () {\n    var interval = setInterval(fetch, 500);\n    return function () {\n      clearInterval(interval);\n    };\n  }, []);\n  return React.createElement(View, {\n    style: styles.main_container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, React.createElement(LinearGradient, {\n    colors: [colors.primaryB, 'transparent'],\n    style: {\n      width: '100%',\n      height: '100%',\n      flexDirection: 'column',\n      alignItems: 'flex-start',\n      justifyContent: 'flex-start'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: typeof document === 'undefined' ? styles.container : styles.webcontainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, \"CHATS\")), React.createElement(TouchableOpacity, {\n    style: styles.row,\n    onClick: add,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    style: styles.icon,\n    source: require(\"../../public/static/icon/add.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }))), React.createElement(ScrollView, {\n    style: styles.section,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.elements,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, !error ? !isFetching ? React.createElement(View, {\n    style: styles.item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, chats.length !== 0 ? chats.map(function (chat) {\n    return React.createElement(TouchableOpacity, {\n      key: chat.id,\n      style: styles.item,\n      onPress: function onPress() {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }\n    }, React.createElement(View, {\n      style: styles.row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 33\n      }\n    }, React.createElement(Image, {\n      style: styles.photo,\n      source: chat.picture ? {\n        uri: STATIC_URL + chat.picture\n      } : require(\"../../public/static/icon/user.png\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 37\n      }\n    }), React.createElement(Text, {\n      style: styles.element,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 37\n      }\n    }, \" \", chat.name)), React.createElement(View, {\n      style: styles.bar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 33\n      }\n    }));\n  }) : React.createElement(Text, {\n    style: styles.element,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }\n  }, \"NO CURRENT CHATS\")) : React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 20\n    }\n  }, 'LOADING...') : React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 19\n    }\n  }, userError)))), React.createElement(NavBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }), React.createElement(TokenRefresh, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default connect(function (state) {\n  return {\n    isAuthenticated: selectors.isAuthenticated(state),\n    error: selectors.getErrorChat(state),\n    isFetching: selectors.getisFetchingChat(state),\n    chats: selectors.getChats(state)\n  };\n}, function (dispatch) {\n  return {\n    add: function add() {},\n    fetch: function fetch() {\n      dispatch(startFetchingChats());\n    }\n  };\n}, function (stateToProps, disptachToProps) {\n  if (!stateToProps.isAuthenticated) {\n    if (typeof document !== 'undefined') {\n      window.location.href = URL + 'login/';\n    } else {\n      Actions.replace('Login');\n    }\n  }\n\n  return _objectSpread(_objectSpread({}, disptachToProps), stateToProps);\n})(Chats);","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/src/components/Chats/index.js"],"names":["connect","selectors","React","useEffect","styles","URL","Actions","LinearGradient","colors","logout","NavBar","TokenRefresh","startFetchingChats","Chats","add","chats","error","isFetching","fetch","interval","setInterval","clearInterval","main_container","primaryB","width","height","flexDirection","alignItems","justifyContent","document","container","webcontainer","row","text","icon","require","section","elements","item","length","map","chat","id","photo","picture","uri","STATIC_URL","element","name","bar","userError","state","isAuthenticated","getErrorChat","getisFetchingChat","getChats","dispatch","stateToProps","disptachToProps","window","location","href","replace"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport {Text, View, Image, TouchableOpacity, ScrollView } from 'react-native';\nimport * as selectors from '../../reducers'\nimport React, {useEffect} from 'react';\nimport styles from './styles'\nimport { URL } from '../../../configuration'\nimport { Actions } from 'react-native-router-flux';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { colors } from '../../../configuration';\nimport { logout } from '../../actions/auth';\nimport NavBar from '../NavBar';\nimport TokenRefresh from '../TokenRefresh';\nimport { startFetchingChats } from '../../actions/chat';\n\n\nconst Chats = ({add, chats,error,isFetching,fetch}) => {\n    \n    useEffect(\n        () => {\n          const interval = setInterval(fetch, 500);\n          return () => {\n            clearInterval(interval);\n          };\n        },\n        []\n      );\n    \n    return (\n    <View style={styles.main_container}>\n    <LinearGradient\n        colors={[colors.primaryB, 'transparent']}\n        style={{\n            width: '100%',\n            height: '100%',\n            flexDirection: 'column',\n            alignItems: 'flex-start',\n            justifyContent: 'flex-start'\n        }}\n        >\n        <View style={(typeof document==='undefined')?styles.container:styles.webcontainer}>\n            <View style={styles.row}>\n                <Text style={styles.text} >{\"CHATS\"}</Text>\n            </View>\n            <TouchableOpacity style={styles.row} onClick={add}>\n                <Image style={styles.icon} source={require('../../public/static/icon/add.png')} />\n            </TouchableOpacity>   \n        </View>\n        <ScrollView style={styles.section}>\n            <View style={styles.elements}>\n                {(!error)?(!isFetching)?(\n                    <View style={styles.item}>\n                        {\n                            chats.length!==0?\n                        chats.map(chat =>\n                            <TouchableOpacity key={chat.id} style={styles.item} onPress={()=>{\n                                \n                            }}>\n                                <View style={styles.row}>\n                                    <Image style={styles.photo} source={chat.picture?{uri: STATIC_URL + chat.picture}:require('../../public/static/icon/user.png')}/>\n                                    <Text style={styles.element} > { chat.name }</Text>\n                                </View>\n                                <View style={styles.bar}></View>\n                            </TouchableOpacity>\n                            ):\n                            <Text style={styles.element} >NO CURRENT CHATS</Text>\n                        }\n                    </View>\n                ):(<Text>{'LOADING...'}</Text>)\n                :(<Text>{userError}</Text>)\n                }\n            </View>\n        </ScrollView>\n    </LinearGradient>\n    <NavBar/>\n    <TokenRefresh/>\n    </View>\n)};\n\nexport default connect(\n  state => ({\n    isAuthenticated: selectors.isAuthenticated(state),\n    error: selectors.getErrorChat(state),\n    isFetching: selectors.getisFetchingChat(state),\n    chats: selectors.getChats(state),\n  }),\n  dispatch => ({\n      add(){\n\n      },\n      fetch(){\n          dispatch(startFetchingChats())\n      }\n  }),\n  (stateToProps,disptachToProps) => {\n    if(!stateToProps.isAuthenticated){\n      if(typeof document !== 'undefined'){\n        window.location.href = URL+'login/'\n      }\n      else{\n        Actions.replace('Login')\n      }\n    }\n    return ({...disptachToProps,...stateToProps})\n  }\n)(Chats);"]},"metadata":{},"sourceType":"module"}