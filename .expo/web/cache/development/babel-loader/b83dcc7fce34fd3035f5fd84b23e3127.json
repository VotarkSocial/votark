{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/thecoder/Documentos/votark/votark/src/components/Comments/index.js\";\nimport { connect } from 'react-redux';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as selectors from \"../../reducers\";\nimport React, { useState } from 'react';\nimport styles from \"./styles\";\nimport { URL } from \"../../../configuration\";\nimport { Actions } from 'react-native-router-flux';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { colors } from \"../../../configuration\";\nimport Header from \"../Header\";\nimport Stories from \"../Stories\";\nimport NavBar from \"../NavBar\";\nimport VersusPad from \"../VersusPad\";\n\nvar Comments = function Comments(_ref) {\n  var comments = _ref.comments;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      comment = _useState2[0],\n      changeComment = _useState2[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 3\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.comments,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, comments.map(function (comm) {\n    return React.createElement(Text, {\n      style: styles.comment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, comm.content);\n  })), React.createElement(View, {\n    style: styles.row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    className: \"user\",\n    type: \"text\",\n    placeholder: \"Write a Comment...\",\n    value: comment,\n    onChangeText: changeComment,\n    onChange: function onChange(e) {\n      return changeComment(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.send,\n    type: \"submit\",\n    onPress: function onPress() {\n      return Actions.ResetPassword(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, ' Send ')));\n};\n\nexport default connect(function (state) {\n  return {\n    isAuthenticated: selectors.isAuthenticated(state),\n    comments: selectors.getComments(state)\n  };\n}, undefined)(Comments);","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/src/components/Comments/index.js"],"names":["connect","selectors","React","useState","styles","URL","Actions","LinearGradient","colors","Header","Stories","NavBar","VersusPad","Comments","comments","comment","changeComment","container","map","comm","content","row","input","e","target","value","send","ResetPassword","state","isAuthenticated","getComments","undefined"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,aAAxB;;;;;;AAEA,OAAO,KAAKC,SAAZ;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP;AACA,SAASC,GAAT;AACA,SAASC,OAAT,QAAwB,0BAAxB;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,MAAT;AACA,OAAOC,MAAP;AACA,OAAOC,OAAP;AACA,OAAOC,MAAP;AACA,OAAOC,SAAP;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAgB;AAAA,MAAdC,QAAc,QAAdA,QAAc;;AAAA,kBACIX,QAAQ,CAAC,EAAD,CADZ;AAAA;AAAA,MACtBY,OADsB;AAAA,MACbC,aADa;;AAE7B,SACF,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEZ,MAAM,CAACa,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEb,MAAM,CAACU,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIA,QAAQ,CAACI,GAAT,CAAa,UAAAC,IAAI;AAAA,WACf,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEf,MAAM,CAACW,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BI,IAAI,CAACC,OAApC,CADe;AAAA,GAAjB,CAFJ,CADJ,EAQI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEhB,MAAM,CAACiB,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,oBAAC,SAAD;AACA,IAAA,KAAK,EAAEjB,MAAM,CAACkB,KADd;AAEA,IAAA,SAAS,EAAC,MAFV;AAGA,IAAA,IAAI,EAAC,MAHL;AAIA,IAAA,WAAW,EAAC,oBAJZ;AAKA,IAAA,KAAK,EAAEP,OALP;AAMA,IAAA,YAAY,EAAEC,aANd;AAOA,IAAA,QAAQ,EAAE,kBAAAO,CAAC;AAAA,aAAIP,aAAa,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB;AAAA,KAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADN,EAUM,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAErB,MAAM,CAACsB,IAApB;AAA0B,IAAA,IAAI,EAAC,QAA/B;AACA,IAAA,OAAO,EAAE;AAAA,aACPpB,OAAO,CAACqB,aAAR,CAAsB,IAAtB,CADO;AAAA,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGG,QAHH,CAVN,CARJ,CADE;AAyBF,CA3BF;;AA6BA,eAAe3B,OAAO,CACpB,UAAA4B,KAAK;AAAA,SAAK;AACRC,IAAAA,eAAe,EAAE5B,SAAS,CAAC4B,eAAV,CAA0BD,KAA1B,CADT;AAERd,IAAAA,QAAQ,EAAEb,SAAS,CAAC6B,WAAV,CAAsBF,KAAtB;AAFF,GAAL;AAAA,CADe,EAKpBG,SALoB,CAAP,CAMblB,QANa,CAAf","sourcesContent":["import { connect } from 'react-redux';\nimport {Text, View, Image, TextInput, TouchableOpacity } from 'react-native';\nimport * as selectors from '../../reducers'\nimport React, { useState } from 'react';\nimport styles from './styles'\nimport { URL } from '../../../configuration'\nimport { Actions } from 'react-native-router-flux';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { colors } from '../../../configuration';\nimport Header from '../Header';\nimport Stories from '../Stories';\nimport NavBar from '../NavBar';\nimport VersusPad from '../VersusPad';\n\nconst Comments = ({comments}) => {\n    const [comment, changeComment] = useState('');\n    return (\n  <View style={styles.container}>\n      <TouchableOpacity style={styles.comments}>\n        {\n          comments.map(comm => \n            <Text style={styles.comment} >{comm.content}</Text>\n            )\n        }\n      </TouchableOpacity>\n      <View style={styles.row}>\n            <TextInput\n            style={styles.input}\n            className=\"user\"\n            type=\"text\"\n            placeholder=\"Write a Comment...\"\n            value={comment}   \n            onChangeText={changeComment}\n            onChange={e => changeComment(e.target.value)}\n            />\n            <Text style={styles.send} type=\"submit\" \n            onPress={() =>\n              Actions.ResetPassword(true)\n            }>{' Send '}</Text>\n      </View>\n</View>\n)};\n\nexport default connect(\n  state => ({\n    isAuthenticated: selectors.isAuthenticated(state),\n    comments: selectors.getComments(state)\n  }),\n  undefined,\n)(Comments);\n"]},"metadata":{},"sourceType":"module"}