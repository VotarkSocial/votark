{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/thecoder/Documentos/votark/votark/src/components/ResetPassword/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Link } from \"react-router-dom\";\nimport { Actions } from 'react-native-router-flux';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { connect } from 'react-redux';\nimport { validateEmail } from \"../../utils/validate\";\nimport * as selectors from \"../../reducers\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React, { useState } from 'react';\nimport styles from \"./styles\";\nimport { colors } from \"../../../configuration\";\nimport * as actions from \"../../actions/auth\";\nimport { URL } from \"../../../configuration\";\n\nvar ResetPassword = function ResetPassword(_ref) {\n  var onSubmit = _ref.onSubmit,\n      isLoading = _ref.isLoading,\n      _ref$error = _ref.error,\n      error = _ref$error === void 0 ? null : _ref$error,\n      hasReset = _ref.hasReset,\n      onBack = _ref.onBack;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      changeEmail = _useState2[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(LinearGradient, {\n    colors: [colors.primary, 'transparent'],\n    style: {\n      width: '100%',\n      height: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.centered,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    style: styles.logo,\n    source: require(\"../../public/static/img/logo.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    className: \"email\",\n    type: \"email\",\n    placeholder: \"email\",\n    value: email,\n    onChangeText: changeEmail,\n    onChange: function onChange(e) {\n      return changeEmail(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.errors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, error && React.createElement(Text, {\n    style: styles.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, error), isLoading ? React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, 'LOADING...')) : hasReset ? React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, 'AN EMAIL WAS SENT WITH YOUR NEW PASSWORD'), React.createElement(View, {\n    style: styles.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    type: \"submit\",\n    onPress: function onPress() {\n      return onBack();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, ' GO BACK '))) : React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.button,\n    type: \"submit\",\n    onPress: function onPress() {\n      return onSubmit(email);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, 'SEND EMAIL')), React.createElement(View, {\n    style: styles.option,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, \"Did you remember your password? \"), typeof document === 'undefined' ? React.createElement(Text, {\n    style: styles.link,\n    title: ' login ',\n    type: \"submit\",\n    onPress: function onPress() {\n      return Actions.Login(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, ' login ') : React.createElement(Link, {\n    to: \"/login\",\n    style: styles.navItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }, ' login '))))))));\n};\n\nexport default connect(function (state) {\n  return {\n    isLoading: selectors.isReseting(state),\n    error: selectors.resetError(state),\n    hasReset: selectors.hasreset(state),\n    isAuthenticated: selectors.isAuthenticated(state)\n  };\n}, function (dispatch) {\n  return {\n    onSubmit: function onSubmit(email) {\n      if (validateEmail(email)) {\n        dispatch(actions.startPasswordResetProcess(email));\n      } else {\n        dispatch(actions.failReset(\"WRITE A VALID EMAIL\"));\n      }\n    },\n    onBack: function onBack() {\n      dispatch(actions.failReset(''));\n\n      if (typeof document !== 'undefined') {\n        window.location.href = URL;\n      } else {\n        Actions.Home(true);\n      }\n    }\n  };\n}, function (stateToProps, disptachToProps) {\n  if (stateToProps.isAuthenticated) {\n    if (typeof document !== 'undefined') {\n      window.location.href = URL;\n    } else {\n      Actions.Home(true);\n    }\n  }\n\n  return _objectSpread(_objectSpread({}, disptachToProps), stateToProps);\n})(ResetPassword);","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/src/components/ResetPassword/index.js"],"names":["Link","Actions","LinearGradient","connect","validateEmail","selectors","React","useState","styles","colors","actions","URL","ResetPassword","onSubmit","isLoading","error","hasReset","onBack","email","changeEmail","container","primary","width","height","alignItems","justifyContent","centered","logo","require","input","e","target","value","errors","button","option","text","document","link","Login","navItem","state","isReseting","resetError","hasreset","isAuthenticated","dispatch","startPasswordResetProcess","failReset","window","location","href","Home","stateToProps","disptachToProps"],"mappings":"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","sourcesContent":["import { Link } from \"react-router-dom\";\nimport { Actions } from 'react-native-router-flux';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { connect } from 'react-redux';\nimport { validateEmail } from '../../utils/validate';\nimport * as selectors from '../../reducers';\nimport { Text, View, TextInput, Button, Image } from 'react-native';\nimport React, { useState } from 'react';\nimport styles from './styles'\nimport { colors } from '../../../configuration';\nimport * as actions from '../../actions/auth';\nimport { URL } from '../../../configuration'\n\nconst ResetPassword = ({\n  onSubmit,\n  isLoading,\n  error = null,\n  hasReset,\n  onBack,\n}) => {\n  const [email, changeEmail] = useState('');\n  return (\n    <View style={styles.container}>\n      <LinearGradient\n          colors={[colors.primary, 'transparent']}\n          style={{\n            width: '100%',\n            height: '100%',\n            alignItems: 'center',\n            justifyContent: 'center'\n          }}\n        >\n      <View style={styles.centered}>\n      <Image style={styles.logo} source={require('../../public/static/img/logo.png')} ></Image>\n      <TextInput\n        style={styles.input}\n        className=\"email\"\n        type=\"email\"\n        placeholder=\"email\"\n        value={email}   \n        onChangeText={changeEmail}\n        onChange={e => changeEmail(e.target.value)}\n      />\n      <View style={styles.errors}>\n        {\n        error && (\n            <Text style={styles.error}>{ error }</Text>\n        )\n      }\n        {\n          isLoading ? (\n            <View>\n              <Text style={styles.error}>{'LOADING...'}</Text>\n            </View>\n          ) : (\n            hasReset ? (\n                <View>\n                <Text style={styles.error}>{'AN EMAIL WAS SENT WITH YOUR NEW PASSWORD'}</Text>\n                    <View style={styles.button}>\n                        <Text style={styles.button} type=\"submit\" onPress={\n                            () => onBack()\n                        }>{' GO BACK '}</Text>\n                    </View>\n                </View>\n            ):(\n                <View> \n                    <View style={styles.button}>\n                        <Text style={styles.button} type=\"submit\" onPress={\n                            () => onSubmit(email)\n                        }>{'SEND EMAIL'}</Text>\n                    </View>\n                <View style={styles.option}>\n                    <Text style={styles.text} >{\"Did you remember your password? \"}</Text>\n                    {\n                    (typeof document === 'undefined')?(\n                        <Text style={styles.link} title={' login '} type=\"submit\" \n                        onPress={() =>\n                        Actions.Login(true)\n                        }>{' login '}</Text>\n                    ):(\n                        <Link to=\"/login\" style={styles.navItem}>\n                        <Text style={styles.text}>{' login '}</Text>\n                        </Link>\n                    )\n                    }\n                    \n                </View>\n                </View>\n            )\n          )\n        }\n      </View>\n      </View>\n      </LinearGradient>\n    </View>\n  );\n} \n\nexport default connect(\n    state => ({\n      isLoading: selectors.isReseting(state),\n      error: selectors.resetError(state),\n      hasReset: selectors.hasreset(state),\n      isAuthenticated: selectors.isAuthenticated(state),\n    }),\n    dispatch => ({\n      onSubmit(email) {\n          if(validateEmail(email)){\n              dispatch(actions.startPasswordResetProcess(email))\n          }\n          else{\n            dispatch(actions.failReset(\"WRITE A VALID EMAIL\"))\n          }\n      },\n      onBack(){\n        dispatch(actions.failReset(''))\n        if(typeof document !== 'undefined'){\n            window.location.href = URL\n        }\n        else{\n            Actions.Home(true)\n        }\n      } \n    }),\n    (stateToProps,disptachToProps) => {\n      if(stateToProps.isAuthenticated){\n        if(typeof document !== 'undefined'){\n          window.location.href = URL\n        }\n        else{\n          Actions.Home(true)\n        }\n      }\n      return ({...disptachToProps,...stateToProps})\n    }\n  )(ResetPassword);\n  "]},"metadata":{},"sourceType":"module"}