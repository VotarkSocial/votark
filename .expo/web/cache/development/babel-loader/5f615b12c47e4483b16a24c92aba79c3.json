{"ast":null,"code":"'use strict';\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _assertThisInitialized = require(\"@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nvar _jsxFileName = \"/home/thecoder/Documentos/votark/votark/node_modules/react-native-cached-image/CachedImage.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar _ = require('lodash');\n\nvar React = require('react');\n\nvar ReactNative = require(\"react-native-web/dist/index\");\n\nvar PropTypes = require('prop-types');\n\nvar ImageCacheManagerOptionsPropTypes = require(\"./ImageCacheManagerOptionsPropTypes\");\n\nvar flattenStyle = ReactNative.StyleSheet.flatten;\n\nvar ImageCacheManager = require(\"./ImageCacheManager\");\n\nvar View = ReactNative.View,\n    ImageBackground = ReactNative.ImageBackground,\n    ActivityIndicator = ReactNative.ActivityIndicator,\n    NetInfo = ReactNative.NetInfo,\n    Platform = ReactNative.Platform,\n    StyleSheet = ReactNative.StyleSheet;\nvar styles = StyleSheet.create({\n  image: {\n    backgroundColor: 'transparent'\n  },\n  loader: {\n    backgroundColor: 'transparent'\n  },\n  loaderPlaceholder: {\n    backgroundColor: 'transparent',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\n\nfunction getImageProps(props) {\n  return _.omit(props, ['source', 'defaultSource', 'fallbackSource', 'LoadingIndicator', 'activityIndicatorProps', 'style', 'useQueryParamsInCacheKey', 'renderImage', 'resolveHeaders']);\n}\n\nvar CACHED_IMAGE_REF = 'cachedImage';\n\nvar CachedImage = function (_React$Component) {\n  _inherits(CachedImage, _React$Component);\n\n  var _super = _createSuper(CachedImage);\n\n  function CachedImage(props) {\n    var _this;\n\n    _classCallCheck(this, CachedImage);\n\n    _this = _super.call(this, props);\n    _this._isMounted = false;\n    _this.state = {\n      isCacheable: true,\n      cachedImagePath: null,\n      networkAvailable: true\n    };\n    _this.getImageCacheManagerOptions = _this.getImageCacheManagerOptions.bind(_assertThisInitialized(_this));\n    _this.getImageCacheManager = _this.getImageCacheManager.bind(_assertThisInitialized(_this));\n    _this.safeSetState = _this.safeSetState.bind(_assertThisInitialized(_this));\n    _this.handleConnectivityChange = _this.handleConnectivityChange.bind(_assertThisInitialized(_this));\n    _this.processSource = _this.processSource.bind(_assertThisInitialized(_this));\n    _this.renderLoader = _this.renderLoader.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CachedImage, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      this._isMounted = true;\n      NetInfo.isConnected.addEventListener('connectionChange', this.handleConnectivityChange);\n      NetInfo.isConnected.fetch().then(function (isConnected) {\n        _this2.safeSetState({\n          networkAvailable: isConnected\n        });\n      });\n      this.processSource(this.props.source);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n      NetInfo.isConnected.removeEventListener('connectionChange', this.handleConnectivityChange);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (!_.isEqual(this.props.source, nextProps.source)) {\n        this.processSource(nextProps.source);\n      }\n    }\n  }, {\n    key: \"setNativeProps\",\n    value: function setNativeProps(nativeProps) {\n      try {\n        this.refs[CACHED_IMAGE_REF].setNativeProps(nativeProps);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n  }, {\n    key: \"getImageCacheManagerOptions\",\n    value: function getImageCacheManagerOptions() {\n      return _.pick(this.props, _.keys(ImageCacheManagerOptionsPropTypes));\n    }\n  }, {\n    key: \"getImageCacheManager\",\n    value: function getImageCacheManager() {\n      if (this.context && this.context.getImageCacheManager) {\n        return this.context.getImageCacheManager();\n      }\n\n      var options = this.getImageCacheManagerOptions();\n      return ImageCacheManager(options);\n    }\n  }, {\n    key: \"safeSetState\",\n    value: function safeSetState(newState) {\n      if (!this._isMounted) {\n        return;\n      }\n\n      return this.setState(newState);\n    }\n  }, {\n    key: \"handleConnectivityChange\",\n    value: function handleConnectivityChange(isConnected) {\n      this.safeSetState({\n        networkAvailable: isConnected\n      });\n    }\n  }, {\n    key: \"processSource\",\n    value: function processSource(source) {\n      var _this3 = this;\n\n      var url = _.get(source, ['uri'], null);\n\n      var options = this.getImageCacheManagerOptions();\n      var imageCacheManager = this.getImageCacheManager();\n      imageCacheManager.downloadAndCacheUrl(url, options).then(function (cachedImagePath) {\n        _this3.safeSetState({\n          cachedImagePath: cachedImagePath\n        });\n      }).catch(function (err) {\n        _this3.safeSetState({\n          cachedImagePath: null,\n          isCacheable: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.isCacheable && !this.state.cachedImagePath) {\n        return this.renderLoader();\n      }\n\n      var props = getImageProps(this.props);\n      var style = this.props.style || styles.image;\n      var source = this.state.isCacheable && this.state.cachedImagePath ? {\n        uri: 'file://' + this.state.cachedImagePath\n      } : this.props.source;\n\n      if (this.props.fallbackSource && !this.state.cachedImagePath) {\n        return this.props.renderImage(_objectSpread(_objectSpread({}, props), {}, {\n          key: (props.key || source.uri) + \"error\",\n          style: style,\n          source: this.props.fallbackSource\n        }));\n      }\n\n      return this.props.renderImage(_objectSpread(_objectSpread({}, props), {}, {\n        key: props.key || source.uri,\n        style: style,\n        source: source\n      }));\n    }\n  }, {\n    key: \"renderLoader\",\n    value: function renderLoader() {\n      var imageProps = getImageProps(this.props);\n      var imageStyle = [this.props.style, styles.loaderPlaceholder];\n\n      var activityIndicatorProps = _.omit(this.props.activityIndicatorProps, ['style']);\n\n      var activityIndicatorStyle = this.props.activityIndicatorProps.style || styles.loader;\n      var LoadingIndicator = this.props.loadingIndicator;\n      var source = this.props.defaultSource;\n\n      if (!source || Platform.OS === 'android' && flattenStyle(imageStyle).borderRadius) {\n        if (LoadingIndicator) {\n          return React.createElement(View, {\n            style: [imageStyle, activityIndicatorStyle],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 21\n            }\n          }, React.createElement(LoadingIndicator, _extends({}, activityIndicatorProps, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 25\n            }\n          })));\n        }\n\n        return React.createElement(ActivityIndicator, _extends({}, activityIndicatorProps, {\n          style: [imageStyle, activityIndicatorStyle],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 17\n          }\n        }));\n      }\n\n      return this.props.renderImage(_objectSpread(_objectSpread({}, imageProps), {}, {\n        style: imageStyle,\n        key: source.uri,\n        source: source,\n        children: LoadingIndicator ? React.createElement(View, {\n          style: [imageStyle, activityIndicatorStyle],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 23\n          }\n        }, React.createElement(LoadingIndicator, _extends({}, activityIndicatorProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 21\n          }\n        }))) : React.createElement(ActivityIndicator, _extends({}, activityIndicatorProps, {\n          style: activityIndicatorStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 23\n          }\n        }))\n      }));\n    }\n  }]);\n\n  return CachedImage;\n}(React.Component);\n\nCachedImage.propTypes = _objectSpread({\n  renderImage: PropTypes.func.isRequired,\n  activityIndicatorProps: PropTypes.object.isRequired\n}, ImageCacheManagerOptionsPropTypes);\nCachedImage.defaultProps = {\n  renderImage: function renderImage(props) {\n    return React.createElement(ImageBackground, _extends({\n      imageStyle: props.style,\n      ref: CACHED_IMAGE_REF\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 36\n      }\n    }));\n  },\n  activityIndicatorProps: {}\n};\nCachedImage.contextTypes = {\n  getImageCacheManager: PropTypes.func\n};\nmodule.exports = CachedImage;","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/node_modules/react-native-cached-image/CachedImage.js"],"names":["_","require","React","PropTypes","ImageCacheManagerOptionsPropTypes","flattenStyle","ReactNative","StyleSheet","flatten","ImageCacheManager","View","ImageBackground","ActivityIndicator","NetInfo","Platform","styles","create","image","backgroundColor","loader","loaderPlaceholder","alignItems","justifyContent","getImageProps","props","omit","CACHED_IMAGE_REF","CachedImage","_isMounted","state","isCacheable","cachedImagePath","networkAvailable","getImageCacheManagerOptions","bind","getImageCacheManager","safeSetState","handleConnectivityChange","processSource","renderLoader","isConnected","addEventListener","fetch","then","source","removeEventListener","nextProps","isEqual","nativeProps","refs","setNativeProps","e","console","error","pick","keys","context","options","newState","setState","url","get","imageCacheManager","downloadAndCacheUrl","catch","err","style","uri","fallbackSource","renderImage","key","imageProps","imageStyle","activityIndicatorProps","activityIndicatorStyle","LoadingIndicator","loadingIndicator","defaultSource","OS","borderRadius","children","Component","propTypes","func","isRequired","object","defaultProps","contextTypes","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst React = require('react');\nconst ReactNative = require('react-native');\n\nconst PropTypes = require('prop-types');\n\nconst ImageCacheManagerOptionsPropTypes = require('./ImageCacheManagerOptionsPropTypes');\n\nconst flattenStyle = ReactNative.StyleSheet.flatten;\n\nconst ImageCacheManager = require('./ImageCacheManager');\n\nconst {\n    View,\n    ImageBackground,\n    ActivityIndicator,\n    NetInfo,\n    Platform,\n    StyleSheet,\n} = ReactNative;\n\nconst styles = StyleSheet.create({\n    image: {\n        backgroundColor: 'transparent'\n    },\n    loader: {\n        backgroundColor: 'transparent',\n    },\n    loaderPlaceholder: {\n        backgroundColor: 'transparent',\n        alignItems: 'center',\n        justifyContent: 'center'\n    }\n});\n\nfunction getImageProps(props) {\n    return _.omit(props, ['source', 'defaultSource', 'fallbackSource', 'LoadingIndicator', 'activityIndicatorProps', 'style', 'useQueryParamsInCacheKey', 'renderImage', 'resolveHeaders']);\n}\n\nconst CACHED_IMAGE_REF = 'cachedImage';\n\nclass CachedImage extends React.Component {\n\n    static propTypes = {\n        renderImage: PropTypes.func.isRequired,\n        activityIndicatorProps: PropTypes.object.isRequired,\n\n        // ImageCacheManager options\n        ...ImageCacheManagerOptionsPropTypes,\n    };\n\n    static defaultProps = {\n            renderImage: props => (<ImageBackground imageStyle={props.style} ref={CACHED_IMAGE_REF} {...props} />),\n            activityIndicatorProps: {},\n    };\n\n    static contextTypes = {\n        getImageCacheManager: PropTypes.func,\n    };\n\n    constructor(props) {\n        super(props);\n        this._isMounted = false;\n        this.state = {\n            isCacheable: true,\n            cachedImagePath: null,\n            networkAvailable: true\n        };\n\n        this.getImageCacheManagerOptions = this.getImageCacheManagerOptions.bind(this);\n        this.getImageCacheManager = this.getImageCacheManager.bind(this);\n        this.safeSetState = this.safeSetState.bind(this);\n        this.handleConnectivityChange = this.handleConnectivityChange.bind(this);\n        this.processSource = this.processSource.bind(this);\n        this.renderLoader = this.renderLoader.bind(this);\n    }\n\n    componentWillMount() {\n        this._isMounted = true;\n        NetInfo.isConnected.addEventListener('connectionChange', this.handleConnectivityChange);\n        // initial\n        NetInfo.isConnected.fetch()\n            .then(isConnected => {\n                this.safeSetState({\n                    networkAvailable: isConnected\n                });\n            });\n\n        this.processSource(this.props.source);\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n        NetInfo.isConnected.removeEventListener('connectionChange', this.handleConnectivityChange);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (!_.isEqual(this.props.source, nextProps.source)) {\n            this.processSource(nextProps.source);\n        }\n    }\n\n    setNativeProps(nativeProps) {\n        try {\n            this.refs[CACHED_IMAGE_REF].setNativeProps(nativeProps);\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    getImageCacheManagerOptions() {\n        return _.pick(this.props, _.keys(ImageCacheManagerOptionsPropTypes));\n    }\n\n    getImageCacheManager() {\n        // try to get ImageCacheManager from context\n        if (this.context && this.context.getImageCacheManager) {\n            return this.context.getImageCacheManager();\n        }\n        // create a new one if context is not available\n        const options = this.getImageCacheManagerOptions();\n        return ImageCacheManager(options);\n    }\n\n    safeSetState(newState) {\n        if (!this._isMounted) {\n            return;\n        }\n        return this.setState(newState);\n    }\n\n    handleConnectivityChange(isConnected) {\n        this.safeSetState({\n            networkAvailable: isConnected\n        });\n    }\n\n    processSource(source) {\n        const url = _.get(source, ['uri'], null);\n        const options = this.getImageCacheManagerOptions();\n        const imageCacheManager = this.getImageCacheManager();\n\n        imageCacheManager.downloadAndCacheUrl(url, options)\n            .then(cachedImagePath => {\n                this.safeSetState({\n                    cachedImagePath\n                });\n            })\n            .catch(err => {\n                // console.warn(err);\n                this.safeSetState({\n                    cachedImagePath: null,\n                    isCacheable: false\n                });\n            });\n    }\n\n    render() {\n        if (this.state.isCacheable && !this.state.cachedImagePath) {\n            return this.renderLoader();\n        }\n        const props = getImageProps(this.props);\n        const style = this.props.style || styles.image;\n        const source = (this.state.isCacheable && this.state.cachedImagePath) ? {\n            uri: 'file://' + this.state.cachedImagePath\n        } : this.props.source;\n        if (this.props.fallbackSource && !this.state.cachedImagePath) {\n            return this.props.renderImage({\n                ...props,\n                key: `${props.key || source.uri}error`,\n                style,\n                source: this.props.fallbackSource\n            });\n        }\n        return this.props.renderImage({\n            ...props,\n            key: props.key || source.uri,\n            style,\n            source\n        });\n    }\n\n    renderLoader() {\n        const imageProps = getImageProps(this.props);\n        const imageStyle = [this.props.style, styles.loaderPlaceholder];\n\n        const activityIndicatorProps = _.omit(this.props.activityIndicatorProps, ['style']);\n        const activityIndicatorStyle = this.props.activityIndicatorProps.style || styles.loader;\n\n        const LoadingIndicator = this.props.loadingIndicator;\n\n        const source = this.props.defaultSource;\n\n        // if the imageStyle has borderRadius it will break the loading image view on android\n        // so we only show the ActivityIndicator\n        if (!source || (Platform.OS === 'android' && flattenStyle(imageStyle).borderRadius)) {\n            if (LoadingIndicator) {\n                return (\n                    <View style={[imageStyle, activityIndicatorStyle]}>\n                        <LoadingIndicator {...activityIndicatorProps} />\n                    </View>\n                );\n            }\n            return (\n                <ActivityIndicator\n                    {...activityIndicatorProps}\n                    style={[imageStyle, activityIndicatorStyle]}/>\n            );\n        }\n        // otherwise render an image with the defaultSource with the ActivityIndicator on top of it\n        return this.props.renderImage({\n            ...imageProps,\n            style: imageStyle,\n            key: source.uri,\n            source,\n            children: (\n                LoadingIndicator\n                    ? <View style={[imageStyle, activityIndicatorStyle]}>\n                    <LoadingIndicator {...activityIndicatorProps} />\n                </View>\n                    : <ActivityIndicator\n                    {...activityIndicatorProps}\n                    style={activityIndicatorStyle}/>\n            )\n        });\n    }\n\n}\n\nmodule.exports = CachedImage;\n"]},"metadata":{},"sourceType":"script"}