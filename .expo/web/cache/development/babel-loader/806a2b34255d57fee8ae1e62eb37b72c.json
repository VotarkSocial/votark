{"ast":null,"code":"var _jsxFileName = \"/home/thecoder/Documentos/votark/votark/src/components/Posts/index.js\";\nimport { connect } from 'react-redux';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport * as selectors from \"../../reducers\";\nimport React from 'react';\nimport styles from \"./styles\";\nimport { URL, STATIC_URL } from \"../../../configuration\";\nimport { Actions } from 'react-native-router-flux';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { colors } from \"../../../configuration\";\nimport { logout } from \"../../actions/auth\";\nimport { ScrollView } from 'react-native-gesture-handler';\nimport FitImage from 'react-native-fit-image';\nimport { gridList } from \"../../utils/gridList\";\n\nvar Posts = function Posts(_ref) {\n  var posts = _ref.posts,\n      isFetching = _ref.isFetching,\n      fetchedOnce = _ref.fetchedOnce;\n  return React.createElement(ScrollView, {\n    style: styles.posts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, console.log(posts), posts.map(function (row) {\n    return React.createElement(View, {\n      style: styles.row,\n      key: row[0].id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 25\n      }\n    }, row.map(function (post) {\n      return React.createElement(View, {\n        key: post.id,\n        style: styles.post,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 37\n        }\n      }, \"@\", post.username, \" \"), React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 37\n        }\n      }, \"topic:\", post.topicname, \" \"), React.createElement(FitImage, {\n        style: styles.image,\n        source: {\n          uri: STATIC_URL + post.image\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 37\n        }\n      }), React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 37\n        }\n      }, \"victories:\", post.victories, \" \"), React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 37\n        }\n      }, \"clasification:\", post.order, \" \"));\n    }));\n  }));\n};\n\nexport default connect(function (state, _ref2) {\n  var posts = _ref2.posts;\n  return {\n    posts: gridList(posts),\n    isFetching: selectors.isFetchingPost(state),\n    fetchedOnce: selectors.getFetchedOnce(state)\n  };\n}, function (dispatch) {\n  return {};\n})(Posts);","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/src/components/Posts/index.js"],"names":["connect","selectors","React","styles","URL","STATIC_URL","Actions","LinearGradient","colors","logout","ScrollView","FitImage","gridList","Posts","posts","isFetching","fetchedOnce","console","log","map","row","id","post","text","username","topicname","image","uri","victories","order","state","isFetchingPost","getFetchedOnce","dispatch"],"mappings":";AAAA,SAASA,OAAT,QAAwB,aAAxB;;;;;AAEA,OAAO,KAAKC,SAAZ;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP;AACA,SAASC,GAAT,EAAcC,UAAd;AACA,SAASC,OAAT,QAAwB,0BAAxB;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,MAAT;AACA,SAASC,MAAT;AACA,SAASC,UAAT,QAA2B,8BAA3B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,QAAT;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,MAAEC,KAAF,QAAEA,KAAF;AAAA,MAASC,UAAT,QAASA,UAAT;AAAA,MAAqBC,WAArB,QAAqBA,WAArB;AAAA,SACF,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEb,MAAM,CAACW,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKG,OAAO,CAACC,GAAR,CAAYJ,KAAZ,CADL,EAGQA,KAAK,CAACK,GAAN,CAAU,UAAAC,GAAG;AAAA,WACT,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEjB,MAAM,CAACiB,GAApB;AAAyB,MAAA,GAAG,EAAEA,GAAG,CAAC,CAAD,CAAH,CAAOC,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,GAAG,CAACD,GAAJ,CAAQ,UAAAG,IAAI;AAAA,aACT,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,IAAI,CAACD,EAAhB;AAAoB,QAAA,KAAK,EAAElB,MAAM,CAACmB,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEnB,MAAM,CAACoB,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA4BD,IAAI,CAACE,QAAjC,MADJ,EAEI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAErB,MAAM,CAACoB,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAiCD,IAAI,CAACG,SAAtC,MAFJ,EAGI,oBAAC,QAAD;AACI,QAAA,KAAK,EAAEtB,MAAM,CAACuB,KADlB;AAEI,QAAA,MAAM,EAAE;AAACC,UAAAA,GAAG,EAAEtB,UAAU,GAACiB,IAAI,CAACI;AAAtB,SAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAOI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEvB,MAAM,CAACoB,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAqCD,IAAI,CAACM,SAA1C,MAPJ,EAQI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEzB,MAAM,CAACoB,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAyCD,IAAI,CAACO,KAA9C,MARJ,CADS;AAAA,KAAZ,CADL,CADS;AAAA,GAAb,CAHR,CADE;AAAA,CAAd;;AAuBA,eAAe7B,OAAO,CACpB,UAAC8B,KAAD;AAAA,MAAShB,KAAT,SAASA,KAAT;AAAA,SAAqB;AACjBA,IAAAA,KAAK,EAACF,QAAQ,CAACE,KAAD,CADG;AAEjBC,IAAAA,UAAU,EAAEd,SAAS,CAAC8B,cAAV,CAAyBD,KAAzB,CAFK;AAGjBd,IAAAA,WAAW,EAAEf,SAAS,CAAC+B,cAAV,CAAyBF,KAAzB;AAHI,GAArB;AAAA,CADoB,EAMpB,UAAAG,QAAQ;AAAA,SAAK,EAAL;AAAA,CANY,CAAP,CASbpB,KATa,CAAf","sourcesContent":["import { connect } from 'react-redux';\nimport {Text, View, Image, TouchableOpacity } from 'react-native';\nimport * as selectors from '../../reducers'\nimport React from 'react';\nimport styles from './styles'\nimport { URL, STATIC_URL } from '../../../configuration'\nimport { Actions } from 'react-native-router-flux';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { colors } from '../../../configuration';\nimport { logout } from '../../actions/auth';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport FitImage from 'react-native-fit-image';\nimport { gridList } from '../../utils/gridList';\n\nconst Posts = ({posts, isFetching, fetchedOnce}) => (\n            <ScrollView style={styles.posts}>\n                {console.log(posts)}\n                {\n                    posts.map(row =>\n                        <View style={styles.row} key={row[0].id}>\n                            {row.map(post => \n                                <View key={post.id} style={styles.post}>\n                                    <Text style={styles.text}>@{post.username} </Text>\n                                    <Text style={styles.text}>topic:{post.topicname} </Text>\n                                    <FitImage  \n                                        style={styles.image}\n                                        source={{uri: STATIC_URL+post.image}} \n                                    />\n                                    <Text style={styles.text}>victories:{post.victories} </Text>\n                                    <Text style={styles.text}>clasification:{post.order} </Text>\n                                </View>\n                            )}\n                        </View>\n                        )}\n            </ScrollView>\n    )\n\nexport default connect(\n  (state, {posts}) => ({\n      posts:gridList(posts),\n      isFetching: selectors.isFetchingPost(state),\n      fetchedOnce: selectors.getFetchedOnce(state)\n  }),\n  dispatch => ({\n    \n  }),\n)(Posts);\n"]},"metadata":{},"sourceType":"module"}