{"ast":null,"code":"import jwtDecode from 'jwt-decode';\nimport { combineReducers } from 'redux';\nimport * as types from \"../types/auth\";\n\nvar token = function token() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.AUTHENTICATION_STARTED:\n      {\n        return null;\n      }\n\n    case types.AUTHENTICATION_COMPLETED:\n      {\n        return action.payload.token;\n      }\n\n    case types.TOKEN_REFRESH_COMPLETED:\n      {\n        return action.payload.newToken;\n      }\n\n    case types.AUTHENTICATION_FAILED:\n      {\n        return null;\n      }\n\n    case types.AUTHENTICATION_IDENTITY_CLEARED:\n      {\n        return null;\n      }\n  }\n\n  return state;\n};\n\nvar decoded = function decoded() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.AUTHENTICATION_STARTED:\n      {\n        return null;\n      }\n\n    case types.AUTHENTICATION_COMPLETED:\n      {\n        return jwtDecode(action.payload.token);\n      }\n\n    case types.TOKEN_REFRESH_COMPLETED:\n      {\n        console.log(\"SI LLEGA?\", jwtDecode(action.payload.newToken));\n        return jwtDecode(action.payload.newToken);\n      }\n\n    case types.AUTHENTICATION_FAILED:\n      {\n        return null;\n      }\n\n    case types.AUTHENTICATION_IDENTITY_CLEARED:\n      {\n        return null;\n      }\n  }\n\n  return state;\n};\n\nvar isAuthenticating = function isAuthenticating() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.AUTHENTICATION_STARTED:\n      {\n        return true;\n      }\n\n    case types.AUTHENTICATION_COMPLETED:\n      {\n        return false;\n      }\n\n    case types.AUTHENTICATION_FAILED:\n      {\n        return false;\n      }\n  }\n\n  return state;\n};\n\nvar isRegistrating = function isRegistrating() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.REGISTRATION_STARTED:\n      {\n        return true;\n      }\n\n    case types.REGISTRATION_COMPLETED:\n      {\n        return false;\n      }\n\n    case types.REGISTRATION_FAILED:\n      {\n        return false;\n      }\n  }\n\n  return state;\n};\n\nvar error = function error() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.AUTHENTICATION_STARTED:\n      {\n        return null;\n      }\n\n    case types.AUTHENTICATION_COMPLETED:\n      {\n        return null;\n      }\n\n    case types.AUTHENTICATION_FAILED:\n      {\n        return action.payload.error;\n      }\n  }\n\n  return state;\n};\n\nvar error_signup = function error_signup() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.REGISTRATION_STARTED:\n      {\n        return null;\n      }\n\n    case types.REGISTRATION_COMPLETED:\n      {\n        return null;\n      }\n\n    case types.REGISTRATION_FAILED:\n      {\n        return action.payload.error;\n      }\n  }\n\n  return state;\n};\n\nvar isRefreshing = function isRefreshing() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.TOKEN_REFRESH_STARTED:\n      {\n        return true;\n      }\n\n    case types.TOKEN_REFRESH_COMPLETED:\n      {\n        return false;\n      }\n\n    case types.TOKEN_REFRESH_FAILED:\n      {\n        return false;\n      }\n  }\n\n  return state;\n};\n\nvar refreshingError = function refreshingError() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.TOKEN_REFRESH_STARTED:\n      {\n        return null;\n      }\n\n    case types.TOKEN_REFRESH_COMPLETED:\n      {\n        return null;\n      }\n\n    case types.TOKEN_REFRESH_FAILED:\n      {\n        return action.payload.error;\n      }\n  }\n\n  return state;\n};\n\nvar auth = combineReducers({\n  token: token,\n  decoded: decoded,\n  isAuthenticating: isAuthenticating,\n  isRefreshing: isRefreshing,\n  isRegistrating: isRegistrating,\n  error_signup: error_signup,\n  error: error,\n  refreshingError: refreshingError\n});\nexport default auth;\nexport var getAuthToken = function getAuthToken(state) {\n  return state.token;\n};\nexport var getIsAuthenticating = function getIsAuthenticating(state) {\n  return state.isAuthenticating;\n};\nexport var getAuthenticatingError = function getAuthenticatingError(state) {\n  return state.error;\n};\nexport var getAuthUserID = function getAuthUserID(state) {\n  return state.decoded ? state.decoded.user_id : null;\n};\nexport var getAuthExpiration = function getAuthExpiration(state) {\n  return state.decoded ? state.decoded.exp : null;\n};\nexport var getAuthUsername = function getAuthUsername(state) {\n  return state.decoded ? state.decoded.username : null;\n};\nexport var getIsRefreshingToken = function getIsRefreshingToken(state) {\n  return state.isRefreshing;\n};\nexport var getRefreshingError = function getRefreshingError(state) {\n  return state.refreshingError;\n};","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/src/reducers/auth.js"],"names":["jwtDecode","combineReducers","types","token","state","action","type","AUTHENTICATION_STARTED","AUTHENTICATION_COMPLETED","payload","TOKEN_REFRESH_COMPLETED","newToken","AUTHENTICATION_FAILED","AUTHENTICATION_IDENTITY_CLEARED","decoded","console","log","isAuthenticating","isRegistrating","REGISTRATION_STARTED","REGISTRATION_COMPLETED","REGISTRATION_FAILED","error","error_signup","isRefreshing","TOKEN_REFRESH_STARTED","TOKEN_REFRESH_FAILED","refreshingError","auth","getAuthToken","getIsAuthenticating","getAuthenticatingError","getAuthUserID","user_id","getAuthExpiration","exp","getAuthUsername","username","getIsRefreshingToken","getRefreshingError"],"mappings":"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","sourcesContent":["import jwtDecode from 'jwt-decode';\nimport { combineReducers } from 'redux';\n\nimport * as types from '../types/auth';\n\n\nconst token = (state = null, action) => {\n  switch(action.type) {\n    case types.AUTHENTICATION_STARTED: {\n      return null;\n    }\n    case types.AUTHENTICATION_COMPLETED: {\n      return action.payload.token;\n    }\n    case types.TOKEN_REFRESH_COMPLETED: {\n      return action.payload.newToken;\n    }\n    case types.AUTHENTICATION_FAILED: {\n      return null;\n    }\n    case types.AUTHENTICATION_IDENTITY_CLEARED: {\n      return null;\n    }\n  }\n\n  return state;\n};\n\nconst decoded = (state = null, action) => {\n  switch(action.type) {\n    case types.AUTHENTICATION_STARTED: {\n      return null;\n    }\n    case types.AUTHENTICATION_COMPLETED: {\n      return jwtDecode(action.payload.token);\n    }\n    case types.TOKEN_REFRESH_COMPLETED: {\n      console.log(\"SI LLEGA?\", jwtDecode(action.payload.newToken))\n      return jwtDecode(action.payload.newToken);\n    }\n    case types.AUTHENTICATION_FAILED: {\n      return null;\n    }\n    case types.AUTHENTICATION_IDENTITY_CLEARED: {\n      return null;\n    }\n  }\n\n  return state;\n};\n\nconst isAuthenticating = (state = false, action) => {\n  switch(action.type) {\n    case types.AUTHENTICATION_STARTED: {\n      return true;\n    }\n    case types.AUTHENTICATION_COMPLETED: {\n      return false;\n    }\n    case types.AUTHENTICATION_FAILED: {\n      return false;\n    }\n  }\n\n  return state;\n};\n\nconst isRegistrating = (state = false, action) => {\n  switch(action.type) {\n    case types.REGISTRATION_STARTED: {\n      return true;\n    }\n    case types.REGISTRATION_COMPLETED: {\n      return false;\n    }\n    case types.REGISTRATION_FAILED: {\n      return false;\n    }\n  }\n\n  return state;\n};\n\nconst error = (state = null, action) => {\n  switch(action.type) {\n    case types.AUTHENTICATION_STARTED: {\n      return null;\n    }\n    case types.AUTHENTICATION_COMPLETED: {\n      return null;\n    }\n    case types.AUTHENTICATION_FAILED: {\n      return action.payload.error;\n    }\n  }\n\n  return state;\n};\n\nconst error_signup = (state = null, action) => {\n  switch(action.type) {\n    case types.REGISTRATION_STARTED: {\n      return null;\n    }\n    case types.REGISTRATION_COMPLETED: {\n      return null;\n    }\n    case types.REGISTRATION_FAILED: {\n      return action.payload.error;\n    }\n  }\n\n  return state;\n};\n\nconst isRefreshing = (state = false, action) => {\n  switch(action.type) {\n    case types.TOKEN_REFRESH_STARTED: {\n      return true;\n    }\n    case types.TOKEN_REFRESH_COMPLETED: {\n      return false;\n    }\n    case types.TOKEN_REFRESH_FAILED: {\n      return false;\n    }\n  }\n\n  return state;\n};\n\nconst refreshingError = (state = null, action) => {\n  switch(action.type) {\n    case types.TOKEN_REFRESH_STARTED: {\n      return null;\n    }\n    case types.TOKEN_REFRESH_COMPLETED: {\n      return null;\n    }\n    case types.TOKEN_REFRESH_FAILED: {\n      return action.payload.error;\n    }\n  }\n\n  return state;\n};\n\nconst auth = combineReducers({\n  token,\n  decoded,\n  isAuthenticating,\n  isRefreshing,\n  isRegistrating,\n  error_signup,\n  error,\n  refreshingError,\n});\n\n\nexport default auth;\n\n\nexport const getAuthToken = state => state.token;\nexport const getIsAuthenticating = state => state.isAuthenticating;\nexport const getAuthenticatingError = state => state.error;\nexport const getAuthUserID = state => state.decoded ? state.decoded.user_id : null;\nexport const getAuthExpiration = state => state.decoded ? state.decoded.exp : null;\nexport const getAuthUsername = state => state.decoded ? state.decoded.username : null;\nexport const getIsRefreshingToken = state => state.isRefreshing;\nexport const getRefreshingError = state => state.refreshingError;\n"]},"metadata":{},"sourceType":"module"}