{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/thecoder/Documentos/votark/votark/src/components/Login/index.js\";\nimport { connect } from 'react-redux';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { v4 as uuidv4 } from 'uuid';\nimport * as actions from \"../../actions/auth\";\nimport * as selectors from \"../../reducers\";\nimport React, { useState } from 'react';\nimport styles from \"./styles\";\n\nvar Login = function Login(_ref) {\n  var onSubmit = _ref.onSubmit,\n      isLoading = _ref.isLoading,\n      _ref$error = _ref.error,\n      error = _ref$error === void 0 ? null : _ref$error;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      changeUsername = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      changePassword = _useState4[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, 'VOTARK')), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Username\",\n    value: username,\n    onChange: function onChange(e) {\n      return changeUsername(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  })), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    value: password,\n    onChange: function onChange(e) {\n      return changePassword(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  })), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, error && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, error)), isLoading ? React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, 'Cargando...') : React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: function onClick() {\n      return onSubmit(username, password);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, 'LOGIN')));\n};\n\nexport default connect(function (state) {\n  return {\n    isLoading: selectors.getIsAuthenticating(state),\n    error: selectors.getAuthenticatingError(state)\n  };\n}, function (dispatch) {\n  return {\n    onSubmit: function onSubmit(username, password) {\n      dispatch(actions.startLogin(username, password));\n    }\n  };\n})(Login);","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/src/components/Login/index.js"],"names":["connect","v4","uuidv4","actions","selectors","React","useState","styles","Login","onSubmit","isLoading","error","username","changeUsername","password","changePassword","container","text","e","target","value","state","getIsAuthenticating","getAuthenticatingError","dispatch","startLogin"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,aAAxB;;;AAEA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAO,KAAKC,OAAZ;AACA,OAAO,KAAKC,SAAZ;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAIR;AAAA,MAHJC,QAGI,QAHJA,QAGI;AAAA,MAFJC,SAEI,QAFJA,SAEI;AAAA,wBADJC,KACI;AAAA,MADJA,KACI,2BADI,IACJ;;AAAA,kBAC+BL,QAAQ,CAAC,EAAD,CADvC;AAAA;AAAA,MACGM,QADH;AAAA,MACaC,cADb;;AAAA,mBAE+BP,QAAQ,CAAC,EAAD,CAFvC;AAAA;AAAA,MAEGQ,QAFH;AAAA,MAEaC,cAFb;;AAGJ,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACS,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAACU,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAW,QAAX,CADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,KAAK,EAAEL,QAHT;AAIE,IAAA,QAAQ,EAAE,kBAAAM,CAAC;AAAA,aAAIL,cAAc,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB;AAAA,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,KAAK,EAAEN,QAHT;AAIE,IAAA,QAAQ,EAAE,kBAAAI,CAAC;AAAA,aAAIH,cAAc,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB;AAAA,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAZF,EAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEET,KAAK,IACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUA,KAAV,CADF,CAHJ,EASID,SAAS,GACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAS,aAAT,CADO,GAGP;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAC3B;AAAA,aAAMD,QAAQ,CAACG,QAAD,EAAWE,QAAX,CAAd;AAAA,KADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGG,OAHH,CAZN,CApBF,CADF;AA2CD,CAlDD;;AAoDA,eAAed,OAAO,CACpB,UAAAqB,KAAK;AAAA,SAAK;AACRX,IAAAA,SAAS,EAAEN,SAAS,CAACkB,mBAAV,CAA8BD,KAA9B,CADH;AAERV,IAAAA,KAAK,EAAEP,SAAS,CAACmB,sBAAV,CAAiCF,KAAjC;AAFC,GAAL;AAAA,CADe,EAKpB,UAAAG,QAAQ;AAAA,SAAK;AACXf,IAAAA,QADW,oBACFG,QADE,EACQE,QADR,EACkB;AAC3BU,MAAAA,QAAQ,CAACrB,OAAO,CAACsB,UAAR,CAAmBb,QAAnB,EAA6BE,QAA7B,CAAD,CAAR;AACD;AAHU,GAAL;AAAA,CALY,CAAP,CAUbN,KAVa,CAAf","sourcesContent":["import { connect } from 'react-redux';\nimport { Text, View } from 'react-native';\nimport { v4 as uuidv4 } from 'uuid';\nimport * as actions from '../../actions/auth';\nimport * as selectors from '../../reducers';\nimport React, { useState } from 'react';\nimport styles from './styles'\n\nconst Login = ({\n  onSubmit,\n  isLoading,\n  error = null,\n}) => {\n  const [username, changeUsername] = useState('');\n  const [password, changePassword] = useState('');\n  return (\n    <View style={styles.container}>\n      <Text style={styles.text}>\n        <strong >{ 'VOTARK' }</strong>\n      </Text>\n      <p>\n        <input\n          type=\"text\"\n          placeholder=\"Username\"\n          value={username}\n          onChange={e => changeUsername(e.target.value)}\n        />\n      </p>\n      <p>\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={e => changePassword(e.target.value)}\n        />\n      </p>\n      <p>\n        {\n        error && (\n          <p>\n            <strong>{ error }</strong>\n          </p>\n        )\n      }\n        {\n          isLoading ? (\n            <strong>{'Cargando...'}</strong>\n          ) : (\n            <button type=\"submit\" onClick={\n              () => onSubmit(username, password)\n            }>\n              {'LOGIN'}\n            </button>\n          )\n        }\n      </p>\n    </View>\n  );\n} \n\nexport default connect(\n  state => ({\n    isLoading: selectors.getIsAuthenticating(state),\n    error: selectors.getAuthenticatingError(state),\n  }),\n  dispatch => ({\n    onSubmit(username, password) {\n      dispatch(actions.startLogin(username, password));\n    },\n  }),\n)(Login);\n"]},"metadata":{},"sourceType":"module"}