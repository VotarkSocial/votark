{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/thecoder/Documentos/votark/votark/node_modules/react-native-screens/src/screens.web.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nvar ENABLE_SCREENS = true;\nexport function enableScreens() {\n  var shouldEnableScreens = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  ENABLE_SCREENS = shouldEnableScreens;\n}\nexport function screensEnabled() {\n  return ENABLE_SCREENS;\n}\nexport var NativeScreen = function (_React$Component) {\n  _inherits(NativeScreen, _React$Component);\n\n  var _super = _createSuper(NativeScreen);\n\n  function NativeScreen() {\n    _classCallCheck(this, NativeScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(NativeScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          active = _this$props.active,\n          style = _this$props.style,\n          rest = _objectWithoutProperties(_this$props, [\"active\", \"style\"]);\n\n      return React.createElement(View, _extends({\n        style: [style, ENABLE_SCREENS && !active ? {\n          display: 'none'\n        } : null]\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return NativeScreen;\n}(React.Component);\nexport var Screen = Animated.createAnimatedComponent(NativeScreen);\nexport var ScreenContainer = View;\nexport var NativeScreenContainer = View;","map":{"version":3,"sources":["/home/thecoder/Documentos/votark/votark/node_modules/react-native-screens/src/screens.web.js"],"names":["React","ENABLE_SCREENS","enableScreens","shouldEnableScreens","screensEnabled","NativeScreen","props","active","style","rest","display","Component","Screen","Animated","createAnimatedComponent","ScreenContainer","View","NativeScreenContainer"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,IAAIC,cAAc,GAAG,IAArB;AAEA,OAAO,SAASC,aAAT,GAAmD;AAAA,MAA5BC,mBAA4B,uEAAN,IAAM;AACxDF,EAAAA,cAAc,GAAGE,mBAAjB;AACD;AAED,OAAO,SAASC,cAAT,GAA0B;AAC/B,SAAOH,cAAP;AACD;AAED,WAAaI,YAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BACW;AAAA,wBAC4B,KAAKC,KADjC;AAAA,UACCC,MADD,eACCA,MADD;AAAA,UACSC,KADT,eACSA,KADT;AAAA,UACmBC,IADnB;;AAGP,aACE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE,CAACD,KAAD,EAAQP,cAAc,IAAI,CAACM,MAAnB,GAA4B;AAAEG,UAAAA,OAAO,EAAE;AAAX,SAA5B,GAAkD,IAA1D;AADT,SAEMD,IAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAMD;AAVH;;AAAA;AAAA,EAAkCT,KAAK,CAACW,SAAxC;AAaA,OAAO,IAAMC,MAAM,GAAGC,QAAQ,CAACC,uBAAT,CAAiCT,YAAjC,CAAf;AAEP,OAAO,IAAMU,eAAe,GAAGC,IAAxB;AAEP,OAAO,IAAMC,qBAAqB,GAAGD,IAA9B","sourcesContent":["import React from 'react';\nimport { Animated, View } from 'react-native';\n\nlet ENABLE_SCREENS = true;\n\nexport function enableScreens(shouldEnableScreens = true) {\n  ENABLE_SCREENS = shouldEnableScreens;\n}\n\nexport function screensEnabled() {\n  return ENABLE_SCREENS;\n}\n\nexport class NativeScreen extends React.Component {\n  render() {\n    const { active, style, ...rest } = this.props;\n\n    return (\n      <View\n        style={[style, ENABLE_SCREENS && !active ? { display: 'none' } : null]}\n        {...rest}\n      />\n    );\n  }\n}\n\nexport const Screen = Animated.createAnimatedComponent(NativeScreen);\n\nexport const ScreenContainer = View;\n\nexport const NativeScreenContainer = View;\n"]},"metadata":{},"sourceType":"module"}